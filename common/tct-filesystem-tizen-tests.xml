<?xml version="1.0"?>
<test_definition>
    <suite launcher="xwalk" name="00-common/E0-crosswalk">
        <set name="common/crosswalk/deviceapi/tct-filesystem-tizen-tests">
            <testcase id="00-E0-01-0C-01-FileArraySuccessCallback_notexist" name="01-FileArraySuccessCallback_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Interface FileArraySuccessCallback should not be accessible - Description: Interface FileArraySuccessCallback should not be accessible">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Interface FileArraySuccessCallback should not be accessible - Description: Interface FileArraySuccessCallback should not be accessible]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileArraySuccessCallback_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-02-FileArraySuccessCallback_onsuccess" name="02-FileArraySuccessCallback_onsuccess" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Test whether FileArraySuccessCallback::onsuccess is called with valid argument - Description: Test whether FileArraySuccessCallback::onsuccess is called with valid argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Test whether FileArraySuccessCallback::onsuccess is called with valid argument - Description: Test whether FileArraySuccessCallback::onsuccess is called with valid argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileArraySuccessCallback_onsuccess.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-03-FileStreamSuccessCallback_notexist" name="03-FileStreamSuccessCallback_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Interface FileStreamSuccessCallback should not be accessible - Description: Interface FileStreamSuccessCallback should not be accessible">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Interface FileStreamSuccessCallback should not be accessible - Description: Interface FileStreamSuccessCallback should not be accessible]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStreamSuccessCallback_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-04-FileStreamSuccessCallback_onsuccess" name="04-FileStreamSuccessCallback_onsuccess" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Test whether FileStreamSuccessCallback::onsuccess is called with argument of proper type - Description: Test whether FileStreamSuccessCallback::onsuccess is called with argument of proper type">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Test whether FileStreamSuccessCallback::onsuccess is called with argument of proper type - Description: Test whether FileStreamSuccessCallback::onsuccess is called with argument of proper type]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStreamSuccessCallback_onsuccess.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-05-FileStream_bytesAvailable_attribute" name="05-FileStream_bytesAvailable_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::bytesAvailable attribute exist, is of proper type - Description: Check if FileStream::bytesAvailable attribute exist, is of proper type">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::bytesAvailable attribute exist, is of proper type - Description: Check if FileStream::bytesAvailable attribute exist, is of proper type]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_bytesAvailable_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-06-FileStream_close" name="06-FileStream_close" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::close() method works - Description: Check if FileStream::close() method works">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::close() method works - Description: Check if FileStream::close() method works]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_close.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-07-FileStream_close_exist" name="07-FileStream_close_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::close() method exists - Description: Check if FileStream::close() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::close() method exists - Description: Check if FileStream::close() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_close_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-08-FileStream_close_extra_argument" name="08-FileStream_close_extra_argument" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::close() method can be called with extra arguments - Description: Check if FileStream::close() method can be called with extra arguments">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::close() method can be called with extra arguments - Description: Check if FileStream::close() method can be called with extra arguments]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_close_extra_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-09-FileStream_eof_attribute" name="09-FileStream_eof_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::eof attribute exists, is Boolean - Description: Check if FileStream::eof attribute exists, is Boolean">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::eof attribute exists, is Boolean - Description: Check if FileStream::eof attribute exists, is Boolean]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_eof_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0A-FileStream_extend" name="0A-FileStream_extend" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Test whether instance of FileStream can be extended with new attribute - Description: Test whether instance of FileStream can be extended with new attribute">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Test whether instance of FileStream can be extended with new attribute - Description: Test whether instance of FileStream can be extended with new attribute]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_extend.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0B-FileStream_notexist" name="0B-FileStream_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Interface FileStream should not be accessible - Description: Interface FileStream should not be accessible">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Interface FileStream should not be accessible - Description: Interface FileStream should not be accessible]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0C-FileStream_position_attribute" name="0C-FileStream_position_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::position attribute exists, is of proper type, can be changed - Description: Check if FileStream::position attribute exists, is of proper type, can be changed">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::position attribute exists, is of proper type, can be changed - Description: Check if FileStream::position attribute exists, is of proper type, can be changed]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_position_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0D-FileStream_read" name="0D-FileStream_read" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::read() method works properly - Description: Check if FileStream::read() method works properly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::read() method works properly - Description: Check if FileStream::read() method works properly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_read.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0E-FileStream_readBase64" name="0E-FileStream_readBase64" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::readBase64() method works - Description: Check if FileStream::readBase64() method works">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::readBase64() method works - Description: Check if FileStream::readBase64() method works]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_readBase64.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0F-FileStream_readBase64_exist" name="0F-FileStream_readBase64_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::readBase64() method exists - Description: Check if FileStream::readBase64() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::readBase64() method exists - Description: Check if FileStream::readBase64() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_readBase64_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0G-FileStream_readBase64_without_r_permission" name="0G-FileStream_readBase64_without_r_permission" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::readBase64() throws exception when reading from a file opened in 'w' mode - Description: Check if FileStream::readBase64() throws exception when reading from a file opened in 'w' mode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::readBase64() throws exception when reading from a file opened in 'w' mode - Description: Check if FileStream::readBase64() throws exception when reading from a file opened in 'w' mode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_readBase64_without_r_permission.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0H-FileStream_readBase64_writeFile" name="0H-FileStream_readBase64_writeFile" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create a new file, write content to it, and then read the content of the file as base64 - Description: Check if you can create a new file, write content to it, and then read the content of the file as base64">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create a new file, write content to it, and then read the content of the file as base64 - Description: Check if you can create a new file, write content to it, and then read the content of the file as base64]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_readBase64_writeFile.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0I-FileStream_readBytes" name="0I-FileStream_readBytes" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::readBytes() method works properly - Description: Check if FileStream::readBytes() method works properly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::readBytes() method works properly - Description: Check if FileStream::readBytes() method works properly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_readBytes.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0J-FileStream_readBytes_exist" name="0J-FileStream_readBytes_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::readBytes() method exists - Description: Check if FileStream::readBytes() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::readBytes() method exists - Description: Check if FileStream::readBytes() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_readBytes_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0K-FileStream_readBytes_without_r_permission" name="0K-FileStream_readBytes_without_r_permission" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::readBytes() throws exception when reading from a file opened in 'w' mode - Description: Check if FileStream::readBytes() throws exception when reading from a file opened in 'w' mode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::readBytes() throws exception when reading from a file opened in 'w' mode - Description: Check if FileStream::readBytes() throws exception when reading from a file opened in 'w' mode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_readBytes_without_r_permission.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0L-FileStream_readBytes_writeFile" name="0L-FileStream_readBytes_writeFile" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create a new file, write content to it, and then read the content of the file as a byte array - Description: Check if you can create a new file, write content to it, and then read the content of the file as a byte array">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create a new file, write content to it, and then read the content of the file as a byte array - Description: Check if you can create a new file, write content to it, and then read the content of the file as a byte array]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_readBytes_writeFile.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0M-FileStream_read_exist" name="0M-FileStream_read_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::read() method exists - Description: Check if FileStream::read() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::read() method exists - Description: Check if FileStream::read() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_read_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0N-FileStream_read_without_r_permission" name="0N-FileStream_read_without_r_permission" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::read() throws exception when reading from a file opened in 'w' mode - Description: Check if FileStream::read() throws exception when reading from a file opened in 'w' mode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::read() throws exception when reading from a file opened in 'w' mode - Description: Check if FileStream::read() throws exception when reading from a file opened in 'w' mode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_read_without_r_permission.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0O-FileStream_read_writeFile" name="0O-FileStream_read_writeFile" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create a new file, write content to it, and then read the content of the file - Description: Check if you can create a new file, write content to it, and then read the content of the file">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create a new file, write content to it, and then read the content of the file - Description: Check if you can create a new file, write content to it, and then read the content of the file]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_read_writeFile.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0P-FileStream_write" name="0P-FileStream_write" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::write() method works properly - Description: Check if FileStream::write() method works properly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::write() method works properly - Description: Check if FileStream::write() method works properly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_write.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0Q-FileStream_writeBase64" name="0Q-FileStream_writeBase64" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::writeBase64() method works properly - Description: Check if FileStream::writeBase64() method works properly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::writeBase64() method works properly - Description: Check if FileStream::writeBase64() method works properly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_writeBase64.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0R-FileStream_writeBase64_exist" name="0R-FileStream_writeBase64_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::writeBase64() method exists - Description: Check if FileStream::writeBase64() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::writeBase64() method exists - Description: Check if FileStream::writeBase64() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_writeBase64_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0S-FileStream_writeBase64_without_w_permission" name="0S-FileStream_writeBase64_without_w_permission" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::writeBase64() throws exception when writing to a file opened in 'r' mode - Description: Check if FileStream::writeBase64() throws exception when writing to a file opened in 'r' mode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::writeBase64() throws exception when writing to a file opened in 'r' mode - Description: Check if FileStream::writeBase64() throws exception when writing to a file opened in 'r' mode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_writeBase64_without_w_permission.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0T-FileStream_writeBytes" name="0T-FileStream_writeBytes" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::writeBytes() method works properly - Description: Check if FileStream::writeBytes() method works properly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::writeBytes() method works properly - Description: Check if FileStream::writeBytes() method works properly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_writeBytes.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0U-FileStream_writeBytes_byteData_TypeMismatch" name="0U-FileStream_writeBytes_byteData_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::writeBytes() throws exception for wrong type of byteData - Description: Check if FileStream::writeBytes() throws exception for wrong type of byteData">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::writeBytes() throws exception for wrong type of byteData - Description: Check if FileStream::writeBytes() throws exception for wrong type of byteData]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_writeBytes_byteData_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0V-FileStream_writeBytes_exist" name="0V-FileStream_writeBytes_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::writeBytes() method exists - Description: Check if FileStream::writeBytes() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::writeBytes() method exists - Description: Check if FileStream::writeBytes() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_writeBytes_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0W-FileStream_writeBytes_missarg" name="0W-FileStream_writeBytes_missarg" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::writeBytes() method throws exception for missing mandatory argument - Description: Check if FileStream::writeBytes() method throws exception for missing mandatory argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::writeBytes() method throws exception for missing mandatory argument - Description: Check if FileStream::writeBytes() method throws exception for missing mandatory argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_writeBytes_missarg.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0X-FileStream_writeBytes_with_additional_null_parameter" name="0X-FileStream_writeBytes_with_additional_null_parameter" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::writeBytes() method properly writes the specified bytes to file - Description: Check if FileStream::writeBytes() method properly writes the specified bytes to file">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::writeBytes() method properly writes the specified bytes to file - Description: Check if FileStream::writeBytes() method properly writes the specified bytes to file]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_writeBytes_with_additional_null_parameter.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0Y-FileStream_writeBytes_without_w_permission" name="0Y-FileStream_writeBytes_without_w_permission" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::writeBytes() throws exception when writing to a file opened in 'r' mode - Description: Check if FileStream::writeBytes() throws exception when writing to a file opened in 'r' mode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::writeBytes() throws exception when writing to a file opened in 'r' mode - Description: Check if FileStream::writeBytes() throws exception when writing to a file opened in 'r' mode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_writeBytes_without_w_permission.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-0Z-FileStream_write_exist" name="0Z-FileStream_write_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::write() method exists - Description: Check if FileStream::write() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::write() method exists - Description: Check if FileStream::write() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_write_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-10-FileStream_write_without_w_permission" name="10-FileStream_write_without_w_permission" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileStream::write() throws exception when writing to a file opened in 'r' mode - Description: Check if FileStream::write() throws exception when writing to a file opened in 'r' mode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileStream::write() throws exception when writing to a file opened in 'r' mode - Description: Check if FileStream::write() throws exception when writing to a file opened in 'r' mode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStream_write_without_w_permission.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-11-FileStringSuccessCallback_notexist" name="11-FileStringSuccessCallback_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Interface FileStringSuccessCallback should not be accessible - Description: Interface FileStringSuccessCallback should not be accessible">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Interface FileStringSuccessCallback should not be accessible - Description: Interface FileStringSuccessCallback should not be accessible]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStringSuccessCallback_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-12-FileStringSuccessCallback_onsuccess" name="12-FileStringSuccessCallback_onsuccess" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Test whether FileStringSuccessCallback::onsuccess is called with valid argument - Description: Test whether FileStringSuccessCallback::onsuccess is called with valid argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Test whether FileStringSuccessCallback::onsuccess is called with valid argument - Description: Test whether FileStringSuccessCallback::onsuccess is called with valid argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileStringSuccessCallback_onsuccess.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-13-FileSuccessCallback_notexist" name="13-FileSuccessCallback_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Interface FileSuccessCallback should not be accessible - Description: Interface FileSuccessCallback should not be accessible">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Interface FileSuccessCallback should not be accessible - Description: Interface FileSuccessCallback should not be accessible]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSuccessCallback_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-14-FileSuccessCallback_onsuccess" name="14-FileSuccessCallback_onsuccess" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Test whether FileSuccessCallback::onsuccess is called with valid argument - Description: Test whether FileSuccessCallback::onsuccess is called with valid argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Test whether FileSuccessCallback::onsuccess is called with valid argument - Description: Test whether FileSuccessCallback::onsuccess is called with valid argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSuccessCallback_onsuccess.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-15-FileSystemManagerObject_notexist" name="15-FileSystemManagerObject_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Interface FileSystemManagerObject should not be accessible - Description: Interface FileSystemManagerObject should not be accessible">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Interface FileSystemManagerObject should not be accessible - Description: Interface FileSystemManagerObject should not be accessible]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManagerObject_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-16-FileSystemManager_addStorageStateChangeListener" name="16-FileSystemManager_addStorageStateChangeListener" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::addStorageStateChangeListener() method can be called - Description: Check if FileSystemManager::addStorageStateChangeListener() method can be called">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::addStorageStateChangeListener() method can be called - Description: Check if FileSystemManager::addStorageStateChangeListener() method can be called]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_addStorageStateChangeListener.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-17-FileSystemManager_addStorageStateChangeListener_exist" name="17-FileSystemManager_addStorageStateChangeListener_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::addStorageStateChangeListener() method exists - Description: Check if FileSystemManager::addStorageStateChangeListener() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::addStorageStateChangeListener() method exists - Description: Check if FileSystemManager::addStorageStateChangeListener() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_addStorageStateChangeListener_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-18-FileSystemManager_addStorageStateChangeListener_missarg" name="18-FileSystemManager_addStorageStateChangeListener_missarg" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::addStorageStateChangeListener() method throws exception for missing mandatory argument - Description: Check if FileSystemManager::addStorageStateChangeListener() method throws exception for missing mandatory argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::addStorageStateChangeListener() method throws exception for missing mandatory argument - Description: Check if FileSystemManager::addStorageStateChangeListener() method throws exception for missing mandatory argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_addStorageStateChangeListener_missarg.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-19-FileSystemManager_addStorageStateChangeListener_onerror_TypeMismatch" name="19-FileSystemManager_addStorageStateChangeListener_onerror_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong type of onerror - Description: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong type of onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong type of onerror - Description: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong type of onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_addStorageStateChangeListener_onerror_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1A-FileSystemManager_addStorageStateChangeListener_onerror_invalid_cb" name="1A-FileSystemManager_addStorageStateChangeListener_onerror_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong onerror - Description: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong onerror - Description: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_addStorageStateChangeListener_onerror_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1B-FileSystemManager_addStorageStateChangeListener_onsuccess_TypeMismatch" name="1B-FileSystemManager_addStorageStateChangeListener_onsuccess_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong type of onsuccess - Description: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong type of onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong type of onsuccess - Description: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong type of onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_addStorageStateChangeListener_onsuccess_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1C-FileSystemManager_addStorageStateChangeListener_onsuccess_invalid_cb" name="1C-FileSystemManager_addStorageStateChangeListener_onsuccess_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong onsuccess - Description: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong onsuccess - Description: Check if FileSystemManager::addStorageStateChangeListener() throws exception for wrong onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_addStorageStateChangeListener_onsuccess_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1D-FileSystemManager_addStorageStateChangeListener_with_onerror" name="1D-FileSystemManager_addStorageStateChangeListener_with_onerror" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::addStorageStateChangeListener() can be called with onerror - Description: Check if FileSystemManager::addStorageStateChangeListener() can be called with onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::addStorageStateChangeListener() can be called with onerror - Description: Check if FileSystemManager::addStorageStateChangeListener() can be called with onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_addStorageStateChangeListener_with_onerror.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1E-FileSystemManager_addStorageStateChangeListener_without_arguments" name="1E-FileSystemManager_addStorageStateChangeListener_without_arguments" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::addStorageStateChangeListener() throws exception for missing mandatory argument - Description: Check if FileSystemManager::addStorageStateChangeListener() throws exception for missing mandatory argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::addStorageStateChangeListener() throws exception for missing mandatory argument - Description: Check if FileSystemManager::addStorageStateChangeListener() throws exception for missing mandatory argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_addStorageStateChangeListener_without_arguments.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1F-FileSystemManager_extend" name="1F-FileSystemManager_extend" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if instance of FileSystemManager can be extended with new property - Description: Check if instance of FileSystemManager can be extended with new property">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if instance of FileSystemManager can be extended with new property - Description: Check if instance of FileSystemManager can be extended with new property]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_extend.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1G-FileSystemManager_getStorage" name="1G-FileSystemManager_getStorage" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::getStorage() calls onsuccess callback - Description: Check if FileSystemManager::getStorage() calls onsuccess callback">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::getStorage() calls onsuccess callback - Description: Check if FileSystemManager::getStorage() calls onsuccess callback]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_getStorage.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1H-FileSystemManager_getStorage_exist" name="1H-FileSystemManager_getStorage_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::getStorage() method exists - Description: Check if FileSystemManager::getStorage() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::getStorage() method exists - Description: Check if FileSystemManager::getStorage() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_getStorage_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1I-FileSystemManager_getStorage_missarg" name="1I-FileSystemManager_getStorage_missarg" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::getStorage() throws exception for missing mandatory argument - Description: Check if FileSystemManager::getStorage() throws exception for missing mandatory argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::getStorage() throws exception for missing mandatory argument - Description: Check if FileSystemManager::getStorage() throws exception for missing mandatory argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_getStorage_missarg.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1J-FileSystemManager_getStorage_onerror_TypeMismatch" name="1J-FileSystemManager_getStorage_onerror_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::getStorage() throws exception for wrong type of onerror - Description: Check if FileSystemManager::getStorage() throws exception for wrong type of onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::getStorage() throws exception for wrong type of onerror - Description: Check if FileSystemManager::getStorage() throws exception for wrong type of onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_getStorage_onerror_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1K-FileSystemManager_getStorage_onerror_invalid_cb" name="1K-FileSystemManager_getStorage_onerror_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::getStorage() throws exception for wrong onerror - Description: Check if FileSystemManager::getStorage() throws exception for wrong onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::getStorage() throws exception for wrong onerror - Description: Check if FileSystemManager::getStorage() throws exception for wrong onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_getStorage_onerror_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1L-FileSystemManager_getStorage_onsuccess_TypeMismatch" name="1L-FileSystemManager_getStorage_onsuccess_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::getStorage() throws exception for wrong type of onsuccess - Description: Check if FileSystemManager::getStorage() throws exception for wrong type of onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::getStorage() throws exception for wrong type of onsuccess - Description: Check if FileSystemManager::getStorage() throws exception for wrong type of onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_getStorage_onsuccess_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1M-FileSystemManager_getStorage_onsuccess_invalid_cb" name="1M-FileSystemManager_getStorage_onsuccess_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::getStorage() throws exception for wrong onsuccess - Description: Check if FileSystemManager::getStorage() throws exception for wrong onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::getStorage() throws exception for wrong onsuccess - Description: Check if FileSystemManager::getStorage() throws exception for wrong onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_getStorage_onsuccess_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1N-FileSystemManager_getStorage_with_nonexist_label" name="1N-FileSystemManager_getStorage_with_nonexist_label" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::getStorage() throws an exception when storage with given label does not exist - Description: Check if FileSystemManager::getStorage() throws an exception when storage with given label does not exist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::getStorage() throws an exception when storage with given label does not exist - Description: Check if FileSystemManager::getStorage() throws an exception when storage with given label does not exist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_getStorage_with_nonexist_label.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1O-FileSystemManager_getStorage_with_onerror" name="1O-FileSystemManager_getStorage_with_onerror" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::getStorage() can be called with onerror callback - Description: Check if FileSystemManager::getStorage() can be called with onerror callback">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::getStorage() can be called with onerror callback - Description: Check if FileSystemManager::getStorage() can be called with onerror callback]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_getStorage_with_onerror.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1P-FileSystemManager_in_tizen" name="1P-FileSystemManager_in_tizen" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if tizen namespace contains filesystem - Description: Check if tizen namespace contains filesystem">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if tizen namespace contains filesystem - Description: Check if tizen namespace contains filesystem]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_in_tizen.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1Q-FileSystemManager_listStorages" name="1Q-FileSystemManager_listStorages" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::listStorages() method works - Description: Check if FileSystemManager::listStorages() method works">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::listStorages() method works - Description: Check if FileSystemManager::listStorages() method works]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_listStorages.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1R-FileSystemManager_listStorages_exist" name="1R-FileSystemManager_listStorages_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::listStorages() method exists - Description: Check if FileSystemManager::listStorages() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::listStorages() method exists - Description: Check if FileSystemManager::listStorages() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_listStorages_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1S-FileSystemManager_listStorages_missarg" name="1S-FileSystemManager_listStorages_missarg" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::listStorages() throws exception for missing mandatory argument - Description: Check if FileSystemManager::listStorages() throws exception for missing mandatory argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::listStorages() throws exception for missing mandatory argument - Description: Check if FileSystemManager::listStorages() throws exception for missing mandatory argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_listStorages_missarg.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1T-FileSystemManager_listStorages_onerror_TypeMismatch" name="1T-FileSystemManager_listStorages_onerror_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::listStorages() method throws exception for wrong type of onerror - Description: Check if FileSystemManager::listStorages() method throws exception for wrong type of onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::listStorages() method throws exception for wrong type of onerror - Description: Check if FileSystemManager::listStorages() method throws exception for wrong type of onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_listStorages_onerror_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1U-FileSystemManager_listStorages_onerror_invalid_cb" name="1U-FileSystemManager_listStorages_onerror_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::listStorages() method throws exception for wrong onerror - Description: Check if FileSystemManager::listStorages() method throws exception for wrong onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::listStorages() method throws exception for wrong onerror - Description: Check if FileSystemManager::listStorages() method throws exception for wrong onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_listStorages_onerror_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1V-FileSystemManager_listStorages_onsuccess_TypeMismatch" name="1V-FileSystemManager_listStorages_onsuccess_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::listStorages() method throws exception for wrong type of onsuccess - Description: Check if FileSystemManager::listStorages() method throws exception for wrong type of onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::listStorages() method throws exception for wrong type of onsuccess - Description: Check if FileSystemManager::listStorages() method throws exception for wrong type of onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_listStorages_onsuccess_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1W-FileSystemManager_listStorages_onsuccess_invalid_cb" name="1W-FileSystemManager_listStorages_onsuccess_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::listStorages() method throws exception for wrong onsuccess - Description: Check if FileSystemManager::listStorages() method throws exception for wrong onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::listStorages() method throws exception for wrong onsuccess - Description: Check if FileSystemManager::listStorages() method throws exception for wrong onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_listStorages_onsuccess_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1X-FileSystemManager_listStorages_storages_retrieve" name="1X-FileSystemManager_listStorages_storages_retrieve" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::listStorages() method properly retrieves the available storages on the device - Description: Check if FileSystemManager::listStorages() method properly retrieves the available storages on the device">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::listStorages() method properly retrieves the available storages on the device - Description: Check if FileSystemManager::listStorages() method properly retrieves the available storages on the device]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_listStorages_storages_retrieve.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1Y-FileSystemManager_listStorages_with_invalid_error_callbacks" name="1Y-FileSystemManager_listStorages_with_invalid_error_callbacks" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::listStorages() method throws exception for wrong type of onerror (literals) - Description: Check if FileSystemManager::listStorages() method throws exception for wrong type of onerror (literals)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::listStorages() method throws exception for wrong type of onerror (literals) - Description: Check if FileSystemManager::listStorages() method throws exception for wrong type of onerror (literals)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_listStorages_with_invalid_error_callbacks.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-1Z-FileSystemManager_listStorages_with_onerror" name="1Z-FileSystemManager_listStorages_with_onerror" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::listStorages() can be called with onerror argument - Description: Check if FileSystemManager::listStorages() can be called with onerror argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::listStorages() can be called with onerror argument - Description: Check if FileSystemManager::listStorages() can be called with onerror argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_listStorages_with_onerror.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-20-FileSystemManager_listStorages_without_arguments" name="20-FileSystemManager_listStorages_without_arguments" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::listStorages() method throws exception for missing mandatory argument - Description: Check if FileSystemManager::listStorages() method throws exception for missing mandatory argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::listStorages() method throws exception for missing mandatory argument - Description: Check if FileSystemManager::listStorages() method throws exception for missing mandatory argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_listStorages_without_arguments.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-21-FileSystemManager_listStorages_works_correctly" name="21-FileSystemManager_listStorages_works_correctly" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::listStorages() method invokes onsuccess callback - Description: Check if FileSystemManager::listStorages() method invokes onsuccess callback">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::listStorages() method invokes onsuccess callback - Description: Check if FileSystemManager::listStorages() method invokes onsuccess callback]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_listStorages_works_correctly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-22-FileSystemManager_maxPathLength_attribute" name="22-FileSystemManager_maxPathLength_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::maxPathLength attribute exists - Description: Check if FileSystemManager::maxPathLength attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::maxPathLength attribute exists - Description: Check if FileSystemManager::maxPathLength attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_maxPathLength_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-23-FileSystemManager_notexist" name="23-FileSystemManager_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Interface FileSystemManager should not be accessible - Description: Interface FileSystemManager should not be accessible">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Interface FileSystemManager should not be accessible - Description: Interface FileSystemManager should not be accessible]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-24-FileSystemManager_removeStorageStateChangeListener" name="24-FileSystemManager_removeStorageStateChangeListener" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::removeStorageStateChangeListener() method works with only mandatory arguments - Description: Check if FileSystemManager::removeStorageStateChangeListener() method works with only mandatory arguments">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::removeStorageStateChangeListener() method works with only mandatory arguments - Description: Check if FileSystemManager::removeStorageStateChangeListener() method works with only mandatory arguments]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_removeStorageStateChangeListener.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-25-FileSystemManager_removeStorageStateChangeListener_exist" name="25-FileSystemManager_removeStorageStateChangeListener_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::removeStorageStateChangeListener() method exists - Description: Check if FileSystemManager::removeStorageStateChangeListener() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::removeStorageStateChangeListener() method exists - Description: Check if FileSystemManager::removeStorageStateChangeListener() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_removeStorageStateChangeListener_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-26-FileSystemManager_removeStorageStateChangeListener_with_para_invalid" name="26-FileSystemManager_removeStorageStateChangeListener_with_para_invalid" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::removeStorageStateChangeListener() method throws NotFoundError when given invalid watchId - Description: Check if FileSystemManager::removeStorageStateChangeListener() method throws NotFoundError when given invalid watchId">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::removeStorageStateChangeListener() method throws NotFoundError when given invalid watchId - Description: Check if FileSystemManager::removeStorageStateChangeListener() method throws NotFoundError when given invalid watchId]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_removeStorageStateChangeListener_with_para_invalid.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-27-FileSystemManager_removeStorageStateChangeListener_works_correctly" name="27-FileSystemManager_removeStorageStateChangeListener_works_correctly" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::removeStorageStateChangeListener() method can be called with valid watchId - Description: Check if FileSystemManager::removeStorageStateChangeListener() method can be called with valid watchId">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::removeStorageStateChangeListener() method can be called with valid watchId - Description: Check if FileSystemManager::removeStorageStateChangeListener() method can be called with valid watchId]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_removeStorageStateChangeListener_works_correctly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-28-FileSystemManager_resolve" name="28-FileSystemManager_resolve" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method can be called with only mandatory argument - Description: Check if FileSystemManager::resolve() method can be called with only mandatory argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method can be called with only mandatory argument - Description: Check if FileSystemManager::resolve() method can be called with only mandatory argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-29-FileSystemManager_resolve_documents" name="29-FileSystemManager_resolve_documents" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for Documents virtual root - Description: Check if FileSystemManager::resolve() method works for Documents virtual root">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for Documents virtual root - Description: Check if FileSystemManager::resolve() method works for Documents virtual root]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_documents.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2A-FileSystemManager_resolve_downloads" name="2A-FileSystemManager_resolve_downloads" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for Downloads virtual root - Description: Check if FileSystemManager::resolve() method works for Downloads virtual root">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for Downloads virtual root - Description: Check if FileSystemManager::resolve() method works for Downloads virtual root]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_downloads.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2B-FileSystemManager_resolve_error_invoked" name="2B-FileSystemManager_resolve_error_invoked" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method reports NotFoundError by onerror for wrong value of location argument (absolute) - Description: Check if FileSystemManager::resolve() method reports NotFoundError by onerror for wrong value of location argument (absolute)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method reports NotFoundError by onerror for wrong value of location argument (absolute) - Description: Check if FileSystemManager::resolve() method reports NotFoundError by onerror for wrong value of location argument (absolute)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_error_invoked.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2C-FileSystemManager_resolve_exist" name="2C-FileSystemManager_resolve_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method exists - Description: Check if FileSystemManager::resolve() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method exists - Description: Check if FileSystemManager::resolve() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2D-FileSystemManager_resolve_images" name="2D-FileSystemManager_resolve_images" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for Images virtual root - Description: Check if FileSystemManager::resolve() method works for Images virtual root">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for Images virtual root - Description: Check if FileSystemManager::resolve() method works for Images virtual root]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_images.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2E-FileSystemManager_resolve_missarg" name="2E-FileSystemManager_resolve_missarg" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() throws exception for missing mandatory argument - Description: Check if FileSystemManager::resolve() throws exception for missing mandatory argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() throws exception for missing mandatory argument - Description: Check if FileSystemManager::resolve() throws exception for missing mandatory argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_missarg.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2F-FileSystemManager_resolve_mode_TypeMismatch" name="2F-FileSystemManager_resolve_mode_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method throws exception for wrong value of mode argument - Description: Check if FileSystemManager::resolve() method throws exception for wrong value of mode argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method throws exception for wrong value of mode argument - Description: Check if FileSystemManager::resolve() method throws exception for wrong value of mode argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_mode_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2G-FileSystemManager_resolve_mode_a" name="2G-FileSystemManager_resolve_mode_a" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for Documents virtual root and mode 'a' - Description: Check if FileSystemManager::resolve() method works for Documents virtual root and mode 'a'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for Documents virtual root and mode 'a' - Description: Check if FileSystemManager::resolve() method works for Documents virtual root and mode 'a']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_mode_a.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2H-FileSystemManager_resolve_mode_r" name="2H-FileSystemManager_resolve_mode_r" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for Documents virtual root and mode 'r' - Description: Check if FileSystemManager::resolve() method works for Documents virtual root and mode 'r'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for Documents virtual root and mode 'r' - Description: Check if FileSystemManager::resolve() method works for Documents virtual root and mode 'r']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_mode_r.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2I-FileSystemManager_resolve_mode_w" name="2I-FileSystemManager_resolve_mode_w" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for Documents virtual root and mode 'w' - Description: Check if FileSystemManager::resolve() method works for Documents virtual root and mode 'w'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for Documents virtual root and mode 'w' - Description: Check if FileSystemManager::resolve() method works for Documents virtual root and mode 'w']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_mode_w.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2J-FileSystemManager_resolve_music" name="2J-FileSystemManager_resolve_music" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for Music virtual root - Description: Check if FileSystemManager::resolve() method works for Music virtual root">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for Music virtual root - Description: Check if FileSystemManager::resolve() method works for Music virtual root]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_music.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2K-FileSystemManager_resolve_onerror_TypeMismatch" name="2K-FileSystemManager_resolve_onerror_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method throws exception for wrong type of onerror - Description: Check if FileSystemManager::resolve() method throws exception for wrong type of onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method throws exception for wrong type of onerror - Description: Check if FileSystemManager::resolve() method throws exception for wrong type of onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_onerror_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2L-FileSystemManager_resolve_onerror_invalid_cb" name="2L-FileSystemManager_resolve_onerror_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method throws exception for wrong onerror - Description: Check if FileSystemManager::resolve() method throws exception for wrong onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method throws exception for wrong onerror - Description: Check if FileSystemManager::resolve() method throws exception for wrong onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_onerror_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2M-FileSystemManager_resolve_onsuccess_TypeMismatch" name="2M-FileSystemManager_resolve_onsuccess_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method throws exception for wrong type of onsuccess - Description: Check if FileSystemManager::resolve() method throws exception for wrong type of onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method throws exception for wrong type of onsuccess - Description: Check if FileSystemManager::resolve() method throws exception for wrong type of onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_onsuccess_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2N-FileSystemManager_resolve_onsuccess_invalid_cb" name="2N-FileSystemManager_resolve_onsuccess_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method throws exception for wrong onsuccess - Description: Check if FileSystemManager::resolve() method throws exception for wrong onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method throws exception for wrong onsuccess - Description: Check if FileSystemManager::resolve() method throws exception for wrong onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_onsuccess_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2O-FileSystemManager_resolve_ringtones" name="2O-FileSystemManager_resolve_ringtones" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for Ringtones virtual root - Description: Check if FileSystemManager::resolve() method works for Ringtones virtual root">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for Ringtones virtual root - Description: Check if FileSystemManager::resolve() method works for Ringtones virtual root]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_ringtones.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2P-FileSystemManager_resolve_ringtones_invalid_mode_a" name="2P-FileSystemManager_resolve_ringtones_invalid_mode_a" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving Ringtones directory with mode 'a' - Description: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving Ringtones directory with mode 'a'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving Ringtones directory with mode 'a' - Description: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving Ringtones directory with mode 'a']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_ringtones_invalid_mode_a.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2Q-FileSystemManager_resolve_ringtones_invalid_mode_rw" name="2Q-FileSystemManager_resolve_ringtones_invalid_mode_rw" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving Ringtones directory with mode 'rw' - Description: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving Ringtones directory with mode 'rw'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving Ringtones directory with mode 'rw' - Description: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving Ringtones directory with mode 'rw']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_ringtones_invalid_mode_rw.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2R-FileSystemManager_resolve_ringtones_invalid_mode_w" name="2R-FileSystemManager_resolve_ringtones_invalid_mode_w" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving Ringtones directory with mode 'w' - Description: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving Ringtones directory with mode 'w'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving Ringtones directory with mode 'w' - Description: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving Ringtones directory with mode 'w']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_ringtones_invalid_mode_w.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2S-FileSystemManager_resolve_videos" name="2S-FileSystemManager_resolve_videos" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for Videos virtual root - Description: Check if FileSystemManager::resolve() method works for Videos virtual root">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for Videos virtual root - Description: Check if FileSystemManager::resolve() method works for Videos virtual root]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_videos.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2T-FileSystemManager_resolve_wgt-package_invalid_mode_a" name="2T-FileSystemManager_resolve_wgt-package_invalid_mode_a" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving 'wgt-package' directory with mode 'a' - Description: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving 'wgt-package' directory with mode 'a'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving 'wgt-package' directory with mode 'a' - Description: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving 'wgt-package' directory with mode 'a']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_wgt-package_invalid_mode_a.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2U-FileSystemManager_resolve_wgt-package_invalid_mode_rw" name="2U-FileSystemManager_resolve_wgt-package_invalid_mode_rw" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving 'wgt-package' directory with mode 'rw' - Description: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving 'wgt-package' directory with mode 'rw'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving 'wgt-package' directory with mode 'rw' - Description: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving 'wgt-package' directory with mode 'rw']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_wgt-package_invalid_mode_rw.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2V-FileSystemManager_resolve_wgt-package_invalid_mode_w" name="2V-FileSystemManager_resolve_wgt-package_invalid_mode_w" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving 'wgt-package' directory with mode 'w' - Description: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving 'wgt-package' directory with mode 'w'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving 'wgt-package' directory with mode 'w' - Description: Check if FileSystemManager::resolve() method reports InvalidValuesError when resolving 'wgt-package' directory with mode 'w']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_wgt-package_invalid_mode_w.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2W-FileSystemManager_resolve_wgt_package" name="2W-FileSystemManager_resolve_wgt_package" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for 'wgt-package' virtual root - Description: Check if FileSystemManager::resolve() method works for 'wgt-package' virtual root">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for 'wgt-package' virtual root - Description: Check if FileSystemManager::resolve() method works for 'wgt-package' virtual root]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_wgt_package.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2X-FileSystemManager_resolve_wgt_private" name="2X-FileSystemManager_resolve_wgt_private" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for 'wgt-private' virtual root - Description: Check if FileSystemManager::resolve() method works for 'wgt-private' virtual root">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for 'wgt-private' virtual root - Description: Check if FileSystemManager::resolve() method works for 'wgt-private' virtual root]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_wgt_private.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2Y-FileSystemManager_resolve_wgt_private_tmp" name="2Y-FileSystemManager_resolve_wgt_private_tmp" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for 'wgt-private-tmp' virtual root - Description: Check if FileSystemManager::resolve() method works for 'wgt-private-tmp' virtual root">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for 'wgt-private-tmp' virtual root - Description: Check if FileSystemManager::resolve() method works for 'wgt-private-tmp' virtual root]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_wgt_private_tmp.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-2Z-FileSystemManager_resolve_with_mode" name="2Z-FileSystemManager_resolve_with_mode" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for Images virtual root with mode 'rw' - Description: Check if FileSystemManager::resolve() method works for Images virtual root with mode 'rw'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for Images virtual root with mode 'rw' - Description: Check if FileSystemManager::resolve() method works for Images virtual root with mode 'rw']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_with_mode.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-30-FileSystemManager_resolve_with_onerror" name="30-FileSystemManager_resolve_with_onerror" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method can be called with onerror argument - Description: Check if FileSystemManager::resolve() method can be called with onerror argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method can be called with onerror argument - Description: Check if FileSystemManager::resolve() method can be called with onerror argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_with_onerror.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-31-FileSystemManager_resolve_works_correctly" name="31-FileSystemManager_resolve_works_correctly" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemManager::resolve() method works for Documents and onsuccess is invoked with proper argument - Description: Check if FileSystemManager::resolve() method works for Documents and onsuccess is invoked with proper argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemManager::resolve() method works for Documents and onsuccess is invoked with proper argument - Description: Check if FileSystemManager::resolve() method works for Documents and onsuccess is invoked with proper argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemManager_resolve_works_correctly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-32-FileSystemStorageArraySuccessCallback_notexist" name="32-FileSystemStorageArraySuccessCallback_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Interface FileSystemStorageArraySuccessCallback should not be accessible - Description: Interface FileSystemStorageArraySuccessCallback should not be accessible">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Interface FileSystemStorageArraySuccessCallback should not be accessible - Description: Interface FileSystemStorageArraySuccessCallback should not be accessible]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemStorageArraySuccessCallback_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-33-FileSystemStorageArraySuccessCallback_onsuccess" name="33-FileSystemStorageArraySuccessCallback_onsuccess" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Test whether FileSystemStorageArraySuccessCallback::onsuccess is called with valid argument - Description: Test whether FileSystemStorageArraySuccessCallback::onsuccess is called with valid argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Test whether FileSystemStorageArraySuccessCallback::onsuccess is called with valid argument - Description: Test whether FileSystemStorageArraySuccessCallback::onsuccess is called with valid argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemStorageArraySuccessCallback_onsuccess.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-34-FileSystemStorageSuccessCallback_notexist" name="34-FileSystemStorageSuccessCallback_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Interface FileSystemStorageSuccessCallback should not be accessible - Description: Interface FileSystemStorageSuccessCallback should not be accessible">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Interface FileSystemStorageSuccessCallback should not be accessible - Description: Interface FileSystemStorageSuccessCallback should not be accessible]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemStorageSuccessCallback_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-35-FileSystemStorageSuccessCallback_onsuccess" name="35-FileSystemStorageSuccessCallback_onsuccess" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Test whether FileSystemStorageSuccessCallback::onsuccess is called with valid argument - Description: Test whether FileSystemStorageSuccessCallback::onsuccess is called with valid argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Test whether FileSystemStorageSuccessCallback::onsuccess is called with valid argument - Description: Test whether FileSystemStorageSuccessCallback::onsuccess is called with valid argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemStorageSuccessCallback_onsuccess.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-36-FileSystemStorage_extend" name="36-FileSystemStorage_extend" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if instance of FileSystemStorage object can be extended with new attribute - Description: Check if instance of FileSystemStorage object can be extended with new attribute">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if instance of FileSystemStorage object can be extended with new attribute - Description: Check if instance of FileSystemStorage object can be extended with new attribute]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemStorage_extend.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-37-FileSystemStorage_label_attribute" name="37-FileSystemStorage_label_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemStorage::label attribute exists, has type DOMString and is readonly - Description: Check if FileSystemStorage::label attribute exists, has type DOMString and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemStorage::label attribute exists, has type DOMString and is readonly - Description: Check if FileSystemStorage::label attribute exists, has type DOMString and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemStorage_label_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-38-FileSystemStorage_notexist" name="38-FileSystemStorage_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Interface FileSystemStorage should not be accessible - Description: Interface FileSystemStorage should not be accessible">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Interface FileSystemStorage should not be accessible - Description: Interface FileSystemStorage should not be accessible]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemStorage_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-39-FileSystemStorage_state_attribute" name="39-FileSystemStorage_state_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemStorage::state attribute exists, has type FileSystemStorageState and is readonly - Description: Check if FileSystemStorage::state attribute exists, has type FileSystemStorageState and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemStorage::state attribute exists, has type FileSystemStorageState and is readonly - Description: Check if FileSystemStorage::state attribute exists, has type FileSystemStorageState and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemStorage_state_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3A-FileSystemStorage_type_attribute" name="3A-FileSystemStorage_type_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if FileSystemStorage::type attribute exists, has type FileSystemStorageType and is readonly - Description: Check if FileSystemStorage::type attribute exists, has type FileSystemStorageType and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if FileSystemStorage::type attribute exists, has type FileSystemStorageType and is readonly - Description: Check if FileSystemStorage::type attribute exists, has type FileSystemStorageType and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/FileSystemStorage_type_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3B-File_copyTo" name="3B-File_copyTo" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::copyTo() method ends successfully (copy file from documents/ to images/) - Description: Check if File::copyTo() method ends successfully (copy file from documents/ to images/)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::copyTo() method ends successfully (copy file from documents/ to images/) - Description: Check if File::copyTo() method ends successfully (copy file from documents/ to images/)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3C-File_copyTo_dir_overwrite_false" name="3C-File_copyTo_dir_overwrite_false" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if error callback is invoked when copy a directory to another location where directory of that name already exists (overwrite is false) - Description: Check if error callback is invoked when copy a directory to another location where directory of that name already exists (overwrite is false)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if error callback is invoked when copy a directory to another location where directory of that name already exists (overwrite is false) - Description: Check if error callback is invoked when copy a directory to another location where directory of that name already exists (overwrite is false)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_dir_overwrite_false.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3D-File_copyTo_dir_overwrite_true" name="3D-File_copyTo_dir_overwrite_true" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can copy a directory to another location where directory of that name already exists (overwrite is true) - Description: Check if you can copy a directory to another location where directory of that name already exists (overwrite is true)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can copy a directory to another location where directory of that name already exists (overwrite is true) - Description: Check if you can copy a directory to another location where directory of that name already exists (overwrite is true)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_dir_overwrite_true.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3E-File_copyTo_dir_samedir_samename_overwrite_false" name="3E-File_copyTo_dir_samedir_samename_overwrite_false" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if error callback is invoked when copy directory dir1/subdir1 into dir1/ (overwrite is false) - Description: Check if error callback is invoked when copy directory dir1/subdir1 into dir1/ (overwrite is false)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if error callback is invoked when copy directory dir1/subdir1 into dir1/ (overwrite is false) - Description: Check if error callback is invoked when copy directory dir1/subdir1 into dir1/ (overwrite is false)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_dir_samedir_samename_overwrite_false.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3F-File_copyTo_dir_samedir_samename_overwrite_true" name="3F-File_copyTo_dir_samedir_samename_overwrite_true" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if error callback is invoked when copy directory dir1/subdir1 into dir1/ (overwrite is true) - Description: Check if error callback is invoked when copy directory dir1/subdir1 into dir1/ (overwrite is true)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if error callback is invoked when copy directory dir1/subdir1 into dir1/ (overwrite is true) - Description: Check if error callback is invoked when copy directory dir1/subdir1 into dir1/ (overwrite is true)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_dir_samedir_samename_overwrite_true.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3G-File_copyTo_exist" name="3G-File_copyTo_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::copyTo() method exists - Description: Check if File::copyTo() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::copyTo() method exists - Description: Check if File::copyTo() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3H-File_copyTo_file_overwrite_false" name="3H-File_copyTo_file_overwrite_false" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if error callback is invoked when copy a file to another directory where a file of that name already exists (overwrite is false) - Description: Check if error callback is invoked when copy a file to another directory where a file of that name already exists (overwrite is false)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if error callback is invoked when copy a file to another directory where a file of that name already exists (overwrite is false) - Description: Check if error callback is invoked when copy a file to another directory where a file of that name already exists (overwrite is false)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_file_overwrite_false.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3I-File_copyTo_file_overwrite_true" name="3I-File_copyTo_file_overwrite_true" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can copy a file to another directory where a file of that name already exists (overwrite is true) - Description: Check if you can copy a file to another directory where a file of that name already exists (overwrite is true)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can copy a file to another directory where a file of that name already exists (overwrite is true) - Description: Check if you can copy a file to another directory where a file of that name already exists (overwrite is true)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_file_overwrite_true.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3J-File_copyTo_file_samedir_samename_overwrite_false" name="3J-File_copyTo_file_samedir_samename_overwrite_false" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if error callback is invoked when copy a file to the same location (overwrite is false) - Description: Check if error callback is invoked when copy a file to the same location (overwrite is false)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if error callback is invoked when copy a file to the same location (overwrite is false) - Description: Check if error callback is invoked when copy a file to the same location (overwrite is false)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_file_samedir_samename_overwrite_false.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3K-File_copyTo_file_samedir_samename_overwrite_true" name="3K-File_copyTo_file_samedir_samename_overwrite_true" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if error callback is invoked when copy a file to the same location (overwrite is true) - Description: Check if error callback is invoked when copy a file to the same location (overwrite is true)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if error callback is invoked when copy a file to the same location (overwrite is true) - Description: Check if error callback is invoked when copy a file to the same location (overwrite is true)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_file_samedir_samename_overwrite_true.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3L-File_copyTo_onerror_TypeMismatch" name="3L-File_copyTo_onerror_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::copyTo() throws exception when type of errorCallback is wrong - Description: Check if File::copyTo() throws exception when type of errorCallback is wrong">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::copyTo() throws exception when type of errorCallback is wrong - Description: Check if File::copyTo() throws exception when type of errorCallback is wrong]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_onerror_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3M-File_copyTo_onerror_invalid_cb" name="3M-File_copyTo_onerror_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::copyTo() throws exception for wrong errorCallback - Description: Check if File::copyTo() throws exception for wrong errorCallback">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::copyTo() throws exception for wrong errorCallback - Description: Check if File::copyTo() throws exception for wrong errorCallback]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_onerror_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3N-File_copyTo_onsuccess_TypeMismatch" name="3N-File_copyTo_onsuccess_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::copyTo() throws exception when type of successCallback is wrong - Description: Check if File::copyTo() throws exception when type of successCallback is wrong">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::copyTo() throws exception when type of successCallback is wrong - Description: Check if File::copyTo() throws exception when type of successCallback is wrong]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_onsuccess_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3O-File_copyTo_onsuccess_invalid_cb" name="3O-File_copyTo_onsuccess_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::copyTo() throws exception for wrong successCallback - Description: Check if File::copyTo() throws exception for wrong successCallback">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::copyTo() throws exception for wrong successCallback - Description: Check if File::copyTo() throws exception for wrong successCallback]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_onsuccess_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3P-File_copyTo_with_file_handle" name="3P-File_copyTo_with_file_handle" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::copyTo() calls errorCallback when called for object representing file, not a directory - Description: Check if File::copyTo() calls errorCallback when called for object representing file, not a directory">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::copyTo() calls errorCallback when called for object representing file, not a directory - Description: Check if File::copyTo() calls errorCallback when called for object representing file, not a directory]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_with_file_handle.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3Q-File_copyTo_with_null_success_and_error_callbacks" name="3Q-File_copyTo_with_null_success_and_error_callbacks" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::copyTo() can be invoked with null successCallback and errorCallback - Description: Check if File::copyTo() can be invoked with null successCallback and errorCallback">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::copyTo() can be invoked with null successCallback and errorCallback - Description: Check if File::copyTo() can be invoked with null successCallback and errorCallback]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_with_null_success_and_error_callbacks.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3R-File_copyTo_with_onerror" name="3R-File_copyTo_with_onerror" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::copyTo() calls errorCallback (nonexisting originFilePath) - Description: Check if File::copyTo() calls errorCallback (nonexisting originFilePath)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::copyTo() calls errorCallback (nonexisting originFilePath) - Description: Check if File::copyTo() calls errorCallback (nonexisting originFilePath)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_with_onerror.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3S-File_copyTo_with_onsuccess" name="3S-File_copyTo_with_onsuccess" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::copyTo() with onSuccess creates a file copy - Description: Check if File::copyTo() with onSuccess creates a file copy">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::copyTo() with onSuccess creates a file copy - Description: Check if File::copyTo() with onSuccess creates a file copy]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_with_onsuccess.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3T-File_copyTo_writeFile_newName" name="3T-File_copyTo_writeFile_newName" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create a new empty file, write content into it, then request a copy of it (different name, same directory) - Description: Check if you can create a new empty file, write content into it, then request a copy of it (different name, same directory)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create a new empty file, write content into it, then request a copy of it (different name, same directory) - Description: Check if you can create a new empty file, write content into it, then request a copy of it (different name, same directory)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_writeFile_newName.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3U-File_copyTo_writeFile_overwrite_false" name="3U-File_copyTo_writeFile_overwrite_false" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if when create a new empty file, write content into it, then request a copy of it over existing file invokes errorCallback (overwrite=false) - Description: Check if when create a new empty file, write content into it, then request a copy of it over existing file invokes errorCallback (overwrite=false)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if when create a new empty file, write content into it, then request a copy of it over existing file invokes errorCallback (overwrite=false) - Description: Check if when create a new empty file, write content into it, then request a copy of it over existing file invokes errorCallback (overwrite=false)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_writeFile_overwrite_false.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3V-File_copyTo_writeFile_subdir" name="3V-File_copyTo_writeFile_subdir" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create a new empty file, write content into it, then request a copy of it (different name, different directory) - Description: Check if you can create a new empty file, write content into it, then request a copy of it (different name, different directory)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create a new empty file, write content into it, then request a copy of it (different name, different directory) - Description: Check if you can create a new empty file, write content into it, then request a copy of it (different name, different directory)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_copyTo_writeFile_subdir.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3W-File_createDirectory" name="3W-File_createDirectory" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::createDirectory() method - Description: Check if File::createDirectory() method">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::createDirectory() method - Description: Check if File::createDirectory() method]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_createDirectory.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3X-File_createDirectory_exist" name="3X-File_createDirectory_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::createDirectory() method exists - Description: Check if File::createDirectory() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::createDirectory() method exists - Description: Check if File::createDirectory() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_createDirectory_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3Y-File_createDirectory_level2" name="3Y-File_createDirectory_level2" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::createDirectory() works for non-existing intermediate directory (creates 2 levels of directories) - Description: Check if File::createDirectory() works for non-existing intermediate directory (creates 2 levels of directories)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::createDirectory() works for non-existing intermediate directory (creates 2 levels of directories) - Description: Check if File::createDirectory() works for non-existing intermediate directory (creates 2 levels of directories)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_createDirectory_level2.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-3Z-File_createFile" name="3Z-File_createFile" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::createFile() method works properly - Description: Check if File::createFile() method works properly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::createFile() method works properly - Description: Check if File::createFile() method works properly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_createFile.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-40-File_createFile_exist" name="40-File_createFile_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::createFile() method exists - Description: Check if File::createFile() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::createFile() method exists - Description: Check if File::createFile() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_createFile_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-41-File_createFile_existing_file" name="41-File_createFile_existing_file" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::createFile() throws exception when the file already exists - Description: Check if File::createFile() throws exception when the file already exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::createFile() throws exception when the file already exists - Description: Check if File::createFile() throws exception when the file already exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_createFile_existing_file.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-42-File_created_attribute" name="42-File_created_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::created attribute exists, has type Date and is readonly - Description: Check if File::created attribute exists, has type Date and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::created attribute exists, has type Date and is readonly - Description: Check if File::created attribute exists, has type Date and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_created_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-43-File_deleteDirectory" name="43-File_deleteDirectory" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteDirectory() method can be called - Description: Check if File::deleteDirectory() method can be called">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteDirectory() method can be called - Description: Check if File::deleteDirectory() method can be called]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-44-File_deleteDirectory_createDir_documents" name="44-File_deleteDirectory_createDir_documents" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::createDirectory() creates a new directory in Documents and File::deleteDirectory() removes it - Description: Check if File::createDirectory() creates a new directory in Documents and File::deleteDirectory() removes it">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::createDirectory() creates a new directory in Documents and File::deleteDirectory() removes it - Description: Check if File::createDirectory() creates a new directory in Documents and File::deleteDirectory() removes it]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_createDir_documents.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-45-File_deleteDirectory_createDir_downloads" name="45-File_deleteDirectory_createDir_downloads" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::createDirectory() creates a new directory in Downloads and File::deleteDirectory() removes it - Description: Check if File::createDirectory() creates a new directory in Downloads and File::deleteDirectory() removes it">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::createDirectory() creates a new directory in Downloads and File::deleteDirectory() removes it - Description: Check if File::createDirectory() creates a new directory in Downloads and File::deleteDirectory() removes it]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_createDir_downloads.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-46-File_deleteDirectory_createDir_images" name="46-File_deleteDirectory_createDir_images" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::createDirectory() creates a new directory in Images and File::deleteDirectory() removes it - Description: Check if File::createDirectory() creates a new directory in Images and File::deleteDirectory() removes it">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::createDirectory() creates a new directory in Images and File::deleteDirectory() removes it - Description: Check if File::createDirectory() creates a new directory in Images and File::deleteDirectory() removes it]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_createDir_images.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-47-File_deleteDirectory_createDir_music" name="47-File_deleteDirectory_createDir_music" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::createDirectory() creates a new directory in Music and File::deleteDirectory() removes it - Description: Check if File::createDirectory() creates a new directory in Music and File::deleteDirectory() removes it">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::createDirectory() creates a new directory in Music and File::deleteDirectory() removes it - Description: Check if File::createDirectory() creates a new directory in Music and File::deleteDirectory() removes it]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_createDir_music.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-48-File_deleteDirectory_createDir_videos" name="48-File_deleteDirectory_createDir_videos" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::createDirectory() creates a new directory in Videos and File::deleteDirectory() removes it - Description: Check if File::createDirectory() creates a new directory in Videos and File::deleteDirectory() removes it">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::createDirectory() creates a new directory in Videos and File::deleteDirectory() removes it - Description: Check if File::createDirectory() creates a new directory in Videos and File::deleteDirectory() removes it]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_createDir_videos.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-49-File_deleteDirectory_exist" name="49-File_deleteDirectory_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteDirectory() method exists - Description: Check if File::deleteDirectory() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteDirectory() method exists - Description: Check if File::deleteDirectory() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4A-File_deleteDirectory_onerror_TypeMismatch" name="4A-File_deleteDirectory_onerror_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteDirectory() throws exception for wrong type of onerror - Description: Check if File::deleteDirectory() throws exception for wrong type of onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteDirectory() throws exception for wrong type of onerror - Description: Check if File::deleteDirectory() throws exception for wrong type of onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_onerror_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4B-File_deleteDirectory_onerror_invalid_cb" name="4B-File_deleteDirectory_onerror_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteDirectory() throws exception for wrong onerror - Description: Check if File::deleteDirectory() throws exception for wrong onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteDirectory() throws exception for wrong onerror - Description: Check if File::deleteDirectory() throws exception for wrong onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_onerror_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4C-File_deleteDirectory_onsuccess_TypeMismatch" name="4C-File_deleteDirectory_onsuccess_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteDirectory() throws exception for wrong type of onsuccess - Description: Check if File::deleteDirectory() throws exception for wrong type of onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteDirectory() throws exception for wrong type of onsuccess - Description: Check if File::deleteDirectory() throws exception for wrong type of onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_onsuccess_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4D-File_deleteDirectory_onsuccess_invalid_cb" name="4D-File_deleteDirectory_onsuccess_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteDirectory() throws exception for wrong onsuccess - Description: Check if File::deleteDirectory() throws exception for wrong onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteDirectory() throws exception for wrong onsuccess - Description: Check if File::deleteDirectory() throws exception for wrong onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_onsuccess_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4E-File_deleteDirectory_with_empty_path" name="4E-File_deleteDirectory_with_empty_path" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteDirectory() calls errorCallback when given directoryPath is empty - Description: Check if File::deleteDirectory() calls errorCallback when given directoryPath is empty">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteDirectory() calls errorCallback when given directoryPath is empty - Description: Check if File::deleteDirectory() calls errorCallback when given directoryPath is empty]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_with_empty_path.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4F-File_deleteDirectory_with_file_handle" name="4F-File_deleteDirectory_with_file_handle" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteDirectory() calls errorCallback when called on File object representing file, not a directory - Description: Check if File::deleteDirectory() calls errorCallback when called on File object representing file, not a directory">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteDirectory() calls errorCallback when called on File object representing file, not a directory - Description: Check if File::deleteDirectory() calls errorCallback when called on File object representing file, not a directory]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_with_file_handle.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4G-File_deleteDirectory_with_null_callbacks" name="4G-File_deleteDirectory_with_null_callbacks" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteDirectory() method can be called with null onsuccess and onerror - Description: Check if File::deleteDirectory() method can be called with null onsuccess and onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteDirectory() method can be called with null onsuccess and onerror - Description: Check if File::deleteDirectory() method can be called with null onsuccess and onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_with_null_callbacks.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4H-File_deleteDirectory_with_onerror" name="4H-File_deleteDirectory_with_onerror" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteDirectory() method calls onerror properly (when removing non-existing directory) - Description: Check if File::deleteDirectory() method calls onerror properly (when removing non-existing directory)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteDirectory() method calls onerror properly (when removing non-existing directory) - Description: Check if File::deleteDirectory() method calls onerror properly (when removing non-existing directory)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_with_onerror.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4I-File_deleteDirectory_with_onsuccess" name="4I-File_deleteDirectory_with_onsuccess" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteDirectory() method with onsuccess optional argument works properly - Description: Check if File::deleteDirectory() method with onsuccess optional argument works properly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteDirectory() method with onsuccess optional argument works properly - Description: Check if File::deleteDirectory() method with onsuccess optional argument works properly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteDirectory_with_onsuccess.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4J-File_deleteFile" name="4J-File_deleteFile" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteFile() method works properly - Description: Check if File::deleteFile() method works properly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteFile() method works properly - Description: Check if File::deleteFile() method works properly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4K-File_deleteFile_copyFile_downloads" name="4K-File_deleteFile_copyFile_downloads" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create a new file in Document, copy it into Downloads, then request removing it - Description: Check if you can create a new file in Document, copy it into Downloads, then request removing it">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create a new file in Document, copy it into Downloads, then request removing it - Description: Check if you can create a new file in Document, copy it into Downloads, then request removing it]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_copyFile_downloads.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4L-File_deleteFile_copyFile_images" name="4L-File_deleteFile_copyFile_images" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create a new file in Images, copy it into Downloads, then request removing it - Description: Check if you can create a new file in Images, copy it into Downloads, then request removing it">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create a new file in Images, copy it into Downloads, then request removing it - Description: Check if you can create a new file in Images, copy it into Downloads, then request removing it]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_copyFile_images.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4M-File_deleteFile_copyFile_music" name="4M-File_deleteFile_copyFile_music" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create a new file in Music, copy it into Downloads, then request removing it - Description: Check if you can create a new file in Music, copy it into Downloads, then request removing it">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create a new file in Music, copy it into Downloads, then request removing it - Description: Check if you can create a new file in Music, copy it into Downloads, then request removing it]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_copyFile_music.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4N-File_deleteFile_copyFile_videos" name="4N-File_deleteFile_copyFile_videos" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create a new file in Video, copy it into Downloads, then request removing it - Description: Check if you can create a new file in Video, copy it into Downloads, then request removing it">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create a new file in Video, copy it into Downloads, then request removing it - Description: Check if you can create a new file in Video, copy it into Downloads, then request removing it]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_copyFile_videos.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4O-File_deleteFile_createFile" name="4O-File_deleteFile_createFile" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create a new file in Documents, copy it into Downloads, then request removing it - Description: Check if you can create a new file in Documents, copy it into Downloads, then request removing it">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create a new file in Documents, copy it into Downloads, then request removing it - Description: Check if you can create a new file in Documents, copy it into Downloads, then request removing it]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_createFile.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4P-File_deleteFile_exist" name="4P-File_deleteFile_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteFile() method exists - Description: Check if File::deleteFile() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteFile() method exists - Description: Check if File::deleteFile() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4Q-File_deleteFile_listDocumentsFiles" name="4Q-File_deleteFile_listDocumentsFiles" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create directories and file in Documents, list them, then request deleting the directory and the file - Description: Check if you can create directories and file in Documents, list them, then request deleting the directory and the file">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create directories and file in Documents, list them, then request deleting the directory and the file - Description: Check if you can create directories and file in Documents, list them, then request deleting the directory and the file]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_listDocumentsFiles.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4R-File_deleteFile_listDownloadsFiles" name="4R-File_deleteFile_listDownloadsFiles" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create directories and file in Downloads, list them, then request deleting the directory and the file - Description: Check if you can create directories and file in Downloads, list them, then request deleting the directory and the file">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create directories and file in Downloads, list them, then request deleting the directory and the file - Description: Check if you can create directories and file in Downloads, list them, then request deleting the directory and the file]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_listDownloadsFiles.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4S-File_deleteFile_listImagsFiles" name="4S-File_deleteFile_listImagsFiles" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create directories and file in Images, list them, then request deleting the directory and the file - Description: Check if you can create directories and file in Images, list them, then request deleting the directory and the file">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create directories and file in Images, list them, then request deleting the directory and the file - Description: Check if you can create directories and file in Images, list them, then request deleting the directory and the file]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_listImagsFiles.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4T-File_deleteFile_listMusicFiles" name="4T-File_deleteFile_listMusicFiles" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create directories and file in Music, list them, then request deleting the directory and the file - Description: Check if you can create directories and file in Music, list them, then request deleting the directory and the file">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create directories and file in Music, list them, then request deleting the directory and the file - Description: Check if you can create directories and file in Music, list them, then request deleting the directory and the file]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_listMusicFiles.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4U-File_deleteFile_listVideosfiles" name="4U-File_deleteFile_listVideosfiles" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create directories and file in Videos, list them, then request deleting the directory and the file - Description: Check if you can create directories and file in Videos, list them, then request deleting the directory and the file">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create directories and file in Videos, list them, then request deleting the directory and the file - Description: Check if you can create directories and file in Videos, list them, then request deleting the directory and the file]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_listVideosfiles.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4V-File_deleteFile_onerror_TypeMismatch" name="4V-File_deleteFile_onerror_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteFile() throws exception for wrong type of onerror - Description: Check if File::deleteFile() throws exception for wrong type of onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteFile() throws exception for wrong type of onerror - Description: Check if File::deleteFile() throws exception for wrong type of onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_onerror_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4W-File_deleteFile_onerror_invalid_cb" name="4W-File_deleteFile_onerror_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteFile() throws exception for wrong onerror - Description: Check if File::deleteFile() throws exception for wrong onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteFile() throws exception for wrong onerror - Description: Check if File::deleteFile() throws exception for wrong onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_onerror_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4X-File_deleteFile_onsuccess_TypeMismatch" name="4X-File_deleteFile_onsuccess_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteFile() throws exception for wrong type of onsuccess - Description: Check if File::deleteFile() throws exception for wrong type of onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteFile() throws exception for wrong type of onsuccess - Description: Check if File::deleteFile() throws exception for wrong type of onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_onsuccess_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4Y-File_deleteFile_onsuccess_invalid_cb" name="4Y-File_deleteFile_onsuccess_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteFile() throws exception for wrong onsuccess - Description: Check if File::deleteFile() throws exception for wrong onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteFile() throws exception for wrong onsuccess - Description: Check if File::deleteFile() throws exception for wrong onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_onsuccess_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-4Z-File_deleteFile_with_dir_handle" name="4Z-File_deleteFile_with_dir_handle" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteFile() calls errorCallback when called on File object representing file, not a directory - Description: Check if File::deleteFile() calls errorCallback when called on File object representing file, not a directory">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteFile() calls errorCallback when called on File object representing file, not a directory - Description: Check if File::deleteFile() calls errorCallback when called on File object representing file, not a directory]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_with_dir_handle.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-50-File_deleteFile_with_nonexist" name="50-File_deleteFile_with_nonexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteFile() calls errorCallback when given filePath does not exist - Description: Check if File::deleteFile() calls errorCallback when given filePath does not exist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteFile() calls errorCallback when given filePath does not exist - Description: Check if File::deleteFile() calls errorCallback when given filePath does not exist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_with_nonexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-51-File_deleteFile_with_onerror" name="51-File_deleteFile_with_onerror" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteFile() method calls errorCallback properly (when removing non-existing file) - Description: Check if File::deleteFile() method calls errorCallback properly (when removing non-existing file)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteFile() method calls errorCallback properly (when removing non-existing file) - Description: Check if File::deleteFile() method calls errorCallback properly (when removing non-existing file)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_with_onerror.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-52-File_deleteFile_with_onsuccess" name="52-File_deleteFile_with_onsuccess" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteFile() method calls given onsuccess callback - Description: Check if File::deleteFile() method calls given onsuccess callback">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteFile() method calls given onsuccess callback - Description: Check if File::deleteFile() method calls given onsuccess callback]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_with_onsuccess.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-53-File_deleteFile_with_vaild_callbacks" name="53-File_deleteFile_with_vaild_callbacks" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteFile() can be called with onsuccess and onerror - Description: Check if File::deleteFile() can be called with onsuccess and onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteFile() can be called with onsuccess and onerror - Description: Check if File::deleteFile() can be called with onsuccess and onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_with_vaild_callbacks.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-54-File_deleteFile_with_valid_filePath" name="54-File_deleteFile_with_valid_filePath" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::deleteFile() method can be called without onsuccess - Description: Check if File::deleteFile() method can be called without onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::deleteFile() method can be called without onsuccess - Description: Check if File::deleteFile() method can be called without onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_deleteFile_with_valid_filePath.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-55-File_extend" name="55-File_extend" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if instance of File can be extended with new property - Description: Check if instance of File can be extended with new property">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if instance of File can be extended with new property - Description: Check if instance of File can be extended with new property]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_extend.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-56-File_fileSize_attribute" name="56-File_fileSize_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::fileSize attribute exists, has type Number and is readonly - Description: Check if File::fileSize attribute exists, has type Number and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::fileSize attribute exists, has type Number and is readonly - Description: Check if File::fileSize attribute exists, has type Number and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_fileSize_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-57-File_fullPath_attribute" name="57-File_fullPath_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::fullPath attribute exists, has type DOMString and is readonly - Description: Check if File::fullPath attribute exists, has type DOMString and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::fullPath attribute exists, has type DOMString and is readonly - Description: Check if File::fullPath attribute exists, has type DOMString and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_fullPath_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-58-File_isDirectory_attribute" name="58-File_isDirectory_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::isDirectory attribute exists, has type Boolean and is readonly - Description: Check if File::isDirectory attribute exists, has type Boolean and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::isDirectory attribute exists, has type Boolean and is readonly - Description: Check if File::isDirectory attribute exists, has type Boolean and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_isDirectory_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-59-File_isFile_attribute" name="59-File_isFile_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::isFile attribute exists, has type Boolean and is readonly - Description: Check if File::isFile attribute exists, has type Boolean and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::isFile attribute exists, has type Boolean and is readonly - Description: Check if File::isFile attribute exists, has type Boolean and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_isFile_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5A-File_length_attribute" name="5A-File_length_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::length attribute exists, has type Number and is readonly - Description: Check if File::length attribute exists, has type Number and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::length attribute exists, has type Number and is readonly - Description: Check if File::length attribute exists, has type Number and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_length_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5B-File_listFiles" name="5B-File_listFiles" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::listFiles() method works properly - Description: Check if File::listFiles() method works properly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::listFiles() method works properly - Description: Check if File::listFiles() method works properly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5C-File_listFiles_createFiles" name="5C-File_listFiles_createFiles" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create a new directory and then list files in this directory - Description: Check if you can create a new directory and then list files in this directory">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create a new directory and then list files in this directory - Description: Check if you can create a new directory and then list files in this directory]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles_createFiles.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5D-File_listFiles_exist" name="5D-File_listFiles_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::listFiles() method exists - Description: Check if File::listFiles() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::listFiles() method exists - Description: Check if File::listFiles() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5E-File_listFiles_filter_TypeMismatch" name="5E-File_listFiles_filter_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::listFiles() method throws exception for wrong type of filter - Description: Check if File::listFiles() method throws exception for wrong type of filter">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::listFiles() method throws exception for wrong type of filter - Description: Check if File::listFiles() method throws exception for wrong type of filter]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles_filter_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5F-File_listFiles_filter_empty" name="5F-File_listFiles_filter_empty" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::listFiles() can be called with empty object as filter argument - Description: Check if File::listFiles() can be called with empty object as filter argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::listFiles() can be called with empty object as filter argument - Description: Check if File::listFiles() can be called with empty object as filter argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles_filter_empty.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5G-File_listFiles_missarg" name="5G-File_listFiles_missarg" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::listFiles() with missing mandatory argument throws exception - Description: Check if File::listFiles() with missing mandatory argument throws exception">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::listFiles() with missing mandatory argument throws exception - Description: Check if File::listFiles() with missing mandatory argument throws exception]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles_missarg.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5H-File_listFiles_onerror_TypeMismatch" name="5H-File_listFiles_onerror_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::listFiles() throws exception for wrong type of onerror - Description: Check if File::listFiles() throws exception for wrong type of onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::listFiles() throws exception for wrong type of onerror - Description: Check if File::listFiles() throws exception for wrong type of onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles_onerror_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5I-File_listFiles_onerror_invalid_cb" name="5I-File_listFiles_onerror_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::listFiles() throws exception for wrong onerror - Description: Check if File::listFiles() throws exception for wrong onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::listFiles() throws exception for wrong onerror - Description: Check if File::listFiles() throws exception for wrong onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles_onerror_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5J-File_listFiles_onsuccess_TypeMismatch" name="5J-File_listFiles_onsuccess_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::listFiles() throws exception for wrong type of onsuccess - Description: Check if File::listFiles() throws exception for wrong type of onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::listFiles() throws exception for wrong type of onsuccess - Description: Check if File::listFiles() throws exception for wrong type of onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles_onsuccess_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5K-File_listFiles_onsuccess_invalid_cb" name="5K-File_listFiles_onsuccess_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::listFiles() throws exception for wrong onsuccess - Description: Check if File::listFiles() throws exception for wrong onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::listFiles() throws exception for wrong onsuccess - Description: Check if File::listFiles() throws exception for wrong onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles_onsuccess_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5L-File_listFiles_with_file_handle" name="5L-File_listFiles_with_file_handle" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::listFiles() calls errorCallback when called on File object representing file, not a directory - Description: Check if File::listFiles() calls errorCallback when called on File object representing file, not a directory">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::listFiles() calls errorCallback when called on File object representing file, not a directory - Description: Check if File::listFiles() calls errorCallback when called on File object representing file, not a directory]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles_with_file_handle.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5M-File_listFiles_with_filter" name="5M-File_listFiles_with_filter" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::listFiles() works with filter argument - Description: Check if File::listFiles() works with filter argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::listFiles() works with filter argument - Description: Check if File::listFiles() works with filter argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles_with_filter.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5N-File_listFiles_with_onerror" name="5N-File_listFiles_with_onerror" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::listFiles() calls errorCallback (listing files of a file) - Description: Check if File::listFiles() calls errorCallback (listing files of a file)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::listFiles() calls errorCallback (listing files of a file) - Description: Check if File::listFiles() calls errorCallback (listing files of a file)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles_with_onerror.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5O-File_listFiles_with_valid_successCallback" name="5O-File_listFiles_with_valid_successCallback" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::listFiles() call onsuccess callback - Description: Check if File::listFiles() call onsuccess callback">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::listFiles() call onsuccess callback - Description: Check if File::listFiles() call onsuccess callback]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_listFiles_with_valid_successCallback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5P-File_modified_attribute" name="5P-File_modified_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::modified attribute exists, has type Date and is readonly - Description: Check if File::modified attribute exists, has type Date and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::modified attribute exists, has type Date and is readonly - Description: Check if File::modified attribute exists, has type Date and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_modified_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5Q-File_moveTo" name="5Q-File_moveTo" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() can be called successfully - Description: Check if File::moveTo() can be called successfully">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() can be called successfully - Description: Check if File::moveTo() can be called successfully]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5R-File_moveTo_dir_samedir_samename_overwrite_false" name="5R-File_moveTo_dir_samedir_samename_overwrite_false" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() invokes error callback when moving a directory to the same location with the same name (overwrite is false) - Description: Check if File::moveTo() invokes error callback when moving a directory to the same location with the same name (overwrite is false)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() invokes error callback when moving a directory to the same location with the same name (overwrite is false) - Description: Check if File::moveTo() invokes error callback when moving a directory to the same location with the same name (overwrite is false)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_dir_samedir_samename_overwrite_false.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5S-File_moveTo_dir_samedir_samename_overwrite_true" name="5S-File_moveTo_dir_samedir_samename_overwrite_true" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() invokes error callback when moving a directory to the same location with the same name (overwrite is true) - Description: Check if File::moveTo() invokes error callback when moving a directory to the same location with the same name (overwrite is true)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() invokes error callback when moving a directory to the same location with the same name (overwrite is true) - Description: Check if File::moveTo() invokes error callback when moving a directory to the same location with the same name (overwrite is true)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_dir_samedir_samename_overwrite_true.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5T-File_moveTo_empty_destination_source_and_destination_paths" name="5T-File_moveTo_empty_destination_source_and_destination_paths" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() invokes error callback when originFilePath and destinationFilePath are empty - Description: Check if File::moveTo() invokes error callback when originFilePath and destinationFilePath are empty">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() invokes error callback when originFilePath and destinationFilePath are empty - Description: Check if File::moveTo() invokes error callback when originFilePath and destinationFilePath are empty]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_empty_destination_source_and_destination_paths.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5U-File_moveTo_exist" name="5U-File_moveTo_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() method exists - Description: Check if File::moveTo() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() method exists - Description: Check if File::moveTo() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5V-File_moveTo_file_samedir_samename_overwrite_false" name="5V-File_moveTo_file_samedir_samename_overwrite_false" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() invokes error callback when moving a file to the same location with the same name (overwrite is false) - Description: Check if File::moveTo() invokes error callback when moving a file to the same location with the same name (overwrite is false)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() invokes error callback when moving a file to the same location with the same name (overwrite is false) - Description: Check if File::moveTo() invokes error callback when moving a file to the same location with the same name (overwrite is false)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_file_samedir_samename_overwrite_false.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5W-File_moveTo_file_samedir_samename_overwrite_true" name="5W-File_moveTo_file_samedir_samename_overwrite_true" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() error callback when moving a file to the same location with the same name (overwrite is true) - Description: Check if File::moveTo() error callback when moving a file to the same location with the same name (overwrite is true)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() error callback when moving a file to the same location with the same name (overwrite is true) - Description: Check if File::moveTo() error callback when moving a file to the same location with the same name (overwrite is true)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_file_samedir_samename_overwrite_true.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5X-File_moveTo_onerror_TypeMismatch" name="5X-File_moveTo_onerror_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() throws exception for wrong type of onerror - Description: Check if File::moveTo() throws exception for wrong type of onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() throws exception for wrong type of onerror - Description: Check if File::moveTo() throws exception for wrong type of onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_onerror_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5Y-File_moveTo_onerror_invalid_cb" name="5Y-File_moveTo_onerror_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() throws exception for wrong onerror - Description: Check if File::moveTo() throws exception for wrong onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() throws exception for wrong onerror - Description: Check if File::moveTo() throws exception for wrong onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_onerror_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-5Z-File_moveTo_onsuccess_TypeMismatch" name="5Z-File_moveTo_onsuccess_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() throws exception for wrong type of onsuccess - Description: Check if File::moveTo() throws exception for wrong type of onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() throws exception for wrong type of onsuccess - Description: Check if File::moveTo() throws exception for wrong type of onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_onsuccess_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-60-File_moveTo_onsuccess_invalid_cb" name="60-File_moveTo_onsuccess_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() throws exception for wrong onsuccess - Description: Check if File::moveTo() throws exception for wrong onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() throws exception for wrong onsuccess - Description: Check if File::moveTo() throws exception for wrong onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_onsuccess_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-61-File_moveTo_with_additional_null_parameter" name="61-File_moveTo_with_additional_null_parameter" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() method can be invoked with extra null parameter - Description: Check if File::moveTo() method can be invoked with extra null parameter">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() method can be invoked with extra null parameter - Description: Check if File::moveTo() method can be invoked with extra null parameter]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_with_additional_null_parameter.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-62-File_moveTo_with_file_handle" name="62-File_moveTo_with_file_handle" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() calls errorCallback when called on File object representing file, not a directory - Description: Check if File::moveTo() calls errorCallback when called on File object representing file, not a directory">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() calls errorCallback when called on File object representing file, not a directory - Description: Check if File::moveTo() calls errorCallback when called on File object representing file, not a directory]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_with_file_handle.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-63-File_moveTo_with_onerror" name="63-File_moveTo_with_onerror" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() calls errorCallback (source file does not exist) - Description: Check if File::moveTo() calls errorCallback (source file does not exist)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() calls errorCallback (source file does not exist) - Description: Check if File::moveTo() calls errorCallback (source file does not exist)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_with_onerror.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-64-File_moveTo_with_onsuccess" name="64-File_moveTo_with_onsuccess" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() calls successCallback - Description: Check if File::moveTo() calls successCallback">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() calls successCallback - Description: Check if File::moveTo() calls successCallback]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_with_onsuccess.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-65-File_moveTo_with_path_invalid" name="65-File_moveTo_with_path_invalid" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() calls errorCallback (NotFound) when destinationFilePath is in non-existing directory - Description: Check if File::moveTo() calls errorCallback (NotFound) when destinationFilePath is in non-existing directory">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() calls errorCallback (NotFound) when destinationFilePath is in non-existing directory - Description: Check if File::moveTo() calls errorCallback (NotFound) when destinationFilePath is in non-existing directory]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_with_path_invalid.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-66-File_moveTo_writeFile_newName" name="66-File_moveTo_writeFile_newName" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create a new file, write content to it, and then move the file to the same directory with different file name - Description: Check if you can create a new file, write content to it, and then move the file to the same directory with different file name">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create a new file, write content to it, and then move the file to the same directory with different file name - Description: Check if you can create a new file, write content to it, and then move the file to the same directory with different file name]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_writeFile_newName.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-67-File_moveTo_writeFile_overwrite_false" name="67-File_moveTo_writeFile_overwrite_false" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::moveTo() calls errorCallback when originFilePath and destinationFilePath is the same path (overwrite false) - Description: Check if File::moveTo() calls errorCallback when originFilePath and destinationFilePath is the same path (overwrite false)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::moveTo() calls errorCallback when originFilePath and destinationFilePath is the same path (overwrite false) - Description: Check if File::moveTo() calls errorCallback when originFilePath and destinationFilePath is the same path (overwrite false)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_writeFile_overwrite_false.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-68-File_moveTo_writeFile_subdir" name="68-File_moveTo_writeFile_subdir" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if you can create a new file, write content to it, and then move the file to a subdirectory keeping the name of the file - Description: Check if you can create a new file, write content to it, and then move the file to a subdirectory keeping the name of the file">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if you can create a new file, write content to it, and then move the file to a subdirectory keeping the name of the file - Description: Check if you can create a new file, write content to it, and then move the file to a subdirectory keeping the name of the file]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_moveTo_writeFile_subdir.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-69-File_name_attribute" name="69-File_name_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::name attribute exists, has type DOMString and is readonly - Description: Check if File::name attribute exists, has type DOMString and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::name attribute exists, has type DOMString and is readonly - Description: Check if File::name attribute exists, has type DOMString and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_name_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6A-File_notexist" name="6A-File_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Interface File should not be accessible - Description: Interface File should not be accessible">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Interface File should not be accessible - Description: Interface File should not be accessible]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6B-File_openStream" name="6B-File_openStream" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() method works properly - Description: Check if File::openStream() method works properly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() method works properly - Description: Check if File::openStream() method works properly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6C-File_openStream_encoding_invalid" name="6C-File_openStream_encoding_invalid" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() throws an exception for invalid encoding value - Description: Check if File::openStream() throws an exception for invalid encoding value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() throws an exception for invalid encoding value - Description: Check if File::openStream() throws an exception for invalid encoding value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_encoding_invalid.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6D-File_openStream_exist" name="6D-File_openStream_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() method exists - Description: Check if File::openStream() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() method exists - Description: Check if File::openStream() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6E-File_openStream_missarg" name="6E-File_openStream_missarg" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() method throws exception for missing mandatory argument - Description: Check if File::openStream() method throws exception for missing mandatory argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() method throws exception for missing mandatory argument - Description: Check if File::openStream() method throws exception for missing mandatory argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_missarg.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6F-File_openStream_mode_TypeMismatch" name="6F-File_openStream_mode_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() throws exception for wrong type of mode argument - Description: Check if File::openStream() throws exception for wrong type of mode argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() throws exception for wrong type of mode argument - Description: Check if File::openStream() throws exception for wrong type of mode argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_mode_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6G-File_openStream_mode_a" name="6G-File_openStream_mode_a" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() works for mode a - Description: Check if File::openStream() works for mode a">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() works for mode a - Description: Check if File::openStream() works for mode a]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_mode_a.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6H-File_openStream_mode_r" name="6H-File_openStream_mode_r" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() works for mode r - Description: Check if File::openStream() works for mode r">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() works for mode r - Description: Check if File::openStream() works for mode r]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_mode_r.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6I-File_openStream_mode_rw" name="6I-File_openStream_mode_rw" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() works for mode rw - Description: Check if File::openStream() works for mode rw">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() works for mode rw - Description: Check if File::openStream() works for mode rw]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_mode_rw.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6J-File_openStream_mode_w" name="6J-File_openStream_mode_w" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() works for mode w - Description: Check if File::openStream() works for mode w">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() works for mode w - Description: Check if File::openStream() works for mode w]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_mode_w.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6K-File_openStream_onerror_TypeMismatch" name="6K-File_openStream_onerror_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() method throws exception for wrong type of onerror - Description: Check if File::openStream() method throws exception for wrong type of onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() method throws exception for wrong type of onerror - Description: Check if File::openStream() method throws exception for wrong type of onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_onerror_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6L-File_openStream_onerror_invalid_cb" name="6L-File_openStream_onerror_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() method throws exception for wrong onerror - Description: Check if File::openStream() method throws exception for wrong onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() method throws exception for wrong onerror - Description: Check if File::openStream() method throws exception for wrong onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_onerror_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6M-File_openStream_onsuccess_TypeMismatch" name="6M-File_openStream_onsuccess_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() method throws exception for wrong type of onsuccess - Description: Check if File::openStream() method throws exception for wrong type of onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() method throws exception for wrong type of onsuccess - Description: Check if File::openStream() method throws exception for wrong type of onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_onsuccess_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6N-File_openStream_onsuccess_invalid_cb" name="6N-File_openStream_onsuccess_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() method throws exception for wrong onsuccess - Description: Check if File::openStream() method throws exception for wrong onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() method throws exception for wrong onsuccess - Description: Check if File::openStream() method throws exception for wrong onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_onsuccess_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6O-File_openStream_with_encoding" name="6O-File_openStream_with_encoding" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() method can be called with valid encoding argument - Description: Check if File::openStream() method can be called with valid encoding argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() method can be called with valid encoding argument - Description: Check if File::openStream() method can be called with valid encoding argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_with_encoding.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6P-File_openStream_with_nonexist_file" name="6P-File_openStream_with_nonexist_file" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() method calls errorCallback when invoked for file which was already removed - Description: Check if File::openStream() method calls errorCallback when invoked for file which was already removed">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() method calls errorCallback when invoked for file which was already removed - Description: Check if File::openStream() method calls errorCallback when invoked for file which was already removed]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_with_nonexist_file.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6Q-File_openStream_with_onerror" name="6Q-File_openStream_with_onerror" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::openStream() method calls errorCallback properly (openStream used on directory) - Description: Check if File::openStream() method calls errorCallback properly (openStream used on directory)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::openStream() method calls errorCallback properly (openStream used on directory) - Description: Check if File::openStream() method calls errorCallback properly (openStream used on directory)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_openStream_with_onerror.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6R-File_parent_attribute" name="6R-File_parent_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::parent attribute exists, has type File and is readonly - Description: Check if File::parent attribute exists, has type File and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::parent attribute exists, has type File and is readonly - Description: Check if File::parent attribute exists, has type File and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_parent_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6S-File_parent_attribute_notnull_using_resolve" name="6S-File_parent_attribute_notnull_using_resolve" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::parent attribute is set by resolve() for subdirectory of Documents - Description: Check if File::parent attribute is set by resolve() for subdirectory of Documents">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::parent attribute is set by resolve() for subdirectory of Documents - Description: Check if File::parent attribute is set by resolve() for subdirectory of Documents]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_parent_attribute_notnull_using_resolve.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6T-File_path_attribute" name="6T-File_path_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::path attribute exists, has type DOMString and is readonly - Description: Check if File::path attribute exists, has type DOMString and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::path attribute exists, has type DOMString and is readonly - Description: Check if File::path attribute exists, has type DOMString and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_path_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6U-File_readAsText" name="6U-File_readAsText" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method works properly without errorCallback - Description: Check if File::readAsText() method works properly without errorCallback">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method works properly without errorCallback - Description: Check if File::readAsText() method works properly without errorCallback]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6V-File_readAsText_encoding_invalid" name="6V-File_readAsText_encoding_invalid" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method throws exception for invalid encoding value - Description: Check if File::readAsText() method throws exception for invalid encoding value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method throws exception for invalid encoding value - Description: Check if File::readAsText() method throws exception for invalid encoding value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_encoding_invalid.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6W-File_readAsText_exist" name="6W-File_readAsText_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method exists - Description: Check if File::readAsText() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method exists - Description: Check if File::readAsText() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6X-File_readAsText_listDocumentsFiles" name="6X-File_readAsText_listDocumentsFiles" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method works for a file created in Documents - Description: Check if File::readAsText() method works for a file created in Documents">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method works for a file created in Documents - Description: Check if File::readAsText() method works for a file created in Documents]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_listDocumentsFiles.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6Y-File_readAsText_listDownloadsFiles" name="6Y-File_readAsText_listDownloadsFiles" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method works for a file created in Downloads - Description: Check if File::readAsText() method works for a file created in Downloads">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method works for a file created in Downloads - Description: Check if File::readAsText() method works for a file created in Downloads]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_listDownloadsFiles.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-6Z-File_readAsText_listImagesFiles" name="6Z-File_readAsText_listImagesFiles" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method works for a file created in Images - Description: Check if File::readAsText() method works for a file created in Images">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method works for a file created in Images - Description: Check if File::readAsText() method works for a file created in Images]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_listImagesFiles.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-70-File_readAsText_listMusicFiles" name="70-File_readAsText_listMusicFiles" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method works for a file created in Music - Description: Check if File::readAsText() method works for a file created in Music">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method works for a file created in Music - Description: Check if File::readAsText() method works for a file created in Music]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_listMusicFiles.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-71-File_readAsText_listVideosFiles" name="71-File_readAsText_listVideosFiles" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method works for a file created in Videos - Description: Check if File::readAsText() method works for a file created in Videos">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method works for a file created in Videos - Description: Check if File::readAsText() method works for a file created in Videos]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_listVideosFiles.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-72-File_readAsText_missarg" name="72-File_readAsText_missarg" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() throws exception for missing mandatory parameter - Description: Check if File::readAsText() throws exception for missing mandatory parameter">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() throws exception for missing mandatory parameter - Description: Check if File::readAsText() throws exception for missing mandatory parameter]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_missarg.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-73-File_readAsText_onerror_TypeMismatch" name="73-File_readAsText_onerror_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method throws exception for wrong type of onerror - Description: Check if File::readAsText() method throws exception for wrong type of onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method throws exception for wrong type of onerror - Description: Check if File::readAsText() method throws exception for wrong type of onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_onerror_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-74-File_readAsText_onerror_invalid_cb" name="74-File_readAsText_onerror_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method throws exception for wrong onerror - Description: Check if File::readAsText() method throws exception for wrong onerror">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method throws exception for wrong onerror - Description: Check if File::readAsText() method throws exception for wrong onerror]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_onerror_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-75-File_readAsText_onsuccess_TypeMismatch" name="75-File_readAsText_onsuccess_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method throws exception for wrong type of onsuccess - Description: Check if File::readAsText() method throws exception for wrong type of onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method throws exception for wrong type of onsuccess - Description: Check if File::readAsText() method throws exception for wrong type of onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_onsuccess_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-76-File_readAsText_onsuccess_invalid_cb" name="76-File_readAsText_onsuccess_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method throws exception for wrong onsuccess - Description: Check if File::readAsText() method throws exception for wrong onsuccess">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method throws exception for wrong onsuccess - Description: Check if File::readAsText() method throws exception for wrong onsuccess]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_onsuccess_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-77-File_readAsText_with_encoding" name="77-File_readAsText_with_encoding" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method works with encoding argument - Description: Check if File::readAsText() method works with encoding argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method works with encoding argument - Description: Check if File::readAsText() method works with encoding argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_with_encoding.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-78-File_readAsText_with_onerror" name="78-File_readAsText_with_onerror" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() properly calls errorCallback (called on a directory instead of file) - Description: Check if File::readAsText() properly calls errorCallback (called on a directory instead of file)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() properly calls errorCallback (called on a directory instead of file) - Description: Check if File::readAsText() properly calls errorCallback (called on a directory instead of file)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readAsText_with_onerror.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-79-File_readOnly_attribute" name="79-File_readOnly_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readOnly attribute exists, has type Boolean and is readonly - Description: Check if File::readOnly attribute exists, has type Boolean and is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readOnly attribute exists, has type Boolean and is readonly - Description: Check if File::readOnly attribute exists, has type Boolean and is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_readOnly_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-7A-File_resolve" name="7A-File_resolve" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::resolve() method works properly - Description: Check if File::resolve() method works properly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::resolve() method works properly - Description: Check if File::resolve() method works properly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_resolve.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-7B-File_resolve_exist" name="7B-File_resolve_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::resolve() method exists - Description: Check if File::resolve() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::resolve() method exists - Description: Check if File::resolve() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_resolve_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-7C-File_resolve_with_nonexist" name="7C-File_resolve_with_nonexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::resolve() throws exception when resolving a file which not exist - Description: Check if File::resolve() throws exception when resolving a file which not exist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::resolve() throws exception when resolving a file which not exist - Description: Check if File::resolve() throws exception when resolving a file which not exist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_resolve_with_nonexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-7D-File_toURI" name="7D-File_toURI" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::toURI() method works properly - Description: Check if File::toURI() method works properly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::toURI() method works properly - Description: Check if File::toURI() method works properly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_toURI.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-7E-File_toURI_exist" name="7E-File_toURI_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::toURI() method exists - Description: Check if File::toURI() method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::toURI() method exists - Description: Check if File::toURI() method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_toURI_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-7F-File_toURI_extra_argument" name="7F-File_toURI_extra_argument" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::toURI() method accepts extra argument - Description: Check if File::toURI() method accepts extra argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::toURI() method accepts extra argument - Description: Check if File::toURI() method accepts extra argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_toURI_extra_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-7G-File_toURI_with_nonexist_file" name="7G-File_toURI_with_nonexist_file" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::toURI() method throws exception when get a URI of non-existing file - Description: Check if File::toURI() method throws exception when get a URI of non-existing file">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::toURI() method throws exception when get a URI of non-existing file - Description: Check if File::toURI() method throws exception when get a URI of non-existing file]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/File_toURI_with_nonexist_file.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-7H-filesystem_FileStreamSuccessCallback_onsuccess" name="7H-filesystem_FileStreamSuccessCallback_onsuccess" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Test whether FileStreamSuccessCallback::onsuccess is called with valid argument - Description: Test whether FileStreamSuccessCallback::onsuccess is called with valid argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Test whether FileStreamSuccessCallback::onsuccess is called with valid argument - Description: Test whether FileStreamSuccessCallback::onsuccess is called with valid argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/filesystem_FileStreamSuccessCallback_onsuccess.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-7I-filesystem_File_copyTo" name="7I-filesystem_File_copyTo" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::copyTo() can be called - Description: Check if File::copyTo() can be called">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::copyTo() can be called - Description: Check if File::copyTo() can be called]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/filesystem_File_copyTo.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-7J-filesystem_File_readAsText" name="7J-filesystem_File_readAsText" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::readAsText() method reads the content of a file as a DOMString - Description: Check if File::readAsText() method reads the content of a file as a DOMString">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::readAsText() method reads the content of a file as a DOMString - Description: Check if File::readAsText() method reads the content of a file as a DOMString]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/filesystem_File_readAsText.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-0C-7K-filesystem_File_resolve" name="7K-filesystem_File_resolve" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-filesystem-tizen-tests" status="designed" type="" purpose="Objective: Check if File::resolve() method called for a file returns a file handle - Description: Check if File::resolve() method called for a file returns a file handle">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if File::resolve() method called for a file returns a file handle - Description: Check if File::resolve() method called for a file returns a file handle]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-filesystem-tizen-tests/filesystem/filesystem_File_resolve.html</test_script_entry>
                </description>
            </testcase>
        </set>
    </suite>
</test_definition>