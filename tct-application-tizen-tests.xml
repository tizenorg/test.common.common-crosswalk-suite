<?xml version="1.0"?>
<test_definition>
    <suite launcher="xwalk" name="00-common/E0-crosswalk">
        <set name="common/crosswalk/deviceapi/tct-application-tizen-tests">
            <testcase id="00-E0-01-02-01-ApplicationContextArraySuccessCallback_notexist" name="01-ApplicationContextArraySuccessCallback_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationContextArraySuccessCallback cannot be called as a function or in new expression - Description: Check if ApplicationContextArraySuccessCallback cannot be called as a function or in new expression">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationContextArraySuccessCallback cannot be called as a function or in new expression - Description: Check if ApplicationContextArraySuccessCallback cannot be called as a function or in new expression]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationContextArraySuccessCallback_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-02-ApplicationContextArraySuccessCallback_onsuccess" name="02-ApplicationContextArraySuccessCallback_onsuccess" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationContextArraySuccessCallback onsuccess is called and if its arguments have proper type - Description: Check if ApplicationContextArraySuccessCallback onsuccess is called and if its arguments have proper type" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationContextArraySuccessCallback onsuccess is called and if its arguments have proper type - Description: Check if ApplicationContextArraySuccessCallback onsuccess is called and if its arguments have proper type]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationContextArraySuccessCallback_onsuccess.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-03-ApplicationContext_appId_attribute" name="03-ApplicationContext_appId_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check attribute ApplicationContext::appId existence and type - Description: Check attribute ApplicationContext::appId existence and type">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check attribute ApplicationContext::appId existence and type - Description: Check attribute ApplicationContext::appId existence and type]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationContext_appId_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-04-ApplicationContext_extend" name="04-ApplicationContext_extend" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationContext possible extend - Description: Check if ApplicationContext possible extend">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationContext possible extend - Description: Check if ApplicationContext possible extend]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationContext_extend.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-05-ApplicationContext_id_attribute" name="05-ApplicationContext_id_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check attribute ApplicationContext::id existence and type - Description: Check attribute ApplicationContext::id existence and type">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check attribute ApplicationContext::id existence and type - Description: Check attribute ApplicationContext::id existence and type]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationContext_id_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-06-ApplicationContext_notexist" name="06-ApplicationContext_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationContext notexist - Description: Check if ApplicationContext notexist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationContext notexist - Description: Check if ApplicationContext notexist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationContext_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-07-ApplicationInformationArraySuccessCallback_notexist" name="07-ApplicationInformationArraySuccessCallback_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformationArraySuccessCallback cannot be called as a function or in new expression - Description: Check if ApplicationInformationArraySuccessCallback cannot be called as a function or in new expression">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformationArraySuccessCallback cannot be called as a function or in new expression - Description: Check if ApplicationInformationArraySuccessCallback cannot be called as a function or in new expression]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformationArraySuccessCallback_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-08-ApplicationInformationArraySuccessCallback_onsuccess" name="08-ApplicationInformationArraySuccessCallback_onsuccess" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformationArraySuccessCallback onsuccess is called and if its arguments have proper type - Description: Check if ApplicationInformationArraySuccessCallback onsuccess is called and if its arguments have proper type" onload_delay="90">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformationArraySuccessCallback onsuccess is called and if its arguments have proper type - Description: Check if ApplicationInformationArraySuccessCallback onsuccess is called and if its arguments have proper type]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformationArraySuccessCallback_onsuccess.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-09-ApplicationInformationEventCallback_notexist" name="09-ApplicationInformationEventCallback_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformationEventCallback notexist - Description: Check if ApplicationInformationEventCallback notexist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformationEventCallback notexist - Description: Check if ApplicationInformationEventCallback notexist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformationEventCallback_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0A-ApplicationInformation_categories_attribute" name="0A-ApplicationInformation_categories_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformation have categories attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have categories attribute with proper type, readonly, not null" onload_delay="90">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformation have categories attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have categories attribute with proper type, readonly, not null]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformation_categories_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0B-ApplicationInformation_extend" name="0B-ApplicationInformation_extend" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformation can have new properties added - Description: Check if ApplicationInformation can have new properties added" onload_delay="90">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformation can have new properties added - Description: Check if ApplicationInformation can have new properties added]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformation_extend.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0C-ApplicationInformation_iconPath_attribute" name="0C-ApplicationInformation_iconPath_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformation have iconPath attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have iconPath attribute with proper type, readonly, not null" onload_delay="90">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformation have iconPath attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have iconPath attribute with proper type, readonly, not null]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformation_iconPath_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0D-ApplicationInformation_id_attribute" name="0D-ApplicationInformation_id_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformation have id attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have id attribute with proper type, readonly, not null" onload_delay="90">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformation have id attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have id attribute with proper type, readonly, not null]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformation_id_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0E-ApplicationInformation_installDate_attribute" name="0E-ApplicationInformation_installDate_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformation have installDate attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have installDate attribute with proper type, readonly, not null" onload_delay="90">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformation have installDate attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have installDate attribute with proper type, readonly, not null]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformation_installDate_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0F-ApplicationInformation_name_attribute" name="0F-ApplicationInformation_name_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformation have name attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have name attribute with proper type, readonly, not null" onload_delay="90">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformation have name attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have name attribute with proper type, readonly, not null]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformation_name_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0G-ApplicationInformation_notexist" name="0G-ApplicationInformation_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformation cannot be called as a function or in new expression - Description: Check if ApplicationInformation cannot be called as a function or in new expression">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformation cannot be called as a function or in new expression - Description: Check if ApplicationInformation cannot be called as a function or in new expression]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformation_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0H-ApplicationInformation_packageId_attribute" name="0H-ApplicationInformation_packageId_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformation have packageId attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have packageId attribute with proper type, readonly, not null" onload_delay="90">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformation have packageId attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have packageId attribute with proper type, readonly, not null]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformation_packageId_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0I-ApplicationInformation_show_attribute" name="0I-ApplicationInformation_show_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformation have show attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have show attribute with proper type, readonly, not null" onload_delay="90">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformation have show attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have show attribute with proper type, readonly, not null]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformation_show_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0J-ApplicationInformation_size_attribute" name="0J-ApplicationInformation_size_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformation have size attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have size attribute with proper type, readonly, not null" onload_delay="90">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformation have size attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have size attribute with proper type, readonly, not null]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformation_size_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0K-ApplicationInformation_version_attribute" name="0K-ApplicationInformation_version_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationInformation have version attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have version attribute with proper type, readonly, not null" onload_delay="90">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationInformation have version attribute with proper type, readonly, not null - Description: Check if ApplicationInformation have version attribute with proper type, readonly, not null]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationInformation_version_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0L-ApplicationManager_addAppInfoEventListener_eventCallback_TypeMismatch" name="0L-ApplicationManager_addAppInfoEventListener_eventCallback_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check non-optional argument 'ApplicationInformationEventCallback' type conversion - Description: Check non-optional argument 'ApplicationInformationEventCallback' type conversion">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check non-optional argument 'ApplicationInformationEventCallback' type conversion - Description: Check non-optional argument 'ApplicationInformationEventCallback' type conversion]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_addAppInfoEventListener_eventCallback_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0M-ApplicationManager_addAppInfoEventListener_eventCallback_invalid_cb" name="0M-ApplicationManager_addAppInfoEventListener_eventCallback_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if an exception was thrown when a fake callback was passed into addAppInfoEventListener method - Description: Check if an exception was thrown when a fake callback was passed into addAppInfoEventListener method">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception was thrown when a fake callback was passed into addAppInfoEventListener method - Description: Check if an exception was thrown when a fake callback was passed into addAppInfoEventListener method]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_addAppInfoEventListener_eventCallback_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0N-ApplicationManager_addAppInfoEventListener_exist" name="0N-ApplicationManager_addAppInfoEventListener_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if method addAppInfoEventListener exist - Description: Check if method addAppInfoEventListener exist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if method addAppInfoEventListener exist - Description: Check if method addAppInfoEventListener exist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_addAppInfoEventListener_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0O-ApplicationManager_addAppInfoEventListener_missarg" name="0O-ApplicationManager_addAppInfoEventListener_missarg" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check addAppInfoEventListener with missing non-optional ApplicationInformationEventCallback argument - Description: Check addAppInfoEventListener with missing non-optional ApplicationInformationEventCallback argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check addAppInfoEventListener with missing non-optional ApplicationInformationEventCallback argument - Description: Check addAppInfoEventListener with missing non-optional ApplicationInformationEventCallback argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_addAppInfoEventListener_missarg.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0P-ApplicationManager_extend" name="0P-ApplicationManager_extend" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationManager possible extend - Description: Check if ApplicationManager possible extend">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationManager possible extend - Description: Check if ApplicationManager possible extend]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_extend.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0Q-ApplicationManager_getAppContext" name="0Q-ApplicationManager_getAppContext" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using getAppContext method (with non-optional arguments) in ApplicationManager interface to get ApplicationContext of current application - Description: Check using getAppContext method (with non-optional arguments) in ApplicationManager interface to get ApplicationContext of current application">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using getAppContext method (with non-optional arguments) in ApplicationManager interface to get ApplicationContext of current application - Description: Check using getAppContext method (with non-optional arguments) in ApplicationManager interface to get ApplicationContext of current application]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppContext.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0R-ApplicationManager_getAppContext_exist" name="0R-ApplicationManager_getAppContext_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if method getAppContext exist - Description: Check if method getAppContext exist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if method getAppContext exist - Description: Check if method getAppContext exist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppContext_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0S-ApplicationManager_getAppContext_with_contextId" name="0S-ApplicationManager_getAppContext_with_contextId" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using getAppContext method (with optional argument contextId) in ApplicationManager interface to get ApplicationContext with given contextId - Description: Check using getAppContext method (with optional argument contextId) in ApplicationManager interface to get ApplicationContext with given contextId">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using getAppContext method (with optional argument contextId) in ApplicationManager interface to get ApplicationContext with given contextId - Description: Check using getAppContext method (with optional argument contextId) in ApplicationManager interface to get ApplicationContext with given contextId]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppContext_with_contextId.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0T-ApplicationManager_getAppInfo" name="0T-ApplicationManager_getAppInfo" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using getAppInfo method (with non-optional arguments) in ApplicationManager interface to get ApplicationInformation of current application - Description: Check using getAppInfo method (with non-optional arguments) in ApplicationManager interface to get ApplicationInformation of current application">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using getAppInfo method (with non-optional arguments) in ApplicationManager interface to get ApplicationInformation of current application - Description: Check using getAppInfo method (with non-optional arguments) in ApplicationManager interface to get ApplicationInformation of current application]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppInfo.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0U-ApplicationManager_getAppInfo_exist" name="0U-ApplicationManager_getAppInfo_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if method getAppInfo exist - Description: Check if method getAppInfo exist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if method getAppInfo exist - Description: Check if method getAppInfo exist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppInfo_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0V-ApplicationManager_getAppInfo_with_id" name="0V-ApplicationManager_getAppInfo_with_id" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using getAppInfo method (with optional argument ApplicationId) in ApplicationManager interface to get ApplicationInformation with given ApplicationId - Description: Check using getAppInfo method (with optional argument ApplicationId) in ApplicationManager interface to get ApplicationInformation with given ApplicationId">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using getAppInfo method (with optional argument ApplicationId) in ApplicationManager interface to get ApplicationInformation with given ApplicationId - Description: Check using getAppInfo method (with optional argument ApplicationId) in ApplicationManager interface to get ApplicationInformation with given ApplicationId]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppInfo_with_id.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0W-ApplicationManager_getAppsContext" name="0W-ApplicationManager_getAppsContext" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using getAppsContext method (with non-optional arguments) in ApplicationManager interface to get ApplicationsContext of applications that are currently running on a device - Description: Check using getAppsContext method (with non-optional arguments) in ApplicationManager interface to get ApplicationsContext of applications that are currently running on a device" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using getAppsContext method (with non-optional arguments) in ApplicationManager interface to get ApplicationsContext of applications that are currently running on a device - Description: Check using getAppsContext method (with non-optional arguments) in ApplicationManager interface to get ApplicationsContext of applications that are currently running on a device]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsContext.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0X-ApplicationManager_getAppsContext_errorCallback_TypeMismatch" name="0X-ApplicationManager_getAppsContext_errorCallback_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check optional argument errorCallback (getAppsContext method) type conversion - Description: Check optional argument errorCallback (getAppsContext method) type conversion" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check optional argument errorCallback (getAppsContext method) type conversion - Description: Check optional argument errorCallback (getAppsContext method) type conversion]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsContext_errorCallback_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0Y-ApplicationManager_getAppsContext_errorCallback_invalid_cb" name="0Y-ApplicationManager_getAppsContext_errorCallback_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if an exception was thrown when a fake callback (onerror) was passed into getAppsContext method - Description: Check if an exception was thrown when a fake callback (onerror) was passed into getAppsContext method" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception was thrown when a fake callback (onerror) was passed into getAppsContext method - Description: Check if an exception was thrown when a fake callback (onerror) was passed into getAppsContext method]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsContext_errorCallback_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-0Z-ApplicationManager_getAppsContext_exist" name="0Z-ApplicationManager_getAppsContext_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if method getAppsContext exists - Description: Check if method getAppsContext exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if method getAppsContext exists - Description: Check if method getAppsContext exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsContext_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-10-ApplicationManager_getAppsContext_missarg" name="10-ApplicationManager_getAppsContext_missarg" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: GetAppsContext - check with missing non-optional argument - Description: GetAppsContext - check with missing non-optional argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: GetAppsContext - check with missing non-optional argument - Description: GetAppsContext - check with missing non-optional argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsContext_missarg.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-11-ApplicationManager_getAppsContext_successCallback_TypeMismatch" name="11-ApplicationManager_getAppsContext_successCallback_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check non-optional argument successCallback (getAppsContext method) type conversion - Description: Check non-optional argument successCallback (getAppsContext method) type conversion">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check non-optional argument successCallback (getAppsContext method) type conversion - Description: Check non-optional argument successCallback (getAppsContext method) type conversion]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsContext_successCallback_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-12-ApplicationManager_getAppsContext_successCallback_invalid_cb" name="12-ApplicationManager_getAppsContext_successCallback_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if an exception was thrown when a fake callback (onsuccess) was passed into getAppsContext method - Description: Check if an exception was thrown when a fake callback (onsuccess) was passed into getAppsContext method" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception was thrown when a fake callback (onsuccess) was passed into getAppsContext method - Description: Check if an exception was thrown when a fake callback (onsuccess) was passed into getAppsContext method]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsContext_successCallback_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-13-ApplicationManager_getAppsContext_with_errorCallback" name="13-ApplicationManager_getAppsContext_with_errorCallback" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using getAppsContext method (with optional argument errorCallback) in ApplicationManager interface - Description: Check using getAppsContext method (with optional argument errorCallback) in ApplicationManager interface" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using getAppsContext method (with optional argument errorCallback) in ApplicationManager interface - Description: Check using getAppsContext method (with optional argument errorCallback) in ApplicationManager interface]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsContext_with_errorCallback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-14-ApplicationManager_getAppsInfo" name="14-ApplicationManager_getAppsInfo" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using getAppsInfo method (with non-optional arguments) in ApplicationManager interface - Description: Check using getAppsInfo method (with non-optional arguments) in ApplicationManager interface" onload_delay="90">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using getAppsInfo method (with non-optional arguments) in ApplicationManager interface - Description: Check using getAppsInfo method (with non-optional arguments) in ApplicationManager interface]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsInfo.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-15-ApplicationManager_getAppsInfo_errorCallback_TypeMismatch" name="15-ApplicationManager_getAppsInfo_errorCallback_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check optional argument errorCallback (getAppsInfo method) type conversion - Description: Check optional argument errorCallback (getAppsInfo method) type conversion" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check optional argument errorCallback (getAppsInfo method) type conversion - Description: Check optional argument errorCallback (getAppsInfo method) type conversion]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsInfo_errorCallback_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-16-ApplicationManager_getAppsInfo_errorCallback_invalid_cb" name="16-ApplicationManager_getAppsInfo_errorCallback_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if an exception was thrown when a fake callback (onerror) was passed into getAppsInfo method - Description: Check if an exception was thrown when a fake callback (onerror) was passed into getAppsInfo method" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception was thrown when a fake callback (onerror) was passed into getAppsInfo method - Description: Check if an exception was thrown when a fake callback (onerror) was passed into getAppsInfo method]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsInfo_errorCallback_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-17-ApplicationManager_getAppsInfo_exist" name="17-ApplicationManager_getAppsInfo_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if method getAppsInfo exist - Description: Check if method getAppsInfo exist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if method getAppsInfo exist - Description: Check if method getAppsInfo exist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsInfo_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-18-ApplicationManager_getAppsInfo_missarg" name="18-ApplicationManager_getAppsInfo_missarg" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: ApplicationManager.getAppsInfo - check with missing non-optional argument - Description: ApplicationManager.getAppsInfo - check with missing non-optional argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: ApplicationManager.getAppsInfo - check with missing non-optional argument - Description: ApplicationManager.getAppsInfo - check with missing non-optional argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsInfo_missarg.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-19-ApplicationManager_getAppsInfo_successCallback_TypeMismatch" name="19-ApplicationManager_getAppsInfo_successCallback_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check non-optional argument successCallback (getAppsInfo method) type conversion - Description: Check non-optional argument successCallback (getAppsInfo method) type conversion">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check non-optional argument successCallback (getAppsInfo method) type conversion - Description: Check non-optional argument successCallback (getAppsInfo method) type conversion]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsInfo_successCallback_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1A-ApplicationManager_getAppsInfo_successCallback_invalid_cb" name="1A-ApplicationManager_getAppsInfo_successCallback_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if an exception was thrown when a fake callback (onsuccess) was passed into getAppsInfo method - Description: Check if an exception was thrown when a fake callback (onsuccess) was passed into getAppsInfo method" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception was thrown when a fake callback (onsuccess) was passed into getAppsInfo method - Description: Check if an exception was thrown when a fake callback (onsuccess) was passed into getAppsInfo method]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsInfo_successCallback_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1B-ApplicationManager_getAppsInfo_with_errorCallback" name="1B-ApplicationManager_getAppsInfo_with_errorCallback" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using getAppsInfo method (with optional argument errorCallback) in ApplicationManager interface - Description: Check using getAppsInfo method (with optional argument errorCallback) in ApplicationManager interface" onload_delay="90">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using getAppsInfo method (with optional argument errorCallback) in ApplicationManager interface - Description: Check using getAppsInfo method (with optional argument errorCallback) in ApplicationManager interface]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getAppsInfo_with_errorCallback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1C-ApplicationManager_getCurrentApplication" name="1C-ApplicationManager_getCurrentApplication" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using getCurrentApplication method in ApplicationManager interface to get current Application object - Description: Check using getCurrentApplication method in ApplicationManager interface to get current Application object">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using getCurrentApplication method in ApplicationManager interface to get current Application object - Description: Check using getCurrentApplication method in ApplicationManager interface to get current Application object]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getCurrentApplication.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1D-ApplicationManager_getCurrentApplication_exist" name="1D-ApplicationManager_getCurrentApplication_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if method getCurrentApplication exist - Description: Check if method getCurrentApplication exist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if method getCurrentApplication exist - Description: Check if method getCurrentApplication exist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getCurrentApplication_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1E-ApplicationManager_getCurrentApplication_extra_argument" name="1E-ApplicationManager_getCurrentApplication_extra_argument" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using getCurrentApplication with extra argument to get current Application object - Description: Check using getCurrentApplication with extra argument to get current Application object">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using getCurrentApplication with extra argument to get current Application object - Description: Check using getCurrentApplication with extra argument to get current Application object]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_getCurrentApplication_extra_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1F-ApplicationManager_in_tizen" name="1F-ApplicationManager_in_tizen" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationManager exist in tizen - Description: Check if ApplicationManager exist in tizen">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationManager exist in tizen - Description: Check if ApplicationManager exist in tizen]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_in_tizen.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1G-ApplicationManager_kill" name="1G-ApplicationManager_kill" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using kill method (with non-optional arguments) in ApplicationManager interface - Description: Check using kill method (with non-optional arguments) in ApplicationManager interface" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using kill method (with non-optional arguments) in ApplicationManager interface - Description: Check using kill method (with non-optional arguments) in ApplicationManager interface]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_kill.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1H-ApplicationManager_kill_errorCallback_TypeMismatch" name="1H-ApplicationManager_kill_errorCallback_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check optional argument 'onError' (kill) type conversion - Description: Check optional argument 'onError' (kill) type conversion" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check optional argument 'onError' (kill) type conversion - Description: Check optional argument 'onError' (kill) type conversion]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_kill_errorCallback_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1I-ApplicationManager_kill_errorCallback_invalid_cb" name="1I-ApplicationManager_kill_errorCallback_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if an exception was thrown when a fake callback (onError) was passed into kill method - Description: Check if an exception was thrown when a fake callback (onError) was passed into kill method" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception was thrown when a fake callback (onError) was passed into kill method - Description: Check if an exception was thrown when a fake callback (onError) was passed into kill method]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_kill_errorCallback_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1J-ApplicationManager_kill_exist" name="1J-ApplicationManager_kill_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if method kill exist - Description: Check if method kill exist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if method kill exist - Description: Check if method kill exist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_kill_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1K-ApplicationManager_kill_successCallback_TypeMismatch" name="1K-ApplicationManager_kill_successCallback_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check optional argument 'onSuccess' (kill) type conversion - Description: Check optional argument 'onSuccess' (kill) type conversion" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check optional argument 'onSuccess' (kill) type conversion - Description: Check optional argument 'onSuccess' (kill) type conversion]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_kill_successCallback_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1L-ApplicationManager_kill_successCallback_invalid_cb" name="1L-ApplicationManager_kill_successCallback_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if an exception was thrown when a fake callback (onSuccess) was passed into kill method - Description: Check if an exception was thrown when a fake callback (onSuccess) was passed into kill method" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception was thrown when a fake callback (onSuccess) was passed into kill method - Description: Check if an exception was thrown when a fake callback (onSuccess) was passed into kill method]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_kill_successCallback_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1M-ApplicationManager_kill_with_errorCallback" name="1M-ApplicationManager_kill_with_errorCallback" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using kill method (with optional argument errorCallback) in ApplicationManager interface - Description: Check using kill method (with optional argument errorCallback) in ApplicationManager interface" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using kill method (with optional argument errorCallback) in ApplicationManager interface - Description: Check using kill method (with optional argument errorCallback) in ApplicationManager interface]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_kill_with_errorCallback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1N-ApplicationManager_kill_with_successCallback" name="1N-ApplicationManager_kill_with_successCallback" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using kill method (with optional argument successCallback) in ApplicationManager interface - Description: Check using kill method (with optional argument successCallback) in ApplicationManager interface" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using kill method (with optional argument successCallback) in ApplicationManager interface - Description: Check using kill method (with optional argument successCallback) in ApplicationManager interface]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_kill_with_successCallback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1O-ApplicationManager_launch" name="1O-ApplicationManager_launch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using launch method (with non-optional arguments) in ApplicationManager interface - Description: Check using launch method (with non-optional arguments) in ApplicationManager interface" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using launch method (with non-optional arguments) in ApplicationManager interface - Description: Check using launch method (with non-optional arguments) in ApplicationManager interface]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_launch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1P-ApplicationManager_launch_errorCallback_TypeMismatch" name="1P-ApplicationManager_launch_errorCallback_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check optional argument 'onError' (launch) type conversion - Description: Check optional argument 'onError' (launch) type conversion" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check optional argument 'onError' (launch) type conversion - Description: Check optional argument 'onError' (launch) type conversion]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_launch_errorCallback_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1Q-ApplicationManager_launch_errorCallback_invalid_cb" name="1Q-ApplicationManager_launch_errorCallback_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if an exception was thrown when a fake callback (on error) was passed - Description: Check if an exception was thrown when a fake callback (on error) was passed" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception was thrown when a fake callback (on error) was passed - Description: Check if an exception was thrown when a fake callback (on error) was passed]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_launch_errorCallback_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1R-ApplicationManager_launch_exist" name="1R-ApplicationManager_launch_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if method launch exist - Description: Check if method launch exist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if method launch exist - Description: Check if method launch exist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_launch_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1S-ApplicationManager_launch_successCallback_TypeMismatch" name="1S-ApplicationManager_launch_successCallback_TypeMismatch" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check optional argument 'onSuccess' (launch) type conversion - Description: Check optional argument 'onSuccess' (launch) type conversion" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check optional argument 'onSuccess' (launch) type conversion - Description: Check optional argument 'onSuccess' (launch) type conversion]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_launch_successCallback_TypeMismatch.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1T-ApplicationManager_launch_successCallback_invalid_cb" name="1T-ApplicationManager_launch_successCallback_invalid_cb" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if an exception was thrown when a fake callback (on success) was passed - Description: Check if an exception was thrown when a fake callback (on success) was passed" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception was thrown when a fake callback (on success) was passed - Description: Check if an exception was thrown when a fake callback (on success) was passed]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_launch_successCallback_invalid_cb.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1U-ApplicationManager_launch_with_errorCallback" name="1U-ApplicationManager_launch_with_errorCallback" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using launch method (with optional argument errorCallback) in ApplicationManager interface - Description: Check using launch method (with optional argument errorCallback) in ApplicationManager interface" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using launch method (with optional argument errorCallback) in ApplicationManager interface - Description: Check using launch method (with optional argument errorCallback) in ApplicationManager interface]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_launch_with_errorCallback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1V-ApplicationManager_launch_with_successCallback" name="1V-ApplicationManager_launch_with_successCallback" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check using launch method (with optional argument successCallback) in ApplicationManager interface - Description: Check using launch method (with optional argument successCallback) in ApplicationManager interface" onload_delay="30">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check using launch method (with optional argument successCallback) in ApplicationManager interface - Description: Check using launch method (with optional argument successCallback) in ApplicationManager interface]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_launch_with_successCallback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1W-ApplicationManager_notexist" name="1W-ApplicationManager_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if ApplicationManager notexist - Description: Check if ApplicationManager notexist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ApplicationManager notexist - Description: Check if ApplicationManager notexist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/ApplicationManager_notexist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1X-Application_ContextId_attribute" name="1X-Application_ContextId_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check attribute Application::ContextId existence and type - Description: Check attribute Application::ContextId existence and type">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check attribute Application::ContextId existence and type - Description: Check attribute Application::ContextId existence and type]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/Application_ContextId_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1Y-Application_appInfo_attribute" name="1Y-Application_appInfo_attribute" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check attribute Application::appInfo existence and type - Description: Check attribute Application::appInfo existence and type">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check attribute Application::appInfo existence and type - Description: Check attribute Application::appInfo existence and type]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/Application_appInfo_attribute.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-1Z-Application_exit_exist" name="1Z-Application_exit_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if method Application.exit exist - Description: Check if method Application.exit exist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if method Application.exit exist - Description: Check if method Application.exit exist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/Application_exit_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-20-Application_extend" name="20-Application_extend" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if Application possible extend - Description: Check if Application possible extend">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if Application possible extend - Description: Check if Application possible extend]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/Application_extend.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-21-Application_hide_exist" name="21-Application_hide_exist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if method Application.hide exist - Description: Check if method Application.hide exist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if method Application.hide exist - Description: Check if method Application.hide exist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/Application_hide_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-01-02-22-Application_notexist" name="22-Application_notexist" priority="P0" execution_type="auto" component="common/crosswalk/deviceapi/tct-application-tizen-tests" status="designed" type="compliance" purpose="Objective: Check if Application notexist - Description: Check if Application notexist">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if Application notexist - Description: Check if Application notexist]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-application-tizen-tests/application/Application_notexist.html</test_script_entry>
                </description>
            </testcase>
        </set>
    </suite>
</test_definition>