<?xml version="1.0"?>
<test_definition>
    <suite launcher="xwalk" name="00-common/E0-crosswalk">
        <set name="common/crosswalk/commonapi/tct-webaudio-w3c-tests">
            <testcase id="00-E0-00-1G-01-analysernode_fftSize_exists" name="01-analysernode_fftSize_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.fftSize attribute exists - Description: Check if AnalyserNode.fftSize attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.fftSize attribute exists - Description: Check if AnalyserNode.fftSize attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_fftSize_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-02-analysernode_fftSize_type" name="02-analysernode_fftSize_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AnalyserNode.fftSize is number - Description: Check if the type of AnalyserNode.fftSize is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AnalyserNode.fftSize is number - Description: Check if the type of AnalyserNode.fftSize is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_fftSize_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-03-analysernode_frequencyBinCount_exists" name="03-analysernode_frequencyBinCount_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.frequencyBinCount attribute exists - Description: Check if AnalyserNode.frequencyBinCount attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.frequencyBinCount attribute exists - Description: Check if AnalyserNode.frequencyBinCount attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-04-analysernode_frequencyBinCount_readonly" name="04-analysernode_frequencyBinCount_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.frequencyBinCount attribute is readonly - Description: Check if AnalyserNode.frequencyBinCount attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.frequencyBinCount attribute is readonly - Description: Check if AnalyserNode.frequencyBinCount attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-05-analysernode_frequencyBinCount_type" name="05-analysernode_frequencyBinCount_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AnalyserNode.frequencyBinCount is number - Description: Check if the type of AnalyserNode.frequencyBinCount is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AnalyserNode.frequencyBinCount is number - Description: Check if the type of AnalyserNode.frequencyBinCount is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-06-analysernode_getByteFrequencyData_exists" name="06-analysernode_getByteFrequencyData_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.getByteFrequencyData method exists - Description: Check if AnalyserNode.getByteFrequencyData method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.getByteFrequencyData method exists - Description: Check if AnalyserNode.getByteFrequencyData method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteFrequencyData_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-07-analysernode_getByteFrequencyData_type" name="07-analysernode_getByteFrequencyData_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AnalyserNode.getByteFrequencyData is function - Description: Check if the type of AnalyserNode.getByteFrequencyData is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AnalyserNode.getByteFrequencyData is function - Description: Check if the type of AnalyserNode.getByteFrequencyData is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteFrequencyData_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-08-analysernode_getByteTimeDomainData_exists" name="08-analysernode_getByteTimeDomainData_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.getByteTimeDomainData method exists - Description: Check if AnalyserNode.getByteTimeDomainData method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.getByteTimeDomainData method exists - Description: Check if AnalyserNode.getByteTimeDomainData method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteTimeDomainData_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-09-analysernode_getByteTimeDomainData_type" name="09-analysernode_getByteTimeDomainData_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AnalyserNode.getByteTimeDomainData is function - Description: Check if the type of AnalyserNode.getByteTimeDomainData is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AnalyserNode.getByteTimeDomainData is function - Description: Check if the type of AnalyserNode.getByteTimeDomainData is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteTimeDomainData_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0A-analysernode_getFloatFrequencyData_exists" name="0A-analysernode_getFloatFrequencyData_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.getFloatFrequencyData method exists - Description: Check if AnalyserNode.getFloatFrequencyData method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.getFloatFrequencyData method exists - Description: Check if AnalyserNode.getFloatFrequencyData method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getFloatFrequencyData_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0B-analysernode_getFloatFrequencyData_type" name="0B-analysernode_getFloatFrequencyData_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AnalyserNode.getFloatFrequencyData is function - Description: Check if the type of AnalyserNode.getFloatFrequencyData is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AnalyserNode.getFloatFrequencyData is function - Description: Check if the type of AnalyserNode.getFloatFrequencyData is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getFloatFrequencyData_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0C-analysernode_maxDecibels_exists" name="0C-analysernode_maxDecibels_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.maxDecibels attribute exists - Description: Check if AnalyserNode.maxDecibels attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.maxDecibels attribute exists - Description: Check if AnalyserNode.maxDecibels attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_maxDecibels_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0D-analysernode_maxDecibels_type" name="0D-analysernode_maxDecibels_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AnalyserNode.maxDecibels is number - Description: Check if the type of AnalyserNode.maxDecibels is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AnalyserNode.maxDecibels is number - Description: Check if the type of AnalyserNode.maxDecibels is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_maxDecibels_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0E-analysernode_minDecibels_exists" name="0E-analysernode_minDecibels_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.minDecibels attribute exists - Description: Check if AnalyserNode.minDecibels attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.minDecibels attribute exists - Description: Check if AnalyserNode.minDecibels attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_minDecibels_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0F-analysernode_minDecibels_type" name="0F-analysernode_minDecibels_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AnalyserNode.minDecibels attribute is number - Description: Check if the type of AnalyserNode.minDecibels attribute is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AnalyserNode.minDecibels attribute is number - Description: Check if the type of AnalyserNode.minDecibels attribute is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_minDecibels_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0G-analysernode_smoothingTimeConstant_exists" name="0G-analysernode_smoothingTimeConstant_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.smoothingTimeConstant attribute exists - Description: Check if AnalyserNode.smoothingTimeConstant attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.smoothingTimeConstant attribute exists - Description: Check if AnalyserNode.smoothingTimeConstant attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_smoothingTimeConstant_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0H-analysernode_smoothingTimeConstant_type" name="0H-analysernode_smoothingTimeConstant_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AnalyserNode.smoothingTimeConstant is number - Description: Check if the type of AnalyserNode.smoothingTimeConstant is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AnalyserNode.smoothingTimeConstant is number - Description: Check if the type of AnalyserNode.smoothingTimeConstant is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_smoothingTimeConstant_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0I-audiobuffer_duration_exists" name="0I-audiobuffer_duration_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBuffer.duration attribute exists - Description: Check if AudioBuffer.duration attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBuffer.duration attribute exists - Description: Check if AudioBuffer.duration attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_duration_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0J-audiobuffer_duration_readonly" name="0J-audiobuffer_duration_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBuffer.duration attribute is readonly - Description: Check if AudioBuffer.duration attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBuffer.duration attribute is readonly - Description: Check if AudioBuffer.duration attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_duration_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0K-audiobuffer_duration_type" name="0K-audiobuffer_duration_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioBuffer.duration is number - Description: Check if the type of AudioBuffer.duration is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioBuffer.duration is number - Description: Check if the type of AudioBuffer.duration is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_duration_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0L-audiobuffer_getChannelData_exists" name="0L-audiobuffer_getChannelData_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBuffer.getChannelData method exists - Description: Check if AudioBuffer.getChannelData method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBuffer.getChannelData method exists - Description: Check if AudioBuffer.getChannelData method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0M-audiobuffer_getChannelData_type" name="0M-audiobuffer_getChannelData_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the return type of AudioBuffer.getChannelData is Float32Array - Description: Check if the return type of AudioBuffer.getChannelData is Float32Array">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the return type of AudioBuffer.getChannelData is Float32Array - Description: Check if the return type of AudioBuffer.getChannelData is Float32Array]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0N-audiobuffer_length_exists" name="0N-audiobuffer_length_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBuffer.length attribute exists - Description: Check if AudioBuffer.length attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBuffer.length attribute exists - Description: Check if AudioBuffer.length attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0O-audiobuffer_length_readonly" name="0O-audiobuffer_length_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBuffer.length attribute is readonly - Description: Check if AudioBuffer.length attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBuffer.length attribute is readonly - Description: Check if AudioBuffer.length attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0P-audiobuffer_length_type" name="0P-audiobuffer_length_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioBuffer.length is number - Description: Check if the type of AudioBuffer.length is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioBuffer.length is number - Description: Check if the type of AudioBuffer.length is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0Q-audiobuffer_numberOfChannels_exists" name="0Q-audiobuffer_numberOfChannels_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBuffer.numberOfChannels attribute exists - Description: Check if AudioBuffer.numberOfChannels attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBuffer.numberOfChannels attribute exists - Description: Check if AudioBuffer.numberOfChannels attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0R-audiobuffer_numberOfChannels_readonly" name="0R-audiobuffer_numberOfChannels_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBuffer.numberOfChannels attribute is readonly - Description: Check if AudioBuffer.numberOfChannels attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBuffer.numberOfChannels attribute is readonly - Description: Check if AudioBuffer.numberOfChannels attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0S-audiobuffer_numberOfChannels_type" name="0S-audiobuffer_numberOfChannels_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioBuffer.numberOfChannels is number - Description: Check if the type of AudioBuffer.numberOfChannels is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioBuffer.numberOfChannels is number - Description: Check if the type of AudioBuffer.numberOfChannels is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0T-audiobuffer_sampleRate_exists" name="0T-audiobuffer_sampleRate_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBuffer.sampleRate attribute exists - Description: Check if AudioBuffer.sampleRate attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBuffer.sampleRate attribute exists - Description: Check if AudioBuffer.sampleRate attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0U-audiobuffer_sampleRate_readonly" name="0U-audiobuffer_sampleRate_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBuffer.sampleRate attribute is readonly - Description: Check if AudioBuffer.sampleRate attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBuffer.sampleRate attribute is readonly - Description: Check if AudioBuffer.sampleRate attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0V-audiobuffer_sampleRate_type" name="0V-audiobuffer_sampleRate_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioBuffer.sampleRate is number - Description: Check if the type of AudioBuffer.sampleRate is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioBuffer.sampleRate is number - Description: Check if the type of AudioBuffer.sampleRate is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0W-audiobuffersourcenode_buffer_exists" name="0W-audiobuffersourcenode_buffer_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.buffer attribute exists - Description: Check if AudioBufferSourceNode.buffer attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.buffer attribute exists - Description: Check if AudioBufferSourceNode.buffer attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_buffer_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0X-audiobuffersourcenode_buffer_type" name="0X-audiobuffersourcenode_buffer_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioBufferSourceNode.buffer is AudioBuffer - Description: Check if the type of AudioBufferSourceNode.buffer is AudioBuffer">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioBufferSourceNode.buffer is AudioBuffer - Description: Check if the type of AudioBufferSourceNode.buffer is AudioBuffer]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_buffer_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0Y-audiobuffersourcenode_loop_exists" name="0Y-audiobuffersourcenode_loop_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.loop attribute exists - Description: Check if AudioBufferSourceNode.loop attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.loop attribute exists - Description: Check if AudioBufferSourceNode.loop attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-0Z-audiobuffersourcenode_loop_type" name="0Z-audiobuffersourcenode_loop_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioBufferSourceNode.loop is boolean - Description: Check if the type of AudioBufferSourceNode.loop is boolean">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioBufferSourceNode.loop is boolean - Description: Check if the type of AudioBufferSourceNode.loop is boolean]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-10-audiobuffersourcenode_loopEnd_exists" name="10-audiobuffersourcenode_loopEnd_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.loopEnd attribute exists - Description: Check if AudioBufferSourceNode.loopEnd attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.loopEnd attribute exists - Description: Check if AudioBufferSourceNode.loopEnd attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-11-audiobuffersourcenode_loopStart_exists" name="11-audiobuffersourcenode_loopStart_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.loopStart attribute exists - Description: Check if AudioBufferSourceNode.loopStart attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.loopStart attribute exists - Description: Check if AudioBufferSourceNode.loopStart attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-12-audiobuffersourcenode_playbackRate_exists" name="12-audiobuffersourcenode_playbackRate_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.playbackRate attribute exists - Description: Check if AudioBufferSourceNode.playbackRate attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.playbackRate attribute exists - Description: Check if AudioBufferSourceNode.playbackRate attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackRate_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-13-audiobuffersourcenode_playbackRate_type" name="13-audiobuffersourcenode_playbackRate_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioBufferSourceNode.playbackRate is AudioParam - Description: Check if the type of AudioBufferSourceNode.playbackRate is AudioParam">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioBufferSourceNode.playbackRate is AudioParam - Description: Check if the type of AudioBufferSourceNode.playbackRate is AudioParam]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackRate_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-14-audiobuffersourcenode_start_exists" name="14-audiobuffersourcenode_start_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.start method exists - Description: Check if AudioBufferSourceNode.start method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.start method exists - Description: Check if AudioBufferSourceNode.start method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-15-audiobuffersourcenode_start_type" name="15-audiobuffersourcenode_start_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioBufferSourceNode.start is function - Description: Check if the type of AudioBufferSourceNode.start is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioBufferSourceNode.start is function - Description: Check if the type of AudioBufferSourceNode.start is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-16-audiobuffersourcenode_stop_exists" name="16-audiobuffersourcenode_stop_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.stop method exists - Description: Check if AudioBufferSourceNode.stop method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.stop method exists - Description: Check if AudioBufferSourceNode.stop method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-17-audiobuffersourcenode_stop_type" name="17-audiobuffersourcenode_stop_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioBufferSourceNode.stop is function - Description: Check if the type of AudioBufferSourceNode.stop is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioBufferSourceNode.stop is function - Description: Check if the type of AudioBufferSourceNode.stop is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-18-audiocontext_createAnalyser_exists" name="18-audiocontext_createAnalyser_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createAnalyser method exists - Description: Check if AudioContext.createAnalyser method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createAnalyser method exists - Description: Check if AudioContext.createAnalyser method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createAnalyser_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-19-audiocontext_createAnalyser_type" name="19-audiocontext_createAnalyser_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createAnalyser is function - Description: Check if the type of AudioContext.createAnalyser is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createAnalyser is function - Description: Check if the type of AudioContext.createAnalyser is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createAnalyser_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1A-audiocontext_createBiquadFilter_exists" name="1A-audiocontext_createBiquadFilter_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createBiquadFilter method exists - Description: Check if AudioContext.createBiquadFilter method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createBiquadFilter method exists - Description: Check if AudioContext.createBiquadFilter method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBiquadFilter_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1B-audiocontext_createBiquadFilter_type" name="1B-audiocontext_createBiquadFilter_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createBiquadFilter attribute is function - Description: Check if AudioContext.createBiquadFilter attribute is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createBiquadFilter attribute is function - Description: Check if AudioContext.createBiquadFilter attribute is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBiquadFilter_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1C-audiocontext_createBuffer_exists" name="1C-audiocontext_createBuffer_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createBuffer method exists - Description: Check if AudioContext.createBuffer method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createBuffer method exists - Description: Check if AudioContext.createBuffer method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1D-audiocontext_createBuffer_type" name="1D-audiocontext_createBuffer_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createBuffer is function - Description: Check if the type of AudioContext.createBuffer is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createBuffer is function - Description: Check if the type of AudioContext.createBuffer is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1E-audiocontext_createBufferSource_exists" name="1E-audiocontext_createBufferSource_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createBufferSource method exists - Description: Check if AudioContext.createBufferSource method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createBufferSource method exists - Description: Check if AudioContext.createBufferSource method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBufferSource_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1F-audiocontext_createBufferSource_type" name="1F-audiocontext_createBufferSource_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createBufferSource is function - Description: Check if the type of AudioContext.createBufferSource is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createBufferSource is function - Description: Check if the type of AudioContext.createBufferSource is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBufferSource_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1G-audiocontext_createChannelMerger_exists" name="1G-audiocontext_createChannelMerger_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createChannelMerger method exists - Description: Check if AudioContext.createChannelMerger method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createChannelMerger method exists - Description: Check if AudioContext.createChannelMerger method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1H-audiocontext_createChannelMerger_type" name="1H-audiocontext_createChannelMerger_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createChannelMerger is function - Description: Check if the type of AudioContext.createChannelMerger is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createChannelMerger is function - Description: Check if the type of AudioContext.createChannelMerger is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1I-audiocontext_createChannelSplitter_exists" name="1I-audiocontext_createChannelSplitter_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createChannelSplitter method exists - Description: Check if AudioContext.createChannelSplitter method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createChannelSplitter method exists - Description: Check if AudioContext.createChannelSplitter method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1J-audiocontext_createChannelSplitter_type" name="1J-audiocontext_createChannelSplitter_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createChannelSplitter is function - Description: Check if the type of AudioContext.createChannelSplitter is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createChannelSplitter is function - Description: Check if the type of AudioContext.createChannelSplitter is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1K-audiocontext_createConvolver_exists" name="1K-audiocontext_createConvolver_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createConvolver method exists - Description: Check if AudioContext.createConvolver method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createConvolver method exists - Description: Check if AudioContext.createConvolver method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createConvolver_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1L-audiocontext_createConvolver_type" name="1L-audiocontext_createConvolver_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createConvolver is function - Description: Check if the type of AudioContext.createConvolver is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createConvolver is function - Description: Check if the type of AudioContext.createConvolver is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createConvolver_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1M-audiocontext_createDelay_exists" name="1M-audiocontext_createDelay_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createDelay method exists - Description: Check if AudioContext.createDelay method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createDelay method exists - Description: Check if AudioContext.createDelay method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelay_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1N-audiocontext_createDelay_type" name="1N-audiocontext_createDelay_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createDelay is function - Description: Check if the type of AudioContext.createDelay is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createDelay is function - Description: Check if the type of AudioContext.createDelay is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelay_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1O-audiocontext_createDynamicsCompressor_exists" name="1O-audiocontext_createDynamicsCompressor_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createDynamicsCompressor method exists - Description: Check if AudioContext.createDynamicsCompressor method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createDynamicsCompressor method exists - Description: Check if AudioContext.createDynamicsCompressor method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDynamicsCompressor_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1P-audiocontext_createDynamicsCompressor_type" name="1P-audiocontext_createDynamicsCompressor_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createDynamicsCompressor is function - Description: Check if the type of AudioContext.createDynamicsCompressor is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createDynamicsCompressor is function - Description: Check if the type of AudioContext.createDynamicsCompressor is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDynamicsCompressor_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1Q-audiocontext_createGain_exists" name="1Q-audiocontext_createGain_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createGain method exists - Description: Check if AudioContext.createGain method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createGain method exists - Description: Check if AudioContext.createGain method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createGain_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1R-audiocontext_createGain_type" name="1R-audiocontext_createGain_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createGain is function - Description: Check if the type of AudioContext.createGain is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createGain is function - Description: Check if the type of AudioContext.createGain is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createGain_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1S-audiocontext_createMediaElementSource_exists" name="1S-audiocontext_createMediaElementSource_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createMediaElementSource method exists - Description: Check if AudioContext.createMediaElementSource method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createMediaElementSource method exists - Description: Check if AudioContext.createMediaElementSource method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaElementSource_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1T-audiocontext_createMediaElementSource_type" name="1T-audiocontext_createMediaElementSource_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createMediaElementSource is function - Description: Check if the type of AudioContext.createMediaElementSource is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createMediaElementSource is function - Description: Check if the type of AudioContext.createMediaElementSource is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaElementSource_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1U-audiocontext_createMediaStreamSource_exists" name="1U-audiocontext_createMediaStreamSource_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createMediaStreamSource method exists - Description: Check if AudioContext.createMediaStreamSource method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createMediaStreamSource method exists - Description: Check if AudioContext.createMediaStreamSource method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaStreamSource_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1V-audiocontext_createMediaStreamSource_type" name="1V-audiocontext_createMediaStreamSource_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createMediaStreamSource is function - Description: Check if the type of AudioContext.createMediaStreamSource is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createMediaStreamSource is function - Description: Check if the type of AudioContext.createMediaStreamSource is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaStreamSource_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1W-audiocontext_createOscillator_exists" name="1W-audiocontext_createOscillator_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createOscillator method exists - Description: Check if AudioContext.createOscillator method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createOscillator method exists - Description: Check if AudioContext.createOscillator method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createOscillator_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1X-audiocontext_createOscillator_type" name="1X-audiocontext_createOscillator_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createOscillator is function - Description: Check if the type of AudioContext.createOscillator is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createOscillator is function - Description: Check if the type of AudioContext.createOscillator is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createOscillator_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1Y-audiocontext_createPanner_exists" name="1Y-audiocontext_createPanner_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createPanner method exists - Description: Check if AudioContext.createPanner method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createPanner method exists - Description: Check if AudioContext.createPanner method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPanner_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-1Z-audiocontext_createPanner_type" name="1Z-audiocontext_createPanner_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createPanner is function - Description: Check if the type of AudioContext.createPanner is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createPanner is function - Description: Check if the type of AudioContext.createPanner is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPanner_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-20-audiocontext_createScriptProcessor_exists" name="20-audiocontext_createScriptProcessor_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createScriptProcessor method exists - Description: Check if AudioContext.createScriptProcessor method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createScriptProcessor method exists - Description: Check if AudioContext.createScriptProcessor method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-21-audiocontext_createScriptProcessor_type" name="21-audiocontext_createScriptProcessor_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createScriptProcessor is function - Description: Check if the type of AudioContext.createScriptProcessor is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createScriptProcessor is function - Description: Check if the type of AudioContext.createScriptProcessor is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-22-audiocontext_createWaveShaper_exists" name="22-audiocontext_createWaveShaper_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createWaveShaper method exists - Description: Check if AudioContext.createWaveShaper method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createWaveShaper method exists - Description: Check if AudioContext.createWaveShaper method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createWaveShaper_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-23-audiocontext_createPeriodicWave_exists" name="23-audiocontext_createPeriodicWave_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createPeriodicWave method exists - Description: Check if AudioContext.createPeriodicWave method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createPeriodicWave method exists - Description: Check if AudioContext.createPeriodicWave method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPeriodicWave_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-24-audiocontext_createPeriodicWave_type" name="24-audiocontext_createPeriodicWave_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.createPeriodicWave is function - Description: Check if the type of AudioContext.createPeriodicWave is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.createPeriodicWave is function - Description: Check if the type of AudioContext.createPeriodicWave is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPeriodicWave_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-25-audiocontext_currentTime_exists" name="25-audiocontext_currentTime_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.currentTime attribute exists - Description: Check if AudioContext.currentTime attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.currentTime attribute exists - Description: Check if AudioContext.currentTime attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_currentTime_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-26-audiocontext_currentTime_readonly" name="26-audiocontext_currentTime_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.currentTime attribute is readonly - Description: Check if AudioContext.currentTime attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.currentTime attribute is readonly - Description: Check if AudioContext.currentTime attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_currentTime_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-27-audiocontext_currentTime_type" name="27-audiocontext_currentTime_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.currentTime attribute is function - Description: Check if the type of AudioContext.currentTime attribute is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.currentTime attribute is function - Description: Check if the type of AudioContext.currentTime attribute is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_currentTime_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-28-audiocontext_decodeAudioData_exists" name="28-audiocontext_decodeAudioData_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.decodeAudioData method exists - Description: Check if AudioContext.decodeAudioData method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.decodeAudioData method exists - Description: Check if AudioContext.decodeAudioData method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_decodeAudioData_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-29-audiocontext_decodeAudioData_type" name="29-audiocontext_decodeAudioData_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.decodeAudioData is function - Description: Check if the type of AudioContext.decodeAudioData is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.decodeAudioData is function - Description: Check if the type of AudioContext.decodeAudioData is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_decodeAudioData_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2A-audiocontext_destination_exists" name="2A-audiocontext_destination_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.destination attribute exists - Description: Check if AudioContext.destination attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.destination attribute exists - Description: Check if AudioContext.destination attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_destination_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2B-audiocontext_destination_readonly" name="2B-audiocontext_destination_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.destination attribute is readonly - Description: Check if AudioContext.destination attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.destination attribute is readonly - Description: Check if AudioContext.destination attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_destination_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2C-audiocontext_destination_type" name="2C-audiocontext_destination_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.destination is AudioDestinationNode - Description: Check if the type of AudioContext.destination is AudioDestinationNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.destination is AudioDestinationNode - Description: Check if the type of AudioContext.destination is AudioDestinationNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_destination_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2D-audiocontext_listener_exists" name="2D-audiocontext_listener_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.listener attribute exists - Description: Check if AudioContext.listener attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.listener attribute exists - Description: Check if AudioContext.listener attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_listener_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2E-audiocontext_listener_readonly" name="2E-audiocontext_listener_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.listener attribute is readonly - Description: Check if AudioContext.listener attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.listener attribute is readonly - Description: Check if AudioContext.listener attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_listener_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2F-audiocontext_listener_type" name="2F-audiocontext_listener_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.listener is AudioListener - Description: Check if the type of AudioContext.listener is AudioListener">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.listener is AudioListener - Description: Check if the type of AudioContext.listener is AudioListener]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_listener_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2G-audiocontext_sampleRate_exists" name="2G-audiocontext_sampleRate_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.sampleRate attribute exists - Description: Check if AudioContext.sampleRate attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.sampleRate attribute exists - Description: Check if AudioContext.sampleRate attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_sampleRate_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2H-audiocontext_sampleRate_readonly" name="2H-audiocontext_sampleRate_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.sampleRate attribute is readonly - Description: Check if AudioContext.sampleRate attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.sampleRate attribute is readonly - Description: Check if AudioContext.sampleRate attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_sampleRate_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2I-audiocontext_sampleRate_type" name="2I-audiocontext_sampleRate_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioContext.sampleRate is number - Description: Check if the type of AudioContext.sampleRate is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioContext.sampleRate is number - Description: Check if the type of AudioContext.sampleRate is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_sampleRate_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2J-audiolistener_dopplerFactor_exists" name="2J-audiolistener_dopplerFactor_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioListener.dopplerFactor attribute exists - Description: Check if AudioListener.dopplerFactor attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioListener.dopplerFactor attribute exists - Description: Check if AudioListener.dopplerFactor attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2K-audiolistener_dopplerFactor_type" name="2K-audiolistener_dopplerFactor_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioListener.dopplerFactor is number - Description: Check if the type of AudioListener.dopplerFactor is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioListener.dopplerFactor is number - Description: Check if the type of AudioListener.dopplerFactor is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2L-audiolistener_setOrientation_exists" name="2L-audiolistener_setOrientation_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioListener.setOrientation method exists - Description: Check if AudioListener.setOrientation method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioListener.setOrientation method exists - Description: Check if AudioListener.setOrientation method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setOrientation_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2M-audiolistener_setOrientation_type" name="2M-audiolistener_setOrientation_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioListener.setOrientation is function - Description: Check if the type of AudioListener.setOrientation is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioListener.setOrientation is function - Description: Check if the type of AudioListener.setOrientation is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setOrientation_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2N-audiolistener_setPosition_exists" name="2N-audiolistener_setPosition_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioListener.setPosition method exists - Description: Check if AudioListener.setPosition method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioListener.setPosition method exists - Description: Check if AudioListener.setPosition method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setPosition_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2O-audiolistener_setPosition_type" name="2O-audiolistener_setPosition_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioListener.setPosition is function - Description: Check if the type of AudioListener.setPosition is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioListener.setPosition is function - Description: Check if the type of AudioListener.setPosition is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setPosition_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2P-audiolistener_setVelocity_exists" name="2P-audiolistener_setVelocity_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioListener.setVelocity method exists - Description: Check if AudioListener.setVelocity method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioListener.setVelocity method exists - Description: Check if AudioListener.setVelocity method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setVelocity_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2Q-audiolistener_setVelocity_type" name="2Q-audiolistener_setVelocity_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioListener.setVelocity is function - Description: Check if the type of AudioListener.setVelocity is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioListener.setVelocity is function - Description: Check if the type of AudioListener.setVelocity is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setVelocity_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2R-audiolistener_speedOfSound_exists" name="2R-audiolistener_speedOfSound_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioListener.speedOfSound attribute exists - Description: Check if AudioListener.speedOfSound attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioListener.speedOfSound attribute exists - Description: Check if AudioListener.speedOfSound attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2S-audiolistener_speedOfSound_type" name="2S-audiolistener_speedOfSound_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioListener.speedOfSound is number - Description: Check if the type of AudioListener.speedOfSound is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioListener.speedOfSound is number - Description: Check if the type of AudioListener.speedOfSound is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2T-audionode_connect_exists" name="2T-audionode_connect_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.connect method exists - Description: Check if AudioNode.connect method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.connect method exists - Description: Check if AudioNode.connect method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2U-audionode_connect_type" name="2U-audionode_connect_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioNode.connect is function - Description: Check if the type of AudioNode.connect is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioNode.connect is function - Description: Check if the type of AudioNode.connect is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2V-audionode_context_exists" name="2V-audionode_context_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.context attribute exists - Description: Check if AudioNode.context attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.context attribute exists - Description: Check if AudioNode.context attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_context_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2W-audionode_context_readonly" name="2W-audionode_context_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.context attribute is readonly - Description: Check if AudioNode.context attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.context attribute is readonly - Description: Check if AudioNode.context attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_context_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2X-audionode_context_type" name="2X-audionode_context_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioNode.context is AudioContext - Description: Check if the type of AudioNode.context is AudioContext">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioNode.context is AudioContext - Description: Check if the type of AudioNode.context is AudioContext]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_context_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2Y-audionode_disconnect_exists" name="2Y-audionode_disconnect_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.disconnect method exists - Description: Check if AudioNode.disconnect method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.disconnect method exists - Description: Check if AudioNode.disconnect method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-2Z-audionode_disconnect_type" name="2Z-audionode_disconnect_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioNode.disconnect is function - Description: Check if the type of AudioNode.disconnect is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioNode.disconnect is function - Description: Check if the type of AudioNode.disconnect is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-30-audionode_numberOfInputs_exists" name="30-audionode_numberOfInputs_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.numberOfInputs attribute exists - Description: Check if AudioNode.numberOfInputs attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.numberOfInputs attribute exists - Description: Check if AudioNode.numberOfInputs attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfInputs_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-31-audionode_numberOfInputs_readonly" name="31-audionode_numberOfInputs_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.numberOfInputs attribute is readonly - Description: Check if AudioNode.numberOfInputs attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.numberOfInputs attribute is readonly - Description: Check if AudioNode.numberOfInputs attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfInputs_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-32-audionode_numberOfInputs_type" name="32-audionode_numberOfInputs_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioNode.numberOfInputs is number - Description: Check if the type of AudioNode.numberOfInputs is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioNode.numberOfInputs is number - Description: Check if the type of AudioNode.numberOfInputs is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfInputs_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-33-audionode_numberOfOutputs_exists" name="33-audionode_numberOfOutputs_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.numberOfOutputs attribute exists - Description: Check if AudioNode.numberOfOutputs attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.numberOfOutputs attribute exists - Description: Check if AudioNode.numberOfOutputs attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfOutputs_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-34-audionode_numberOfOutputs_readonly" name="34-audionode_numberOfOutputs_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.numberOfOutputs attribute is readonly - Description: Check if AudioNode.numberOfOutputs attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.numberOfOutputs attribute is readonly - Description: Check if AudioNode.numberOfOutputs attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfOutputs_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-35-audionode_numberOfOutputs_type" name="35-audionode_numberOfOutputs_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioNode.numberOfOutputs is number - Description: Check if the type of AudioNode.numberOfOutputs is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioNode.numberOfOutputs is number - Description: Check if the type of AudioNode.numberOfOutputs is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_numberOfOutputs_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-36-audioparam_cancelScheduledValues_exists" name="36-audioparam_cancelScheduledValues_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.cancelScheduledValues method exists - Description: Check if AudioParam.cancelScheduledValues method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.cancelScheduledValues method exists - Description: Check if AudioParam.cancelScheduledValues method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_cancelScheduledValues_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-37-audioparam_cancelScheduledValues_type" name="37-audioparam_cancelScheduledValues_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioParam.cancelScheduledValues is function - Description: Check if the type of AudioParam.cancelScheduledValues is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioParam.cancelScheduledValues is function - Description: Check if the type of AudioParam.cancelScheduledValues is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_cancelScheduledValues_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-38-audioparam_defaultValue_exists" name="38-audioparam_defaultValue_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.defaultValue attribute exists - Description: Check if AudioParam.defaultValue attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.defaultValue attribute exists - Description: Check if AudioParam.defaultValue attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_defaultValue_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-39-audioparam_defaultValue_readonly" name="39-audioparam_defaultValue_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.defaultValue attribute is readonly - Description: Check if AudioParam.defaultValue attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.defaultValue attribute is readonly - Description: Check if AudioParam.defaultValue attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_defaultValue_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3A-audioparam_defaultValue_type" name="3A-audioparam_defaultValue_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioParam.defaultValue is number - Description: Check if the type of AudioParam.defaultValue is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioParam.defaultValue is number - Description: Check if the type of AudioParam.defaultValue is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_defaultValue_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3B-audioparam_exponentialRampToValueAtTime_exists" name="3B-audioparam_exponentialRampToValueAtTime_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.exponentialRampToValueAtTime method exists - Description: Check if AudioParam.exponentialRampToValueAtTime method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.exponentialRampToValueAtTime method exists - Description: Check if AudioParam.exponentialRampToValueAtTime method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_exponentialRampToValueAtTime_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3C-audioparam_exponentialRampToValueAtTime_type" name="3C-audioparam_exponentialRampToValueAtTime_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioParam.exponentialRampToValueAtTime is function - Description: Check if the type of AudioParam.exponentialRampToValueAtTime is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioParam.exponentialRampToValueAtTime is function - Description: Check if the type of AudioParam.exponentialRampToValueAtTime is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_exponentialRampToValueAtTime_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3D-audioparam_linearRampToValueAtTime_exists" name="3D-audioparam_linearRampToValueAtTime_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.linearRampToValueAtTime method exists - Description: Check if AudioParam.linearRampToValueAtTime method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.linearRampToValueAtTime method exists - Description: Check if AudioParam.linearRampToValueAtTime method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_linearRampToValueAtTime_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3E-audioparam_linearRampToValueAtTime_type" name="3E-audioparam_linearRampToValueAtTime_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioParam.linearRampToValueAtTime is function - Description: Check if the type of AudioParam.linearRampToValueAtTime is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioParam.linearRampToValueAtTime is function - Description: Check if the type of AudioParam.linearRampToValueAtTime is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_linearRampToValueAtTime_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3F-audioparam_setTargetAtTime_exists" name="3F-audioparam_setTargetAtTime_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.setTargetAtTime method exists - Description: Check if AudioParam.setTargetAtTime method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.setTargetAtTime method exists - Description: Check if AudioParam.setTargetAtTime method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setTargetAtTime_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3G-audioparam_setTargetAtTime_type" name="3G-audioparam_setTargetAtTime_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioParam.setTargetAtTime is function - Description: Check if the type of AudioParam.setTargetAtTime is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioParam.setTargetAtTime is function - Description: Check if the type of AudioParam.setTargetAtTime is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setTargetAtTime_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3H-audioprocessingevent_inputBuffer_exists" name="3H-audioprocessingevent_inputBuffer_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioProcessingEvent.inputBuffer attribute exists - Description: Check if AudioProcessingEvent.inputBuffer attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioProcessingEvent.inputBuffer attribute exists - Description: Check if AudioProcessingEvent.inputBuffer attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3I-audioprocessingevent_inputBuffer_readonly" name="3I-audioprocessingevent_inputBuffer_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioProcessingEvent.inputBuffer attribute is readonly - Description: Check if AudioProcessingEvent.inputBuffer attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioProcessingEvent.inputBuffer attribute is readonly - Description: Check if AudioProcessingEvent.inputBuffer attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3J-audioprocessingevent_inputBuffer_type" name="3J-audioprocessingevent_inputBuffer_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioProcessingEvent.inputBuffer is AudioBuffer - Description: Check if the type of AudioProcessingEvent.inputBuffer is AudioBuffer">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioProcessingEvent.inputBuffer is AudioBuffer - Description: Check if the type of AudioProcessingEvent.inputBuffer is AudioBuffer]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3K-audioprocessingevent_outputBuffer_exists" name="3K-audioprocessingevent_outputBuffer_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioProcessingEvent.outputBuffer attribute exists - Description: Check if AudioProcessingEvent.outputBuffer attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioProcessingEvent.outputBuffer attribute exists - Description: Check if AudioProcessingEvent.outputBuffer attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3L-audioprocessingevent_outputBuffer_readonly" name="3L-audioprocessingevent_outputBuffer_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioProcessingEvent.outputBuffer attribute is readonly - Description: Check if AudioProcessingEvent.outputBuffer attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioProcessingEvent.outputBuffer attribute is readonly - Description: Check if AudioProcessingEvent.outputBuffer attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3M-audioprocessingevent_outputBuffer_type" name="3M-audioprocessingevent_outputBuffer_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioProcessingEvent.outputBuffer is AudioBuffer - Description: Check if the type of AudioProcessingEvent.outputBuffer is AudioBuffer">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioProcessingEvent.outputBuffer is AudioBuffer - Description: Check if the type of AudioProcessingEvent.outputBuffer is AudioBuffer]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3N-biquadfilternode_frequency_exists" name="3N-biquadfilternode_frequency_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode.frequency attribute exists - Description: Check if BiquadFilterNode.frequency attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode.frequency attribute exists - Description: Check if BiquadFilterNode.frequency attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_frequency_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3O-biquadfilternode_frequency_readonly" name="3O-biquadfilternode_frequency_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode.frequency attribute is readonly - Description: Check if BiquadFilterNode.frequency attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode.frequency attribute is readonly - Description: Check if BiquadFilterNode.frequency attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_frequency_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3P-biquadfilternode_frequency_type" name="3P-biquadfilternode_frequency_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of BiquadFilterNode.frequency is AudioParam - Description: Check if the type of BiquadFilterNode.frequency is AudioParam">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of BiquadFilterNode.frequency is AudioParam - Description: Check if the type of BiquadFilterNode.frequency is AudioParam]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_frequency_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3Q-biquadfilternode_gain_exists" name="3Q-biquadfilternode_gain_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode.gain attribute exists - Description: Check if BiquadFilterNode.gain attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode.gain attribute exists - Description: Check if BiquadFilterNode.gain attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_gain_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3R-biquadfilternode_gain_readonly" name="3R-biquadfilternode_gain_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode.gain attribute is readonly - Description: Check if BiquadFilterNode.gain attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode.gain attribute is readonly - Description: Check if BiquadFilterNode.gain attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_gain_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3S-biquadfilternode_gain_type" name="3S-biquadfilternode_gain_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of BiquadFilterNode.gain is AudioParam - Description: Check if the type of BiquadFilterNode.gain is AudioParam">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of BiquadFilterNode.gain is AudioParam - Description: Check if the type of BiquadFilterNode.gain is AudioParam]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_gain_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3T-biquadfilternode_getFrequencyResponse_exists" name="3T-biquadfilternode_getFrequencyResponse_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode.getFrequencyResponse method exists - Description: Check if BiquadFilterNode.getFrequencyResponse method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode.getFrequencyResponse method exists - Description: Check if BiquadFilterNode.getFrequencyResponse method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_getFrequencyResponse_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3U-biquadfilternode_getFrequencyResponse_type" name="3U-biquadfilternode_getFrequencyResponse_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of BiquadFilterNode.getFrequencyResponse is function - Description: Check if the type of BiquadFilterNode.getFrequencyResponse is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of BiquadFilterNode.getFrequencyResponse is function - Description: Check if the type of BiquadFilterNode.getFrequencyResponse is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_getFrequencyResponse_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3V-biquadfilternode_Q_exists" name="3V-biquadfilternode_Q_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode.Q attribute exists - Description: Check if BiquadFilterNode.Q attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode.Q attribute exists - Description: Check if BiquadFilterNode.Q attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_Q_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3W-biquadfilternode_Q_readonly" name="3W-biquadfilternode_Q_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode.Q attribute is readonly - Description: Check if BiquadFilterNode.Q attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode.Q attribute is readonly - Description: Check if BiquadFilterNode.Q attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_Q_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3X-biquadfilternode_Q_type" name="3X-biquadfilternode_Q_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of BiquadFilterNode.Q is AudioParam - Description: Check if the type of BiquadFilterNode.Q is AudioParam">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of BiquadFilterNode.Q is AudioParam - Description: Check if the type of BiquadFilterNode.Q is AudioParam]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_Q_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3Y-biquadfilternode_type_exists" name="3Y-biquadfilternode_type_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode.type attribute exists - Description: Check if BiquadFilterNode.type attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode.type attribute exists - Description: Check if BiquadFilterNode.type attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-3Z-biquadfilternode_type_type" name="3Z-biquadfilternode_type_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of BiquadFilterNode.type is string - Description: Check if the type of BiquadFilterNode.type is string">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of BiquadFilterNode.type is string - Description: Check if the type of BiquadFilterNode.type is string]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-40-convolvernode_buffer_exists" name="40-convolvernode_buffer_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if ConvolverNode.buffer attribute exists - Description: Check if ConvolverNode.buffer attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ConvolverNode.buffer attribute exists - Description: Check if ConvolverNode.buffer attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_buffer_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-41-convolvernode_buffer_type" name="41-convolvernode_buffer_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of ConvolverNode.buffer is AudioBuffer - Description: Check if the type of ConvolverNode.buffer is AudioBuffer">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of ConvolverNode.buffer is AudioBuffer - Description: Check if the type of ConvolverNode.buffer is AudioBuffer]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_buffer_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-42-convolvernode_normalize_exists" name="42-convolvernode_normalize_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if ConvolverNode.normalize attribute exists - Description: Check if ConvolverNode.normalize attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ConvolverNode.normalize attribute exists - Description: Check if ConvolverNode.normalize attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-43-convolvernode_normalize_type" name="43-convolvernode_normalize_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of ConvolverNode.normalize is boolean - Description: Check if the type of ConvolverNode.normalize is boolean">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of ConvolverNode.normalize is boolean - Description: Check if the type of ConvolverNode.normalize is boolean]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-44-delaynode_delayTime_exists" name="44-delaynode_delayTime_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DelayNode.delayTime attribute exists - Description: Check if DelayNode.delayTime attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DelayNode.delayTime attribute exists - Description: Check if DelayNode.delayTime attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-45-delaynode_delayTime_type" name="45-delaynode_delayTime_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of DelayNode.delayTime is AudioParam - Description: Check if the type of DelayNode.delayTime is AudioParam">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of DelayNode.delayTime is AudioParam - Description: Check if the type of DelayNode.delayTime is AudioParam]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-46-dynamicscompressornode_attack_exists" name="46-dynamicscompressornode_attack_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DynamicsCompressorNode.attack attribute exists - Description: Check if DynamicsCompressorNode.attack attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DynamicsCompressorNode.attack attribute exists - Description: Check if DynamicsCompressorNode.attack attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_attack_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-47-dynamicscompressornode_attack_readonly" name="47-dynamicscompressornode_attack_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DynamicsCompressorNode.attack attribute is readonly - Description: Check if DynamicsCompressorNode.attack attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DynamicsCompressorNode.attack attribute is readonly - Description: Check if DynamicsCompressorNode.attack attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_attack_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-48-dynamicscompressornode_attack_type" name="48-dynamicscompressornode_attack_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of DynamicsCompressorNode.attack is AudioParam - Description: Check if the type of DynamicsCompressorNode.attack is AudioParam">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of DynamicsCompressorNode.attack is AudioParam - Description: Check if the type of DynamicsCompressorNode.attack is AudioParam]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_attack_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-49-dynamicscompressornode_knee_exists" name="49-dynamicscompressornode_knee_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DynamicsCompressorNode.knee attribute exists - Description: Check if DynamicsCompressorNode.knee attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DynamicsCompressorNode.knee attribute exists - Description: Check if DynamicsCompressorNode.knee attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_knee_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4A-dynamicscompressornode_knee_readonly" name="4A-dynamicscompressornode_knee_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DynamicsCompressorNode.knee attribute is readonly - Description: Check if DynamicsCompressorNode.knee attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DynamicsCompressorNode.knee attribute is readonly - Description: Check if DynamicsCompressorNode.knee attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_knee_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4B-dynamicscompressornode_knee_type" name="4B-dynamicscompressornode_knee_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of DynamicsCompressorNode.knee is AudioParam - Description: Check if the type of DynamicsCompressorNode.knee is AudioParam">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of DynamicsCompressorNode.knee is AudioParam - Description: Check if the type of DynamicsCompressorNode.knee is AudioParam]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_knee_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4C-dynamicscompressornode_ratio_exists" name="4C-dynamicscompressornode_ratio_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DynamicsCompressorNode.ratio attribute exists - Description: Check if DynamicsCompressorNode.ratio attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DynamicsCompressorNode.ratio attribute exists - Description: Check if DynamicsCompressorNode.ratio attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_ratio_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4D-dynamicscompressornode_ratio_readonly" name="4D-dynamicscompressornode_ratio_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DynamicsCompressorNode.ratio attribute is readonly - Description: Check if DynamicsCompressorNode.ratio attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DynamicsCompressorNode.ratio attribute is readonly - Description: Check if DynamicsCompressorNode.ratio attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_ratio_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4E-dynamicscompressornode_ratio_type" name="4E-dynamicscompressornode_ratio_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of DynamicsCompressorNode.ratio is AudioParam - Description: Check if the type of DynamicsCompressorNode.ratio is AudioParam">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of DynamicsCompressorNode.ratio is AudioParam - Description: Check if the type of DynamicsCompressorNode.ratio is AudioParam]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_ratio_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4F-dynamicscompressornode_reduction_exists" name="4F-dynamicscompressornode_reduction_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DynamicsCompressorNode.reduction attribute exists - Description: Check if DynamicsCompressorNode.reduction attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DynamicsCompressorNode.reduction attribute exists - Description: Check if DynamicsCompressorNode.reduction attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_reduction_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4G-dynamicscompressornode_reduction_readonly" name="4G-dynamicscompressornode_reduction_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DynamicsCompressorNode.reduction attribute is readonly - Description: Check if DynamicsCompressorNode.reduction attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DynamicsCompressorNode.reduction attribute is readonly - Description: Check if DynamicsCompressorNode.reduction attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_reduction_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4H-dynamicscompressornode_reduction_type" name="4H-dynamicscompressornode_reduction_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of DynamicsCompressorNode.reduction is AudioParam - Description: Check if the type of DynamicsCompressorNode.reduction is AudioParam">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of DynamicsCompressorNode.reduction is AudioParam - Description: Check if the type of DynamicsCompressorNode.reduction is AudioParam]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_reduction_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4I-dynamicscompressornode_release_exists" name="4I-dynamicscompressornode_release_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DynamicsCompressorNode.release attribute exists - Description: Check if DynamicsCompressorNode.release attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DynamicsCompressorNode.release attribute exists - Description: Check if DynamicsCompressorNode.release attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_release_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4J-dynamicscompressornode_release_readonly" name="4J-dynamicscompressornode_release_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DynamicsCompressorNode.release attribute is readonly - Description: Check if DynamicsCompressorNode.release attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DynamicsCompressorNode.release attribute is readonly - Description: Check if DynamicsCompressorNode.release attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_release_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4K-dynamicscompressornode_release_type" name="4K-dynamicscompressornode_release_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of DynamicsCompressorNode.release is AudioParam - Description: Check if the type of DynamicsCompressorNode.release is AudioParam">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of DynamicsCompressorNode.release is AudioParam - Description: Check if the type of DynamicsCompressorNode.release is AudioParam]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_release_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4L-dynamicscompressornode_threshold_exists" name="4L-dynamicscompressornode_threshold_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DynamicsCompressorNode.threshold attribute exists - Description: Check if DynamicsCompressorNode.threshold attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DynamicsCompressorNode.threshold attribute exists - Description: Check if DynamicsCompressorNode.threshold attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_threshold_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4M-dynamicscompressornode_threshold_readonly" name="4M-dynamicscompressornode_threshold_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DynamicsCompressorNode.threshold attribute is readonly - Description: Check if DynamicsCompressorNode.threshold attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DynamicsCompressorNode.threshold attribute is readonly - Description: Check if DynamicsCompressorNode.threshold attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_threshold_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4N-dynamicscompressornode_threshold_type" name="4N-dynamicscompressornode_threshold_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of DynamicsCompressorNode.threshold is AudioParam - Description: Check if the type of DynamicsCompressorNode.threshold is AudioParam">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of DynamicsCompressorNode.threshold is AudioParam - Description: Check if the type of DynamicsCompressorNode.threshold is AudioParam]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/dynamicscompressornode_threshold_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4O-gainnode_gain_exists" name="4O-gainnode_gain_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if GainNode.gain attribute exists - Description: Check if GainNode.gain attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if GainNode.gain attribute exists - Description: Check if GainNode.gain attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4P-gainnode_gain_readonly" name="4P-gainnode_gain_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if GainNode.gain attribute is readonly - Description: Check if GainNode.gain attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if GainNode.gain attribute is readonly - Description: Check if GainNode.gain attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4Q-gainnode_gain_type" name="4Q-gainnode_gain_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of GainNode.gain is object - Description: Check if the type of GainNode.gain is object">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of GainNode.gain is object - Description: Check if the type of GainNode.gain is object]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4R-offlineaudiocontext_oncomplete_exists" name="4R-offlineaudiocontext_oncomplete_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OfflineAudioContext.oncomplete methodexists - Description: Check if OfflineAudioContext.oncomplete methodexists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OfflineAudioContext.oncomplete methodexists - Description: Check if OfflineAudioContext.oncomplete methodexists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_oncomplete_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4S-offlineaudiocontext_startRendering_exists" name="4S-offlineaudiocontext_startRendering_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OfflineAudioContext.startRendering method exists - Description: Check if OfflineAudioContext.startRendering method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OfflineAudioContext.startRendering method exists - Description: Check if OfflineAudioContext.startRendering method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_startRendering_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4T-oscillatornode_detune_exists" name="4T-oscillatornode_detune_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.detune attribute exists - Description: Check if OscillatorNode.detune attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.detune attribute exists - Description: Check if OscillatorNode.detune attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_detune_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4U-oscillatornode_detune_readonly" name="4U-oscillatornode_detune_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.detune attribute is readonly - Description: Check if OscillatorNode.detune attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.detune attribute is readonly - Description: Check if OscillatorNode.detune attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_detune_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4V-oscillatornode_detune_type" name="4V-oscillatornode_detune_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of OscillatorNode.detune is AudioParam - Description: Check if the type of OscillatorNode.detune is AudioParam">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of OscillatorNode.detune is AudioParam - Description: Check if the type of OscillatorNode.detune is AudioParam]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_detune_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4W-oscillatornode_frequency_exists" name="4W-oscillatornode_frequency_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.frequency attribute exists - Description: Check if OscillatorNode.frequency attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.frequency attribute exists - Description: Check if OscillatorNode.frequency attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_frequency_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4X-oscillatornode_frequency_readonly" name="4X-oscillatornode_frequency_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.frequency attribute is readonly - Description: Check if OscillatorNode.frequency attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.frequency attribute is readonly - Description: Check if OscillatorNode.frequency attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_frequency_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4Y-oscillatornode_frequency_type" name="4Y-oscillatornode_frequency_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of OscillatorNode.frequency is AudioParam - Description: Check if the type of OscillatorNode.frequency is AudioParam">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of OscillatorNode.frequency is AudioParam - Description: Check if the type of OscillatorNode.frequency is AudioParam]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_frequency_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-4Z-oscillatornode_setPeriodicWave_base" name="4Z-oscillatornode_setPeriodicWave_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.setPeriodicWave method executes well with a PeriodicWave argument - Description: Check if OscillatorNode.setPeriodicWave method executes well with a PeriodicWave argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.setPeriodicWave method executes well with a PeriodicWave argument - Description: Check if OscillatorNode.setPeriodicWave method executes well with a PeriodicWave argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_setPeriodicWave_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-50-oscillatornode_setPeriodicWave_type" name="50-oscillatornode_setPeriodicWave_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of OscillatorNode.setPeriodicWave is function - Description: Check if the type of OscillatorNode.setPeriodicWave is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of OscillatorNode.setPeriodicWave is function - Description: Check if the type of OscillatorNode.setPeriodicWave is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_setPeriodicWave_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-51-oscillatornode_start_0" name="51-oscillatornode_start_0" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.start method executes immediately - Description: Check if OscillatorNode.start method executes immediately">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.start method executes immediately - Description: Check if OscillatorNode.start method executes immediately]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_0.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-52-oscillatornode_start_after_stop" name="52-oscillatornode_start_after_stop" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if an exception throws when the method of OscillatorNode.start executes after OscillatorNode.stop - Description: Check if an exception throws when the method of OscillatorNode.start executes after OscillatorNode.stop">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception throws when the method of OscillatorNode.start executes after OscillatorNode.stop - Description: Check if an exception throws when the method of OscillatorNode.start executes after OscillatorNode.stop]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_after_stop.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-53-oscillatornode_start_base" name="53-oscillatornode_start_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.start method executes well with a double type argument - Description: Check if OscillatorNode.start method executes well with a double type argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.start method executes well with a double type argument - Description: Check if OscillatorNode.start method executes well with a double type argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-54-oscillatornode_start_type" name="54-oscillatornode_start_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of OscillatorNode.start is function - Description: Check if the type of OscillatorNode.start is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of OscillatorNode.start is function - Description: Check if the type of OscillatorNode.start is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-55-oscillatornode_stop_0" name="55-oscillatornode_stop_0" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.stop method executes immediately - Description: Check if OscillatorNode.stop method executes immediately">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.stop method executes immediately - Description: Check if OscillatorNode.stop method executes immediately]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_0.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-56-oscillatornode_stop_exists" name="56-oscillatornode_stop_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.stop method exists - Description: Check if OscillatorNode.stop method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.stop method exists - Description: Check if OscillatorNode.stop method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-57-oscillatornode_stop_type" name="57-oscillatornode_stop_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if an exception throws when the methods of OscillatorNode.stop and OscillatorNode.start execute at the same time - Description: Check if an exception throws when the methods of OscillatorNode.stop and OscillatorNode.start execute at the same time">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception throws when the methods of OscillatorNode.stop and OscillatorNode.start execute at the same time - Description: Check if an exception throws when the methods of OscillatorNode.stop and OscillatorNode.start execute at the same time]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-58-oscillatornode_type_exists" name="58-oscillatornode_type_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.type attribute exists - Description: Check if OscillatorNode.type attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.type attribute exists - Description: Check if OscillatorNode.type attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-59-oscillatornode_type_type" name="59-oscillatornode_type_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of OscillatorNode.type is string - Description: Check if the type of OscillatorNode.type is string">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of OscillatorNode.type is string - Description: Check if the type of OscillatorNode.type is string]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5A-pannernode_coneInnerAngle_exists" name="5A-pannernode_coneInnerAngle_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if PannerNode.coneInnerAngle attribute exists - Description: Check if PannerNode.coneInnerAngle attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if PannerNode.coneInnerAngle attribute exists - Description: Check if PannerNode.coneInnerAngle attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneInnerAngle_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5B-pannernode_coneInnerAngle_type" name="5B-pannernode_coneInnerAngle_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of PannerNode.coneInnerAngle is number - Description: Check if the type of PannerNode.coneInnerAngle is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of PannerNode.coneInnerAngle is number - Description: Check if the type of PannerNode.coneInnerAngle is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneInnerAngle_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5C-pannernode_coneOuterAngle_exists" name="5C-pannernode_coneOuterAngle_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if PannerNode.coneOuterAngle attribute exists - Description: Check if PannerNode.coneOuterAngle attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if PannerNode.coneOuterAngle attribute exists - Description: Check if PannerNode.coneOuterAngle attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterAngle_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5D-pannernode_coneOuterAngle_type" name="5D-pannernode_coneOuterAngle_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of PannerNode.coneOuterAngle is number - Description: Check if the type of PannerNode.coneOuterAngle is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of PannerNode.coneOuterAngle is number - Description: Check if the type of PannerNode.coneOuterAngle is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterAngle_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5E-pannernode_coneOuterGain_exists" name="5E-pannernode_coneOuterGain_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if PannerNode.coneOuterGain attribute exists - Description: Check if PannerNode.coneOuterGain attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if PannerNode.coneOuterGain attribute exists - Description: Check if PannerNode.coneOuterGain attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterGain_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5F-pannernode_coneOuterGain_type" name="5F-pannernode_coneOuterGain_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of PannerNode.coneOuterGain is number - Description: Check if the type of PannerNode.coneOuterGain is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of PannerNode.coneOuterGain is number - Description: Check if the type of PannerNode.coneOuterGain is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterGain_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5G-pannernode_maxDistance_type" name="5G-pannernode_maxDistance_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of PannerNode.maxDistance is number - Description: Check if the type of PannerNode.maxDistance is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of PannerNode.maxDistance is number - Description: Check if the type of PannerNode.maxDistance is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_maxDistance_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5H-pannernode_maxDistance_value" name="5H-pannernode_maxDistance_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of PannerNode.maxDistance is float - Description: Check if the type of PannerNode.maxDistance is float">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of PannerNode.maxDistance is float - Description: Check if the type of PannerNode.maxDistance is float]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_maxDistance_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5I-pannernode_panningModel_exists" name="5I-pannernode_panningModel_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if PannerNode.panningModel attribute exists - Description: Check if PannerNode.panningModel attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if PannerNode.panningModel attribute exists - Description: Check if PannerNode.panningModel attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5J-pannernode_refDistance_type" name="5J-pannernode_refDistance_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of PannerNode.refDistance is number - Description: Check if the type of PannerNode.refDistance is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of PannerNode.refDistance is number - Description: Check if the type of PannerNode.refDistance is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_refDistance_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5K-pannernode_refDistance_value" name="5K-pannernode_refDistance_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of PannerNode.refDistance is float - Description: Check if the type of PannerNode.refDistance is float">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of PannerNode.refDistance is float - Description: Check if the type of PannerNode.refDistance is float]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_refDistance_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5L-pannernode_rolloffFactor_type" name="5L-pannernode_rolloffFactor_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of PannerNode.rolloffFactor is number - Description: Check if the type of PannerNode.rolloffFactor is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of PannerNode.rolloffFactor is number - Description: Check if the type of PannerNode.rolloffFactor is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_rolloffFactor_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5M-pannernode_rolloffFactor_value" name="5M-pannernode_rolloffFactor_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of PannerNode.rolloffFactor is float - Description: Check if the type of PannerNode.rolloffFactor is float">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of PannerNode.rolloffFactor is float - Description: Check if the type of PannerNode.rolloffFactor is float]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_rolloffFactor_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5N-pannernode_setOrientation_exists" name="5N-pannernode_setOrientation_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if PannerNode.setOrientation method exists - Description: Check if PannerNode.setOrientation method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if PannerNode.setOrientation method exists - Description: Check if PannerNode.setOrientation method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setOrientation_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5O-pannernode_setOrientation_type" name="5O-pannernode_setOrientation_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of PannerNode.setOrientation is function - Description: Check if the type of PannerNode.setOrientation is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of PannerNode.setOrientation is function - Description: Check if the type of PannerNode.setOrientation is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setOrientation_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5P-pannernode_setPosition_base" name="5P-pannernode_setPosition_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if PannerNode.setPosition method can change the position of a audio source - Description: Check if PannerNode.setPosition method can change the position of a audio source">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if PannerNode.setPosition method can change the position of a audio source - Description: Check if PannerNode.setPosition method can change the position of a audio source]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setPosition_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5Q-pannernode_setPosition_exists" name="5Q-pannernode_setPosition_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if PannerNode.setPosition method exists - Description: Check if PannerNode.setPosition method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if PannerNode.setPosition method exists - Description: Check if PannerNode.setPosition method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setPosition_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5R-pannernode_setPosition_type" name="5R-pannernode_setPosition_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of PannerNode.setPosition is function - Description: Check if the type of PannerNode.setPosition is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of PannerNode.setPosition is function - Description: Check if the type of PannerNode.setPosition is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setPosition_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5S-pannernode_setVelocity_type" name="5S-pannernode_setVelocity_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of PannerNode.setVelocity is function - Description: Check if the type of PannerNode.setVelocity is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of PannerNode.setVelocity is function - Description: Check if the type of PannerNode.setVelocity is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setVelocity_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5T-scriptprocessornode_bufferSize_exists" name="5T-scriptprocessornode_bufferSize_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if ScriptProcessorNode.bufferSize attribute exists - Description: Check if ScriptProcessorNode.bufferSize attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ScriptProcessorNode.bufferSize attribute exists - Description: Check if ScriptProcessorNode.bufferSize attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5U-scriptprocessornode_bufferSize_readonly" name="5U-scriptprocessornode_bufferSize_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if ScriptProcessorNode.bufferSize attribute is readonly - Description: Check if ScriptProcessorNode.bufferSize attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ScriptProcessorNode.bufferSize attribute is readonly - Description: Check if ScriptProcessorNode.bufferSize attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5V-scriptprocessornode_bufferSize_value" name="5V-scriptprocessornode_bufferSize_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of ScriptProcessorNode.bufferSize is long - Description: Check if the type of ScriptProcessorNode.bufferSize is long">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of ScriptProcessorNode.bufferSize is long - Description: Check if the type of ScriptProcessorNode.bufferSize is long]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5W-scriptprocessornode_onaudioprocess_base" name="5W-scriptprocessornode_onaudioprocess_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if ScriptProcessorNode.onaudioprocess method can receive the processing event - Description: Check if ScriptProcessorNode.onaudioprocess method can receive the processing event">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ScriptProcessorNode.onaudioprocess method can receive the processing event - Description: Check if ScriptProcessorNode.onaudioprocess method can receive the processing event]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_onaudioprocess_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5X-waveshapernode_curve_exists" name="5X-waveshapernode_curve_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if WaveShaperNode.curve attribute exists - Description: Check if WaveShaperNode.curve attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if WaveShaperNode.curve attribute exists - Description: Check if WaveShaperNode.curve attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5Y-waveshapernode_curve_type" name="5Y-waveshapernode_curve_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of WaveShaperNode.curve is Float32Array - Description: Check if the type of WaveShaperNode.curve is Float32Array">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of WaveShaperNode.curve is Float32Array - Description: Check if the type of WaveShaperNode.curve is Float32Array]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-5Z-audioparam_setValueAtTime_exists" name="5Z-audioparam_setValueAtTime_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.setValueAtTime method exists - Description: Check if AudioParam.setValueAtTime method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.setValueAtTime method exists - Description: Check if AudioParam.setValueAtTime method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueAtTime_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-60-audioparam_setValueAtTime_type" name="60-audioparam_setValueAtTime_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioParam.setValueAtTime is function - Description: Check if the type of AudioParam.setValueAtTime is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioParam.setValueAtTime is function - Description: Check if the type of AudioParam.setValueAtTime is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueAtTime_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-61-audioparam_setValueCurveAtTime_exists" name="61-audioparam_setValueCurveAtTime_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.setValueCurveAtTime method exists - Description: Check if AudioParam.setValueCurveAtTime method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.setValueCurveAtTime method exists - Description: Check if AudioParam.setValueCurveAtTime method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueCurveAtTime_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-62-audioparam_setValueCurveAtTime_type" name="62-audioparam_setValueCurveAtTime_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioParam.setValueCurveAtTime is function - Description: Check if the type of AudioParam.setValueCurveAtTime is function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioParam.setValueCurveAtTime is function - Description: Check if the type of AudioParam.setValueCurveAtTime is function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueCurveAtTime_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-63-audioparam_value_exists" name="63-audioparam_value_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.value attribute exists - Description: Check if AudioParam.value attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.value attribute exists - Description: Check if AudioParam.value attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-64-audioparam_value_type" name="64-audioparam_value_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of AudioParam.value is number - Description: Check if the type of AudioParam.value is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of AudioParam.value is number - Description: Check if the type of AudioParam.value is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-65-gain-node-idl-test-06" name="65-gain-node-idl-test-06" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check that the gain_node can be stringified - Description: Check that the gain_node can be stringified">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check that the gain_node can be stringified - Description: Check that the gain_node can be stringified]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=6</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-66-gain-node-idl-test-08" name="66-gain-node-idl-test-08" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: AudioNode interface: gain_node must inherit property &quot;connect&quot; with the proper type (0) - Description: AudioNode interface: gain_node must inherit property &quot;connect&quot; with the proper type (0)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: AudioNode interface: gain_node must inherit property "connect" with the proper type (0) - Description: AudioNode interface: gain_node must inherit property "connect" with the proper type (0)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=8</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-67-gain-node-idl-test-09" name="67-gain-node-idl-test-09" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: AudioNode interface: calling connect(AudioNode,unsigned long,unsigned long) on gain_node with too few arguments must throw TypeError - Description: AudioNode interface: calling connect(AudioNode,unsigned long,unsigned long) on gain_node with too few arguments must throw TypeError">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: AudioNode interface: calling connect(AudioNode,unsigned long,unsigned long) on gain_node with too few arguments must throw TypeError - Description: AudioNode interface: calling connect(AudioNode,unsigned long,unsigned long) on gain_node with too few arguments must throw TypeError]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=9</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-68-gain-node-idl-test-10" name="68-gain-node-idl-test-10" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: AudioNode interface: gain_node must inherit property &quot;connect&quot; with the proper type (1) - Description: AudioNode interface: gain_node must inherit property &quot;connect&quot; with the proper type (1)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: AudioNode interface: gain_node must inherit property "connect" with the proper type (1) - Description: AudioNode interface: gain_node must inherit property "connect" with the proper type (1)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=10</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-69-gain-node-idl-test-11" name="69-gain-node-idl-test-11" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: AudioNode interface: calling connect(AudioParam,unsigned long) on gain_node with too few arguments must throw TypeError - Description: AudioNode interface: calling connect(AudioParam,unsigned long) on gain_node with too few arguments must throw TypeError">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: AudioNode interface: calling connect(AudioParam,unsigned long) on gain_node with too few arguments must throw TypeError - Description: AudioNode interface: calling connect(AudioParam,unsigned long) on gain_node with too few arguments must throw TypeError]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=11</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6A-gain-node-idl-test-12" name="6A-gain-node-idl-test-12" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: AudioNode interface: gain_node must inherit property &quot;disconnect&quot; with the proper type (2) - Description: AudioNode interface: gain_node must inherit property &quot;disconnect&quot; with the proper type (2)">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: AudioNode interface: gain_node must inherit property "disconnect" with the proper type (2) - Description: AudioNode interface: gain_node must inherit property "disconnect" with the proper type (2)]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=12</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6B-gain-node-idl-test-13" name="6B-gain-node-idl-test-13" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: AudioNode interface: calling disconnect(unsigned long) on gain_node with too few arguments must throw TypeError - Description: AudioNode interface: calling disconnect(unsigned long) on gain_node with too few arguments must throw TypeError">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: AudioNode interface: calling disconnect(unsigned long) on gain_node with too few arguments must throw TypeError - Description: AudioNode interface: calling disconnect(unsigned long) on gain_node with too few arguments must throw TypeError]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-idl-test.html?total_num=22&amp;amp;amp;locator_key=id&amp;amp;amp;value=13</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6C-gain-node-test" name="6C-gain-node-test" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check that GainNode is properly scaling the gain - Description: Check that GainNode is properly scaling the gain" onload_delay="15">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check that GainNode is properly scaling the gain - Description: Check that GainNode is properly scaling the gain]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/w3c/the-audio-api/the-gainnode-interface/gain-node-test.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6D-analysernode_frequencyBinCount_value" name="6D-analysernode_frequencyBinCount_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.frequencyBinCount attribute value is half the fftSize - Description: Check if AnalyserNode.frequencyBinCount attribute value is half the fftSize">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.frequencyBinCount attribute value is half the fftSize - Description: Check if AnalyserNode.frequencyBinCount attribute value is half the fftSize]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_frequencyBinCount_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6E-audiobuffersourcenode_FINISHED_STATE_value" name="6E-audiobuffersourcenode_FINISHED_STATE_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.FINISHED_STATE value is 3 - Description: Check if AudioBufferSourceNode.FINISHED_STATE value is 3">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.FINISHED_STATE value is 3 - Description: Check if AudioBufferSourceNode.FINISHED_STATE value is 3]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_FINISHED_STATE_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6F-audiobuffersourcenode_start_after_stop" name="6F-audiobuffersourcenode_start_after_stop" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if an exception thrown when AudioBufferSourceNode.start called after AudioBufferSourceNode.stop - Description: Check if an exception thrown when AudioBufferSourceNode.start called after AudioBufferSourceNode.stop">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception thrown when AudioBufferSourceNode.start called after AudioBufferSourceNode.stop - Description: Check if an exception thrown when AudioBufferSourceNode.start called after AudioBufferSourceNode.stop]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_after_stop.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6G-audiobuffersourcenode_stop_twice" name="6G-audiobuffersourcenode_stop_twice" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if an exception thrown when AudioBufferSourceNode.stop called twice - Description: Check if an exception thrown when AudioBufferSourceNode.stop called twice">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception thrown when AudioBufferSourceNode.stop called twice - Description: Check if an exception thrown when AudioBufferSourceNode.stop called twice]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_twice.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6H-audiocontext_createBuffer_three_numberOfChannels_upper" name="6H-audiocontext_createBuffer_three_numberOfChannels_upper" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createBuffer method with three param,thrown exception if the numberOfChannels are out-of-bounds - Description: Check if AudioContext.createBuffer method with three param,thrown exception if the numberOfChannels are out-of-bounds">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createBuffer method with three param,thrown exception if the numberOfChannels are out-of-bounds - Description: Check if AudioContext.createBuffer method with three param,thrown exception if the numberOfChannels are out-of-bounds]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_numberOfChannels_upper.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6I-audiocontext_createBuffer_three_sampleRate_lower" name="6I-audiocontext_createBuffer_three_sampleRate_lower" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 22050 - Description: Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 22050">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 22050 - Description: Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 22050]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_sampleRate_lower.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6J-audiocontext_createBuffer_three_sampleRate_upper" name="6J-audiocontext_createBuffer_three_sampleRate_upper" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 96000 - Description: Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 96000">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 96000 - Description: Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 96000]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_sampleRate_upper.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6K-audiocontext_createDelayNode_no_argument" name="6K-audiocontext_createDelayNode_no_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 1 if no set maxDelayTime param - Description: Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 1 if no set maxDelayTime param">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 1 if no set maxDelayTime param - Description: Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 1 if no set maxDelayTime param]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelayNode_no_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6L-audiocontext_createScriptProcessor_bufferSize_exception" name="6L-audiocontext_createScriptProcessor_bufferSize_exception" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createScriptProcessor method,throw exception if buffersize param not is buffersize list value - Description: Check if AudioContext.createScriptProcessor method,throw exception if buffersize param not is buffersize list value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createScriptProcessor method,throw exception if buffersize param not is buffersize list value - Description: Check if AudioContext.createScriptProcessor method,throw exception if buffersize param not is buffersize list value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_exception.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6M-audiocontext_createwavetable_exception" name="6M-audiocontext_createwavetable_exception" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createwavetable method,throw exception if real and imag param set exception type - Description: Check if AudioContext.createwavetable method,throw exception if real and imag param set exception type">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createwavetable method,throw exception if real and imag param set exception type - Description: Check if AudioContext.createwavetable method,throw exception if real and imag param set exception type]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createwavetable_exception.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6N-audiodestinationnode_numberOfChannels_upper" name="6N-audiodestinationnode_numberOfChannels_upper" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set greater than maxNumberOfChannels - Description: Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set greater than maxNumberOfChannels">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set greater than maxNumberOfChannels - Description: Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set greater than maxNumberOfChannels]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_numberOfChannels_upper.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6O-audiodestinationnode_numberOfChannels_zero" name="6O-audiodestinationnode_numberOfChannels_zero" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set 0 - Description: Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set 0">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set 0 - Description: Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set 0]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_numberOfChannels_zero.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6P-audionode_connect_input_exception" name="6P-audionode_connect_input_exception" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.connect method,throw exception if input param set out-of-bound value - Description: Check if AudioNode.connect method,throw exception if input param set out-of-bound value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.connect method,throw exception if input param set out-of-bound value - Description: Check if AudioNode.connect method,throw exception if input param set out-of-bound value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_input_exception.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6Q-audionode_connect_output_exception" name="6Q-audionode_connect_output_exception" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.connect method,throw exception if output param setout-of-bound value - Description: Check if AudioNode.connect method,throw exception if output param setout-of-bound value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.connect method,throw exception if output param setout-of-bound value - Description: Check if AudioNode.connect method,throw exception if output param setout-of-bound value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_output_exception.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6R-audionode_disconnect_exception" name="6R-audionode_disconnect_exception" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.disconnect method,throw exception if output param set out-of-bound value - Description: Check if AudioNode.disconnect method,throw exception if output param set out-of-bound value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.disconnect method,throw exception if output param set out-of-bound value - Description: Check if AudioNode.disconnect method,throw exception if output param set out-of-bound value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_exception.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6S-biquadfilternode_type_allvalues" name="6S-biquadfilternode_type_allvalues" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode.type attribute may directly be set to one of BiquadFilterType values - Description: Check if BiquadFilterNode.type attribute may directly be set to one of BiquadFilterType values">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode.type attribute may directly be set to one of BiquadFilterType values - Description: Check if BiquadFilterNode.type attribute may directly be set to one of BiquadFilterType values]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_allvalues.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6T-oscillatornode_playbackState_basic" name="6T-oscillatornode_playbackState_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the OscillatorNode.playbackState exists and the initial value is 0 and it's readonly - Description: Check if the OscillatorNode.playbackState exists and the initial value is 0 and it's readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the OscillatorNode.playbackState exists and the initial value is 0 and it's readonly - Description: Check if the OscillatorNode.playbackState exists and the initial value is 0 and it's readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_playbackState_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6U-oscillatornode_PLAYING_STATE_type" name="6U-oscillatornode_PLAYING_STATE_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.PLAYING_STATE attribute is number type - Description: Check if OscillatorNode.PLAYING_STATE attribute is number type">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.PLAYING_STATE attribute is number type - Description: Check if OscillatorNode.PLAYING_STATE attribute is number type]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_PLAYING_STATE_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6V-oscillatornode_PLAYING_STATE_value" name="6V-oscillatornode_PLAYING_STATE_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.PLAYING_STATE attribute value is 2 - Description: Check if OscillatorNode.PLAYING_STATE attribute value is 2">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.PLAYING_STATE attribute value is 2 - Description: Check if OscillatorNode.PLAYING_STATE attribute value is 2]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_PLAYING_STATE_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6W-oscillatornode_type_allvalues" name="6W-oscillatornode_type_allvalues" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.type attribute value is set to 'custom' value after the setWaveTable() method be used - Description: Check if OscillatorNode.type attribute value is set to 'custom' value after the setWaveTable() method be used">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.type attribute value is set to 'custom' value after the setWaveTable() method be used - Description: Check if OscillatorNode.type attribute value is set to 'custom' value after the setWaveTable() method be used]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_allvalues.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6X-oscillatornode_type_invalid_value" name="6X-oscillatornode_type_invalid_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.type attribute can't be set to 'custom' value - Description: Check if OscillatorNode.type attribute can't be set to 'custom' value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.type attribute can't be set to 'custom' value - Description: Check if OscillatorNode.type attribute can't be set to 'custom' value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_invalid_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6Y-oscillatornode_type_setwavetable_value" name="6Y-oscillatornode_type_setwavetable_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.type attribute may directly be set to any of the OscillatorType values except for 'custom' - Description: Check if OscillatorNode.type attribute may directly be set to any of the OscillatorType values except for 'custom'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.type attribute may directly be set to any of the OscillatorType values except for 'custom' - Description: Check if OscillatorNode.type attribute may directly be set to any of the OscillatorType values except for 'custom']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_type_setwavetable_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-6Z-waveshapernode_curve_greater" name="6Z-waveshapernode_curve_greater" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if WaveShaperNode.curve value greater than +1 will correspond to the last value in the curve array - Description: Check if WaveShaperNode.curve value greater than +1 will correspond to the last value in the curve array">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if WaveShaperNode.curve value greater than +1 will correspond to the last value in the curve array - Description: Check if WaveShaperNode.curve value greater than +1 will correspond to the last value in the curve array]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_greater.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-70-waveshapernode_curve_less" name="70-waveshapernode_curve_less" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if WaveShaperNode.curve value less than -1 will correspond to the first value in the curve array - Description: Check if WaveShaperNode.curve value less than -1 will correspond to the first value in the curve array">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if WaveShaperNode.curve value less than -1 will correspond to the first value in the curve array - Description: Check if WaveShaperNode.curve value less than -1 will correspond to the first value in the curve array]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_less.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-71-waveshapernode_curve_zero" name="71-waveshapernode_curve_zero" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if WaveShaperNode.curve with a signal level of zero corresponding to the center value of the curve array - Description: Check if WaveShaperNode.curve with a signal level of zero corresponding to the center value of the curve array">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if WaveShaperNode.curve with a signal level of zero corresponding to the center value of the curve array - Description: Check if WaveShaperNode.curve with a signal level of zero corresponding to the center value of the curve array]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_zero.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-72-audioparam_value_maxValue_upper" name="72-audioparam_value_maxValue_upper" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.value attribute,no throw exception if AudioParam.value greater than AudioParam.maxValue - Description: Check if AudioParam.value attribute,no throw exception if AudioParam.value greater than AudioParam.maxValue">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.value attribute,no throw exception if AudioParam.value greater than AudioParam.maxValue - Description: Check if AudioParam.value attribute,no throw exception if AudioParam.value greater than AudioParam.maxValue]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_maxValue_upper.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-73-audioparam_value_minValue_upper" name="73-audioparam_value_minValue_upper" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.value attribute,no throw exception if AudioParam.value less than AudioParam.minValue - Description: Check if AudioParam.value attribute,no throw exception if AudioParam.value less than AudioParam.minValue">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.value attribute,no throw exception if AudioParam.value less than AudioParam.minValue - Description: Check if AudioParam.value attribute,no throw exception if AudioParam.value less than AudioParam.minValue]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_minValue_upper.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-74-biquadfilternode_type_allpass_phase" name="74-biquadfilternode_type_allpass_phase" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode allpass filter changes the phase relationship between the various frequencies - Description: Check if BiquadFilterNode allpass filter changes the phase relationship between the various frequencies">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode allpass filter changes the phase relationship between the various frequencies - Description: Check if BiquadFilterNode allpass filter changes the phase relationship between the various frequencies]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_allpass_phase.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-75-biquadfilternode_type_bandpass_above" name="75-biquadfilternode_type_bandpass_above" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode bandpass filter attenuates the frequencies above the frequency range - Description: Check if BiquadFilterNode bandpass filter attenuates the frequencies above the frequency range">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode bandpass filter attenuates the frequencies above the frequency range - Description: Check if BiquadFilterNode bandpass filter attenuates the frequencies above the frequency range]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_bandpass_above.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-76-biquadfilternode_type_bandpass_below" name="76-biquadfilternode_type_bandpass_below" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode bandpass filter attenuates the frequencies below the frequency range - Description: Check if BiquadFilterNode bandpass filter attenuates the frequencies below the frequency range">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode bandpass filter attenuates the frequencies below the frequency range - Description: Check if BiquadFilterNode bandpass filter attenuates the frequencies below the frequency range]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_bandpass_below.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-77-biquadfilternode_type_bandpass_center" name="77-biquadfilternode_type_bandpass_center" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode bandpass filter allows a range of frequencies to pass through - Description: Check if BiquadFilterNode bandpass filter allows a range of frequencies to pass through">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode bandpass filter allows a range of frequencies to pass through - Description: Check if BiquadFilterNode bandpass filter allows a range of frequencies to pass through]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_bandpass_center.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-78-biquadfilternode_type_highpass_above" name="78-biquadfilternode_type_highpass_above" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode highpass filter allows frequencies above the cutoff frequency to pass through - Description: Check if BiquadFilterNode highpass filter allows frequencies above the cutoff frequency to pass through">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode highpass filter allows frequencies above the cutoff frequency to pass through - Description: Check if BiquadFilterNode highpass filter allows frequencies above the cutoff frequency to pass through]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highpass_above.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-79-biquadfilternode_type_highpass_below" name="79-biquadfilternode_type_highpass_below" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode highpass filter attenuates frequencies below the cutoff - Description: Check if BiquadFilterNode highpass filter attenuates frequencies below the cutoff">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode highpass filter attenuates frequencies below the cutoff - Description: Check if BiquadFilterNode highpass filter attenuates frequencies below the cutoff]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highpass_below.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7A-biquadfilternode_type_highshelf_attenuation" name="7A-biquadfilternode_type_highshelf_attenuation" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode highshelf filter adds a attenuation to the higher frequencies - Description: Check if BiquadFilterNode highshelf filter adds a attenuation to the higher frequencies">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode highshelf filter adds a attenuation to the higher frequencies - Description: Check if BiquadFilterNode highshelf filter adds a attenuation to the higher frequencies]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highshelf_attenuation.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7B-biquadfilternode_type_highshelf_boost" name="7B-biquadfilternode_type_highshelf_boost" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode highshelf filter adds a boost to the higher frequencies - Description: Check if BiquadFilterNode highshelf filter adds a boost to the higher frequencies">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode highshelf filter adds a boost to the higher frequencies - Description: Check if BiquadFilterNode highshelf filter adds a boost to the higher frequencies]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_highshelf_boost.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7C-biquadfilternode_type_lowpass_above" name="7C-biquadfilternode_type_lowpass_above" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode lowpass filter attenuates frequencies above the cutoff - Description: Check if BiquadFilterNode lowpass filter attenuates frequencies above the cutoff">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode lowpass filter attenuates frequencies above the cutoff - Description: Check if BiquadFilterNode lowpass filter attenuates frequencies above the cutoff]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowpass_above.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7D-biquadfilternode_type_lowpass_below" name="7D-biquadfilternode_type_lowpass_below" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode lowpass filter allows frequencies below the cutoff frequency to pass through - Description: Check if BiquadFilterNode lowpass filter allows frequencies below the cutoff frequency to pass through">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode lowpass filter allows frequencies below the cutoff frequency to pass through - Description: Check if BiquadFilterNode lowpass filter allows frequencies below the cutoff frequency to pass through]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowpass_below.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7E-biquadfilternode_type_lowshelf_attenuation" name="7E-biquadfilternode_type_lowshelf_attenuation" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode lowshelf filter adds a attenuation to the lower frequencies - Description: Check if BiquadFilterNode lowshelf filter adds a attenuation to the lower frequencies">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode lowshelf filter adds a attenuation to the lower frequencies - Description: Check if BiquadFilterNode lowshelf filter adds a attenuation to the lower frequencies]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowshelf_attenuation.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7F-biquadfilternode_type_lowshelf_boost" name="7F-biquadfilternode_type_lowshelf_boost" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode lowshelf filter adds a boost to the lower frequencies - Description: Check if BiquadFilterNode lowshelf filter adds a boost to the lower frequencies">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode lowshelf filter adds a boost to the lower frequencies - Description: Check if BiquadFilterNode lowshelf filter adds a boost to the lower frequencies]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_lowshelf_boost.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7G-biquadfilternode_type_notch_all" name="7G-biquadfilternode_type_notch_all" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode notch filter allows all frequencies through - Description: Check if BiquadFilterNode notch filter allows all frequencies through">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode notch filter allows all frequencies through - Description: Check if BiquadFilterNode notch filter allows all frequencies through]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_notch_all.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7H-biquadfilternode_type_notch_except" name="7H-biquadfilternode_type_notch_except" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode notch filter allows all frequencies through except for the notch applied - Description: Check if BiquadFilterNode notch filter allows all frequencies through except for the notch applied">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode notch filter allows all frequencies through except for the notch applied - Description: Check if BiquadFilterNode notch filter allows all frequencies through except for the notch applied]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_notch_except.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7I-biquadfilternode_type_peaking_attenuation" name="7I-biquadfilternode_type_peaking_attenuation" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode peaking filter adds a attenuation to a range of frequencies - Description: Check if BiquadFilterNode peaking filter adds a attenuation to a range of frequencies">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode peaking filter adds a attenuation to a range of frequencies - Description: Check if BiquadFilterNode peaking filter adds a attenuation to a range of frequencies]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_peaking_attenuation.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7J-biquadfilternode_type_peaking_boost" name="7J-biquadfilternode_type_peaking_boost" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode peaking filter adds a boost to a range of frequencies - Description: Check if BiquadFilterNode peaking filter adds a boost to a range of frequencies">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode peaking filter adds a boost to a range of frequencies - Description: Check if BiquadFilterNode peaking filter adds a boost to a range of frequencies]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_peaking_boost.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7K-analysernode_fftSize_value" name="7K-analysernode_fftSize_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.fftSize attribute value is number - Description: Check if AnalyserNode.fftSize attribute value is number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.fftSize attribute value is number - Description: Check if AnalyserNode.fftSize attribute value is number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_fftSize_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7L-analysernode_getByteFrequencyData_base" name="7L-analysernode_getByteFrequencyData_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.getByteFrequencyData method executes well with Uint8Array parameter - Description: Check if AnalyserNode.getByteFrequencyData method executes well with Uint8Array parameter">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.getByteFrequencyData method executes well with Uint8Array parameter - Description: Check if AnalyserNode.getByteFrequencyData method executes well with Uint8Array parameter]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteFrequencyData_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7M-analysernode_getByteTimeDomainData_base" name="7M-analysernode_getByteTimeDomainData_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.getByteTimeDomainData method executes well with Uint8Array parameter - Description: Check if AnalyserNode.getByteTimeDomainData method executes well with Uint8Array parameter">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.getByteTimeDomainData method executes well with Uint8Array parameter - Description: Check if AnalyserNode.getByteTimeDomainData method executes well with Uint8Array parameter]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getByteTimeDomainData_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7N-analysernode_getFloatFrequencyData_base" name="7N-analysernode_getFloatFrequencyData_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.getFloatFrequencyData method executes well with Float32Array parameter - Description: Check if AnalyserNode.getFloatFrequencyData method executes well with Float32Array parameter">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.getFloatFrequencyData method executes well with Float32Array parameter - Description: Check if AnalyserNode.getFloatFrequencyData method executes well with Float32Array parameter]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_getFloatFrequencyData_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7O-analysernode_maxDecibels_value" name="7O-analysernode_maxDecibels_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.maxDecibels attribute value is float - Description: Check if AnalyserNode.maxDecibels attribute value is float">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.maxDecibels attribute value is float - Description: Check if AnalyserNode.maxDecibels attribute value is float]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_maxDecibels_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7P-analysernode_minDecibels_value" name="7P-analysernode_minDecibels_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.minDecibels attribute value is float - Description: Check if AnalyserNode.minDecibels attribute value is float">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.minDecibels attribute value is float - Description: Check if AnalyserNode.minDecibels attribute value is float]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_minDecibels_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7Q-analysernode_smoothingTimeConstant_value" name="7Q-analysernode_smoothingTimeConstant_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AnalyserNode.smoothingTimeConstant attribute value is float - Description: Check if AnalyserNode.smoothingTimeConstant attribute value is float">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AnalyserNode.smoothingTimeConstant attribute value is float - Description: Check if AnalyserNode.smoothingTimeConstant attribute value is float]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/analysernode_smoothingTimeConstant_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7R-audiobuffer_getChannelData_base" name="7R-audiobuffer_getChannelData_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioBuffer.getChannelData returns a Float32Arrays value - Description: Check if the AudioBuffer.getChannelData returns a Float32Arrays value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioBuffer.getChannelData returns a Float32Arrays value - Description: Check if the AudioBuffer.getChannelData returns a Float32Arrays value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7S-audiobuffer_getChannelData_exception" name="7S-audiobuffer_getChannelData_exception" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if an exception will be thrown when the parameter is bigger than numberOfChannels - Description: Check if an exception will be thrown when the parameter is bigger than numberOfChannels">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception will be thrown when the parameter is bigger than numberOfChannels - Description: Check if an exception will be thrown when the parameter is bigger than numberOfChannels]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_getChannelData_exception.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7T-audiobuffer_length_value" name="7T-audiobuffer_length_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioBuffer.length is long value - Description: Check if the AudioBuffer.length is long value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioBuffer.length is long value - Description: Check if the AudioBuffer.length is long value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_length_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7U-audiobuffer_numberOfChannels_value" name="7U-audiobuffer_numberOfChannels_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioBuffer.numberOfChannels is integer value - Description: Check if the AudioBuffer.numberOfChannels is integer value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioBuffer.numberOfChannels is integer value - Description: Check if the AudioBuffer.numberOfChannels is integer value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_numberOfChannels_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7V-audiobuffer_sampleRate_value" name="7V-audiobuffer_sampleRate_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBuffer.sampleRate attribute is float value - Description: Check if AudioBuffer.sampleRate attribute is float value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBuffer.sampleRate attribute is float value - Description: Check if AudioBuffer.sampleRate attribute is float value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffer_sampleRate_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7W-audiobuffersourcenode_buffer_value" name="7W-audiobuffersourcenode_buffer_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioBufferSourceNode.buffer is not null when set it a new AudioBufferSourceNode - Description: Check if the AudioBufferSourceNode.buffer is not null when set it a new AudioBufferSourceNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioBufferSourceNode.buffer is not null when set it a new AudioBufferSourceNode - Description: Check if the AudioBufferSourceNode.buffer is not null when set it a new AudioBufferSourceNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_buffer_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7X-audiobuffersourcenode_loop_default_value" name="7X-audiobuffersourcenode_loop_default_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioBufferSourceNode.loop default value is false - Description: Check if the AudioBufferSourceNode.loop default value is false">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioBufferSourceNode.loop default value is false - Description: Check if the AudioBufferSourceNode.loop default value is false]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_default_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7Y-audiobuffersourcenode_loop_value" name="7Y-audiobuffersourcenode_loop_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioBufferSourceNode.loop is boolean value - Description: Check if the AudioBufferSourceNode.loop is boolean value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioBufferSourceNode.loop is boolean value - Description: Check if the AudioBufferSourceNode.loop is boolean value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loop_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-7Z-audiobuffersourcenode_loopEnd_default_value" name="7Z-audiobuffersourcenode_loopEnd_default_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.loopEnd attribute default value is 0 - Description: Check if AudioBufferSourceNode.loopEnd attribute default value is 0">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.loopEnd attribute default value is 0 - Description: Check if AudioBufferSourceNode.loopEnd attribute default value is 0]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_default_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-80-audiobuffersourcenode_loopEnd_type" name="80-audiobuffersourcenode_loopEnd_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.loopEnd attribute is type of number - Description: Check if AudioBufferSourceNode.loopEnd attribute is type of number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.loopEnd attribute is type of number - Description: Check if AudioBufferSourceNode.loopEnd attribute is type of number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-81-audiobuffersourcenode_loopEnd_value" name="81-audiobuffersourcenode_loopEnd_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.loopEnd attribute set value 0.5 - Description: Check if AudioBufferSourceNode.loopEnd attribute set value 0.5">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.loopEnd attribute set value 0.5 - Description: Check if AudioBufferSourceNode.loopEnd attribute set value 0.5]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopEnd_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-82-audiobuffersourcenode_loopStart_default_value" name="82-audiobuffersourcenode_loopStart_default_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.loopStart attribute default value is 0 - Description: Check if AudioBufferSourceNode.loopStart attribute default value is 0">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.loopStart attribute default value is 0 - Description: Check if AudioBufferSourceNode.loopStart attribute default value is 0]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_default_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-83-audiobuffersourcenode_loopStart_type" name="83-audiobuffersourcenode_loopStart_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.loopStart attribute is type of number - Description: Check if AudioBufferSourceNode.loopStart attribute is type of number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.loopStart attribute is type of number - Description: Check if AudioBufferSourceNode.loopStart attribute is type of number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-84-audiobuffersourcenode_loopStart_value" name="84-audiobuffersourcenode_loopStart_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.loopStart attribute set value 0.5 - Description: Check if AudioBufferSourceNode.loopStart attribute set value 0.5">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.loopStart attribute set value 0.5 - Description: Check if AudioBufferSourceNode.loopStart attribute set value 0.5]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_loopStart_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-85-audiobuffersourcenode_playbackRate_default_value" name="85-audiobuffersourcenode_playbackRate_default_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.playbackRate.value default value is 1 - Description: Check if AudioBufferSourceNode.playbackRate.value default value is 1">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.playbackRate.value default value is 1 - Description: Check if AudioBufferSourceNode.playbackRate.value default value is 1]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackRate_default_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-86-audiobuffersourcenode_playbackState_initial_value" name="86-audiobuffersourcenode_playbackState_initial_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioBufferSourceNode.playbackState initial value is 0 - Description: Check if the AudioBufferSourceNode.playbackState initial value is 0">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioBufferSourceNode.playbackState initial value is 0 - Description: Check if the AudioBufferSourceNode.playbackState initial value is 0]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackState_initial_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-87-audiobuffersourcenode_playbackState_start_value" name="87-audiobuffersourcenode_playbackState_start_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioBufferSourceNode.playbackState is not 0 when start method is called - Description: Check if the AudioBufferSourceNode.playbackState is not 0 when start method is called">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioBufferSourceNode.playbackState is not 0 when start method is called - Description: Check if the AudioBufferSourceNode.playbackState is not 0 when start method is called]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_playbackState_start_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-88-audiobuffersourcenode_PLAYING_STATE_value" name="88-audiobuffersourcenode_PLAYING_STATE_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.PLAYING_STATE value is 2 - Description: Check if AudioBufferSourceNode.PLAYING_STATE value is 2">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.PLAYING_STATE value is 2 - Description: Check if AudioBufferSourceNode.PLAYING_STATE value is 2]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_PLAYING_STATE_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-89-audiobuffersourcenode_SCHEDULED_STATE_value" name="89-audiobuffersourcenode_SCHEDULED_STATE_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.SCHEDULED_STATE value is 1 - Description: Check if AudioBufferSourceNode.SCHEDULED_STATE value is 1">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.SCHEDULED_STATE value is 1 - Description: Check if AudioBufferSourceNode.SCHEDULED_STATE value is 1]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_SCHEDULED_STATE_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8A-audiobuffersourcenode_start_base" name="8A-audiobuffersourcenode_start_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if an audio source plays when AudioBufferSourceNode.start method called - Description: Check if an audio source plays when AudioBufferSourceNode.start method called">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an audio source plays when AudioBufferSourceNode.start method called - Description: Check if an audio source plays when AudioBufferSourceNode.start method called]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_start_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8B-audiobuffersourcenode_stop_base" name="8B-audiobuffersourcenode_stop_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if an audio source ends when AudioBufferSourceNode.stop method called - Description: Check if an audio source ends when AudioBufferSourceNode.stop method called">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an audio source ends when AudioBufferSourceNode.stop method called - Description: Check if an audio source ends when AudioBufferSourceNode.stop method called]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_stop_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8C-audiobuffersourcenode_UNSCHEDULED_STATE_value" name="8C-audiobuffersourcenode_UNSCHEDULED_STATE_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioBufferSourceNode.UNSCHEDULED_STATE value is 0 - Description: Check if AudioBufferSourceNode.UNSCHEDULED_STATE value is 0">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioBufferSourceNode.UNSCHEDULED_STATE value is 0 - Description: Check if AudioBufferSourceNode.UNSCHEDULED_STATE value is 0]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiobuffersourcenode_UNSCHEDULED_STATE_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8D-audiocontext_createAnalyser_base" name="8D-audiocontext_createAnalyser_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createAnalyser method,return value type of is RealtimeAnalyserNode - Description: Check if AudioContext.createAnalyser method,return value type of is RealtimeAnalyserNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createAnalyser method,return value type of is RealtimeAnalyserNode - Description: Check if AudioContext.createAnalyser method,return value type of is RealtimeAnalyserNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createAnalyser_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8E-audiocontext_createBiquadFilter_base" name="8E-audiocontext_createBiquadFilter_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createBiquadFilter method return value type of is BiquadFilterNode - Description: Check if AudioContext.createBiquadFilter method return value type of is BiquadFilterNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createBiquadFilter method return value type of is BiquadFilterNode - Description: Check if AudioContext.createBiquadFilter method return value type of is BiquadFilterNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBiquadFilter_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8F-audiocontext_createBuffer_three_base" name="8F-audiocontext_createBuffer_three_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createBuffer method with three param basic usage,return value type of is AudioBuffer - Description: Check if AudioContext.createBuffer method with three param basic usage,return value type of is AudioBuffer">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createBuffer method with three param basic usage,return value type of is AudioBuffer - Description: Check if AudioContext.createBuffer method with three param basic usage,return value type of is AudioBuffer]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_three_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8G-audiocontext_createBuffer_two_base" name="8G-audiocontext_createBuffer_two_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createBuffer method with two param,return value type of is AudioBuffer - Description: Check if AudioContext.createBuffer method with two param,return value type of is AudioBuffer">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createBuffer method with two param,return value type of is AudioBuffer - Description: Check if AudioContext.createBuffer method with two param,return value type of is AudioBuffer]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBuffer_two_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8H-audiocontext_createBufferSource_base" name="8H-audiocontext_createBufferSource_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createBufferSource,return value type of is AudioBufferSourceNode - Description: Check if AudioContext.createBufferSource,return value type of is AudioBufferSourceNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createBufferSource,return value type of is AudioBufferSourceNode - Description: Check if AudioContext.createBufferSource,return value type of is AudioBufferSourceNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createBufferSource_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8I-audiocontext_createChannelMerger_base" name="8I-audiocontext_createChannelMerger_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode - Description: Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode - Description: Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8J-audiocontext_createChannelMerger_no_argument" name="8J-audiocontext_createChannelMerger_no_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode if no set numberOfOutputs param - Description: Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode if no set numberOfOutputs param">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode if no set numberOfOutputs param - Description: Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode if no set numberOfOutputs param]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelMerger_no_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8K-audiocontext_createChannelSplitter_base" name="8K-audiocontext_createChannelSplitter_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode - Description: Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode - Description: Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8L-audiocontext_createChannelSplitter_no_argument" name="8L-audiocontext_createChannelSplitter_no_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode if no set numberOfOutputs param - Description: Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode if no set numberOfOutputs param">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode if no set numberOfOutputs param - Description: Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode if no set numberOfOutputs param]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createChannelSplitter_no_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8M-audiocontext_createConvolver_base" name="8M-audiocontext_createConvolver_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createConvolver method return value type of is ConvolverNode - Description: Check if AudioContext.createConvolver method return value type of is ConvolverNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createConvolver method return value type of is ConvolverNode - Description: Check if AudioContext.createConvolver method return value type of is ConvolverNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createConvolver_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8N-audiocontext_createDelayNode_base" name="8N-audiocontext_createDelayNode_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 2 if maxDelayTime set 2 - Description: Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 2 if maxDelayTime set 2">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 2 if maxDelayTime set 2 - Description: Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 2 if maxDelayTime set 2]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDelayNode_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8O-audiocontext_createDynamicsCompressor_base" name="8O-audiocontext_createDynamicsCompressor_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createDynamicsCompressor method return value type of is DynamicsCompressorNode - Description: Check if AudioContext.createDynamicsCompressor method return value type of is DynamicsCompressorNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createDynamicsCompressor method return value type of is DynamicsCompressorNode - Description: Check if AudioContext.createDynamicsCompressor method return value type of is DynamicsCompressorNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createDynamicsCompressor_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8P-audiocontext_createGain_base" name="8P-audiocontext_createGain_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createGain method,return value type of is GainNode - Description: Check if AudioContext.createGain method,return value type of is GainNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createGain method,return value type of is GainNode - Description: Check if AudioContext.createGain method,return value type of is GainNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createGain_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8Q-audiocontext_createMediaElementSource_base" name="8Q-audiocontext_createMediaElementSource_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createMediaElementSource method,return value type of is MediaElementAudioSourceNode - Description: Check if AudioContext.createMediaElementSource method,return value type of is MediaElementAudioSourceNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createMediaElementSource method,return value type of is MediaElementAudioSourceNode - Description: Check if AudioContext.createMediaElementSource method,return value type of is MediaElementAudioSourceNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createMediaElementSource_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8R-audiocontext_createOscillator_base" name="8R-audiocontext_createOscillator_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createOscillator method return value type of is OscillatorNode - Description: Check if AudioContext.createOscillator method return value type of is OscillatorNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createOscillator method return value type of is OscillatorNode - Description: Check if AudioContext.createOscillator method return value type of is OscillatorNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createOscillator_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8S-audiocontext_createPanner_base" name="8S-audiocontext_createPanner_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createPanner method return value type of is PannerNode - Description: Check if AudioContext.createPanner method return value type of is PannerNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createPanner method return value type of is PannerNode - Description: Check if AudioContext.createPanner method return value type of is PannerNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createPanner_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8T-audiocontext_createScriptProcessor_base" name="8T-audiocontext_createScriptProcessor_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createScriptProcessor method,return value type of is ScriptProcessorNode - Description: Check if AudioContext.createScriptProcessor method,return value type of is ScriptProcessorNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createScriptProcessor method,return value type of is ScriptProcessorNode - Description: Check if AudioContext.createScriptProcessor method,return value type of is ScriptProcessorNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8U-audiocontext_createScriptProcessor_bufferSize_1024" name="8U-audiocontext_createScriptProcessor_bufferSize_1024" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createScriptProcessor method,JavaScriptAudioNode.bufferSize is 1024 if bufferSize put 1024 - Description: Check if AudioContext.createScriptProcessor method,JavaScriptAudioNode.bufferSize is 1024 if bufferSize put 1024">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createScriptProcessor method,JavaScriptAudioNode.bufferSize is 1024 if bufferSize put 1024 - Description: Check if AudioContext.createScriptProcessor method,JavaScriptAudioNode.bufferSize is 1024 if bufferSize put 1024]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_1024.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8V-audiocontext_createScriptProcessor_bufferSize_16384" name="8V-audiocontext_createScriptProcessor_bufferSize_16384" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 16384 if bufferSize put 16384 - Description: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 16384 if bufferSize put 16384">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 16384 if bufferSize put 16384 - Description: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 16384 if bufferSize put 16384]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_16384.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8W-audiocontext_createScriptProcessor_bufferSize_2048" name="8W-audiocontext_createScriptProcessor_bufferSize_2048" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 2048 if bufferSize put 2048 - Description: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 2048 if bufferSize put 2048">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 2048 if bufferSize put 2048 - Description: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 2048 if bufferSize put 2048]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_2048.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8X-audiocontext_createScriptProcessor_bufferSize_256" name="8X-audiocontext_createScriptProcessor_bufferSize_256" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 256 if bufferSize put 256 - Description: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 256 if bufferSize put 256">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 256 if bufferSize put 256 - Description: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 256 if bufferSize put 256]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_256.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8Y-audiocontext_createScriptProcessor_bufferSize_4096" name="8Y-audiocontext_createScriptProcessor_bufferSize_4096" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 4096 if bufferSize put 4096 - Description: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 4096 if bufferSize put 4096">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 4096 if bufferSize put 4096 - Description: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 4096 if bufferSize put 4096]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_4096.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-8Z-audiocontext_createScriptProcessor_bufferSize_512" name="8Z-audiocontext_createScriptProcessor_bufferSize_512" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 512 if bufferSize put 512 - Description: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 512 if bufferSize put 512">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 512 if bufferSize put 512 - Description: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 512 if bufferSize put 512]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_512.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-90-audiocontext_createScriptProcessor_bufferSize_8192" name="90-audiocontext_createScriptProcessor_bufferSize_8192" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 8192 if bufferSize put 8192 - Description: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 8192 if bufferSize put 8192">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 8192 if bufferSize put 8192 - Description: Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 8192 if bufferSize put 8192]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_bufferSize_8192.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-91-audiocontext_createScriptProcessor_three_parameters" name="91-audiocontext_createScriptProcessor_three_parameters" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the return type of AudioContext.createScriptProcessor with three paramenters is ScriptProcessorNode - Description: Check if the return type of AudioContext.createScriptProcessor with three paramenters is ScriptProcessorNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the return type of AudioContext.createScriptProcessor with three paramenters is ScriptProcessorNode - Description: Check if the return type of AudioContext.createScriptProcessor with three paramenters is ScriptProcessorNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createScriptProcessor_three_parameters.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-92-audiocontext_createWaveShaper_base" name="92-audiocontext_createWaveShaper_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createWaveShaper method,return value type of is WaveShaperNode - Description: Check if AudioContext.createWaveShaper method,return value type of is WaveShaperNode">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createWaveShaper method,return value type of is WaveShaperNode - Description: Check if AudioContext.createWaveShaper method,return value type of is WaveShaperNode]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createWaveShaper_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-93-audiocontext_createWaveShaper_type" name="93-audiocontext_createWaveShaper_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createWaveShaper is of type method - Description: Check if AudioContext.createWaveShaper is of type method">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createWaveShaper is of type method - Description: Check if AudioContext.createWaveShaper is of type method]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createWaveShaper_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-94-audiocontext_createwavetable_base" name="94-audiocontext_createwavetable_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.createwavetable method return value type of is WaveTable - Description: Check if AudioContext.createwavetable method return value type of is WaveTable">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.createwavetable method return value type of is WaveTable - Description: Check if AudioContext.createwavetable method return value type of is WaveTable]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_createwavetable_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-95-audiocontext_decodeAudioData_base" name="95-audiocontext_decodeAudioData_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioContext.decodeAudioData method, callback argument equals AudioBuffer if AudioContext.decodeAudioData decode success - Description: Check if AudioContext.decodeAudioData method, callback argument equals AudioBuffer if AudioContext.decodeAudioData decode success">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioContext.decodeAudioData method, callback argument equals AudioBuffer if AudioContext.decodeAudioData decode success - Description: Check if AudioContext.decodeAudioData method, callback argument equals AudioBuffer if AudioContext.decodeAudioData decode success]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiocontext_decodeAudioData_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-96-audiodestinationnode_numberOfChannels_base" name="96-audiodestinationnode_numberOfChannels_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioDestinationNode.numberOfChannels attribute set maxNumberOfChannels then AudioContext.numberOfChannels equals AudioContext.maxNumberOfChannels - Description: Check if AudioDestinationNode.numberOfChannels attribute set maxNumberOfChannels then AudioContext.numberOfChannels equals AudioContext.maxNumberOfChannels">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioDestinationNode.numberOfChannels attribute set maxNumberOfChannels then AudioContext.numberOfChannels equals AudioContext.maxNumberOfChannels - Description: Check if AudioDestinationNode.numberOfChannels attribute set maxNumberOfChannels then AudioContext.numberOfChannels equals AudioContext.maxNumberOfChannels]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_numberOfChannels_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-97-audiodestinationnode_numberOfChannels_default_value" name="97-audiodestinationnode_numberOfChannels_default_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioDestinationNode.numberOfChannels attribute default value is 2 - Description: Check if AudioDestinationNode.numberOfChannels attribute default value is 2">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioDestinationNode.numberOfChannels attribute default value is 2 - Description: Check if AudioDestinationNode.numberOfChannels attribute default value is 2]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiodestinationnode_numberOfChannels_default_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-98-audiolistener_dopplerFactor_default_value" name="98-audiolistener_dopplerFactor_default_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioListener.dopplerFactor default value is 1 - Description: Check if the AudioListener.dopplerFactor default value is 1">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioListener.dopplerFactor default value is 1 - Description: Check if the AudioListener.dopplerFactor default value is 1]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_default_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-99-audiolistener_dopplerFactor_value" name="99-audiolistener_dopplerFactor_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioListener.dopplerFactor is float value - Description: Check if the AudioListener.dopplerFactor is float value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioListener.dopplerFactor is float value - Description: Check if the AudioListener.dopplerFactor is float value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_dopplerFactor_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9A-audiolistener_setOrientation_base" name="9A-audiolistener_setOrientation_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioListener.setOrientation can change the direction of the listener - Description: Check if AudioListener.setOrientation can change the direction of the listener">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioListener.setOrientation can change the direction of the listener - Description: Check if AudioListener.setOrientation can change the direction of the listener]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setOrientation_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9B-audiolistener_setPosition_base" name="9B-audiolistener_setPosition_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioListener.setPosition can change the position of the listener in a 3D cartesian coordinate space - Description: Check if AudioListener.setPosition can change the position of the listener in a 3D cartesian coordinate space">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioListener.setPosition can change the position of the listener in a 3D cartesian coordinate space - Description: Check if AudioListener.setPosition can change the position of the listener in a 3D cartesian coordinate space]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setPosition_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9C-audiolistener_setVelocity_base" name="9C-audiolistener_setVelocity_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioListener.setVelocity can set the velocity vector of the listener - Description: Check if AudioListener.setVelocity can set the velocity vector of the listener">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioListener.setVelocity can set the velocity vector of the listener - Description: Check if AudioListener.setVelocity can set the velocity vector of the listener]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_setVelocity_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9D-audiolistener_speedOfSound_default_value" name="9D-audiolistener_speedOfSound_default_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioListener.speedOfSound default value is 343.3 - Description: Check if the AudioListener.speedOfSound default value is 343.3">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioListener.speedOfSound default value is 343.3 - Description: Check if the AudioListener.speedOfSound default value is 343.3]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_default_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9E-audiolistener_speedOfSound_value" name="9E-audiolistener_speedOfSound_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioListener.speedOfSound is float value - Description: Check if the AudioListener.speedOfSound is float value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioListener.speedOfSound is float value - Description: Check if the AudioListener.speedOfSound is float value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audiolistener_speedOfSound_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9F-audionode_connect_output_input_no_argument" name="9F-audionode_connect_output_input_no_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: check if AudioNode.connect method,no throw exception if input and output param not set - Description: check if AudioNode.connect method,no throw exception if input and output param not set">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: check if AudioNode.connect method,no throw exception if input and output param not set - Description: check if AudioNode.connect method,no throw exception if input and output param not set]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_output_input_no_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9G-audionode_connect_three_base" name="9G-audionode_connect_three_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: check if AudioNode.connect method,no throw exception if with three param basic usage - Description: check if AudioNode.connect method,no throw exception if with three param basic usage">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: check if AudioNode.connect method,no throw exception if with three param basic usage - Description: check if AudioNode.connect method,no throw exception if with three param basic usage]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_three_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9H-audionode_connect_two_arguments" name="9H-audionode_connect_two_arguments" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.connect method,no throw exception if input param not set - Description: Check if AudioNode.connect method,no throw exception if input param not set">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.connect method,no throw exception if input param not set - Description: Check if AudioNode.connect method,no throw exception if input param not set]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_connect_two_arguments.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9I-audionode_disconnect_base" name="9I-audionode_disconnect_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.disconnect method,no throw exception if input param set 0 - Description: Check if AudioNode.disconnect method,no throw exception if input param set 0">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.disconnect method,no throw exception if input param set 0 - Description: Check if AudioNode.disconnect method,no throw exception if input param set 0]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9J-audionode_disconnect_no_argument" name="9J-audionode_disconnect_no_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioNode.disconnect method,no throw exception if input param not set - Description: Check if AudioNode.disconnect method,no throw exception if input param not set">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioNode.disconnect method,no throw exception if input param not set - Description: Check if AudioNode.disconnect method,no throw exception if input param not set]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audionode_disconnect_no_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9K-audioparam_cancelScheduledValues_base" name="9K-audioparam_cancelScheduledValues_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.cancelScheduledValues method executes well with float type parameter - Description: Check if AudioParam.cancelScheduledValues method executes well with float type parameter">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.cancelScheduledValues method executes well with float type parameter - Description: Check if AudioParam.cancelScheduledValues method executes well with float type parameter]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_cancelScheduledValues_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9L-audioparam_exponentialRampToValueAtTime_base" name="9L-audioparam_exponentialRampToValueAtTime_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.exponentialRampToValueAtTime method executes well with two float parameters - Description: Check if AudioParam.exponentialRampToValueAtTime method executes well with two float parameters">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.exponentialRampToValueAtTime method executes well with two float parameters - Description: Check if AudioParam.exponentialRampToValueAtTime method executes well with two float parameters]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_exponentialRampToValueAtTime_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9M-audioparam_linearRampToValueAtTime_base" name="9M-audioparam_linearRampToValueAtTime_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.linearRampToValueAtTime method executes well with two float parameters - Description: Check if AudioParam.linearRampToValueAtTime method executes well with two float parameters">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.linearRampToValueAtTime method executes well with two float parameters - Description: Check if AudioParam.linearRampToValueAtTime method executes well with two float parameters]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_linearRampToValueAtTime_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9N-audioparam_setTargetAtTime_base" name="9N-audioparam_setTargetAtTime_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.setTargetAtTime method executes well with float,double and double parameter - Description: Check if AudioParam.setTargetAtTime method executes well with float,double and double parameter">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.setTargetAtTime method executes well with float,double and double parameter - Description: Check if AudioParam.setTargetAtTime method executes well with float,double and double parameter]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setTargetAtTime_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9O-audioprocessingevent_inputBuffer_value" name="9O-audioprocessingevent_inputBuffer_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioProcessingEvent.inputBuffer is AudioBuffer value - Description: Check if the AudioProcessingEvent.inputBuffer is AudioBuffer value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioProcessingEvent.inputBuffer is AudioBuffer value - Description: Check if the AudioProcessingEvent.inputBuffer is AudioBuffer value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_inputBuffer_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9P-audioprocessingevent_outputBuffer_value" name="9P-audioprocessingevent_outputBuffer_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the AudioProcessingEvent.outBuffer is AudioBuffer value - Description: Check if the AudioProcessingEvent.outBuffer is AudioBuffer value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the AudioProcessingEvent.outBuffer is AudioBuffer value - Description: Check if the AudioProcessingEvent.outBuffer is AudioBuffer value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioprocessingevent_outputBuffer_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9Q-biquadfilternode_detune_basic" name="9Q-biquadfilternode_detune_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode.detune attribute exists and type and readonly - Description: Check if BiquadFilterNode.detune attribute exists and type and readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode.detune attribute exists and type and readonly - Description: Check if BiquadFilterNode.detune attribute exists and type and readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_detune_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9R-biquadfilternode_getFrequencyResponse_base" name="9R-biquadfilternode_getFrequencyResponse_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode.getFrequencyResponse method executes well with Float32Array parameter - Description: Check if BiquadFilterNode.getFrequencyResponse method executes well with Float32Array parameter">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode.getFrequencyResponse method executes well with Float32Array parameter - Description: Check if BiquadFilterNode.getFrequencyResponse method executes well with Float32Array parameter]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_getFrequencyResponse_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9S-biquadfilternode_type_default_value" name="9S-biquadfilternode_type_default_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if BiquadFilterNode.type attribute default value is 'lowpass' - Description: Check if BiquadFilterNode.type attribute default value is 'lowpass'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if BiquadFilterNode.type attribute default value is 'lowpass' - Description: Check if BiquadFilterNode.type attribute default value is 'lowpass']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/biquadfilternode_type_default_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9T-convolvernode_buffer_value" name="9T-convolvernode_buffer_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the ConvolverNode.buffer is AudioBuffer value - Description: Check if the ConvolverNode.buffer is AudioBuffer value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the ConvolverNode.buffer is AudioBuffer value - Description: Check if the ConvolverNode.buffer is AudioBuffer value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_buffer_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9U-convolvernode_normalize_default_value" name="9U-convolvernode_normalize_default_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the ConvolverNode.normalize default value is true - Description: Check if the ConvolverNode.normalize default value is true">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the ConvolverNode.normalize default value is true - Description: Check if the ConvolverNode.normalize default value is true]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_default_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9V-convolvernode_normalize_value" name="9V-convolvernode_normalize_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the ConvolverNode.normalize is boolean value - Description: Check if the ConvolverNode.normalize is boolean value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the ConvolverNode.normalize is boolean value - Description: Check if the ConvolverNode.normalize is boolean value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/convolvernode_normalize_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9W-delaynode_delayTime_readonly" name="9W-delaynode_delayTime_readonly" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DelayNode.delayTime attribute is readonly - Description: Check if DelayNode.delayTime attribute is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DelayNode.delayTime attribute is readonly - Description: Check if DelayNode.delayTime attribute is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_readonly.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9X-delaynode_delayTime_value_default_value" name="9X-delaynode_delayTime_value_default_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DelayNode.delayTime attribute default value is 0 - Description: Check if DelayNode.delayTime attribute default value is 0">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DelayNode.delayTime attribute default value is 0 - Description: Check if DelayNode.delayTime attribute default value is 0]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/delaynode_delayTime_value_default_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9Y-gainnode_gain_value_default_value" name="9Y-gainnode_gain_value_default_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if GainNode.gain.value default value is 1 - Description: Check if GainNode.gain.value default value is 1">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if GainNode.gain.value default value is 1 - Description: Check if GainNode.gain.value default value is 1]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/gainnode_gain_value_default_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-9Z-offlineaudiocontext_oncomplete_type" name="9Z-offlineaudiocontext_oncomplete_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OfflineAudioContext.oncomplete attribute is object type - Description: Check if OfflineAudioContext.oncomplete attribute is object type">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OfflineAudioContext.oncomplete attribute is object type - Description: Check if OfflineAudioContext.oncomplete attribute is object type]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_oncomplete_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-A0-offlineaudiocontext_startRendering_type" name="A0-offlineaudiocontext_startRendering_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OfflineAudioContext.startRendering method is type of function - Description: Check if OfflineAudioContext.startRendering method is type of function">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OfflineAudioContext.startRendering method is type of function - Description: Check if OfflineAudioContext.startRendering method is type of function]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/offlineaudiocontext_startRendering_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-A1-oscillatornode_FINISHED_STATE_value" name="A1-oscillatornode_FINISHED_STATE_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.FINISHED_STATE attribute value is 3 - Description: Check if OscillatorNode.FINISHED_STATE attribute value is 3">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.FINISHED_STATE attribute value is 3 - Description: Check if OscillatorNode.FINISHED_STATE attribute value is 3]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_FINISHED_STATE_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-A2-oscillatornode_SCHEDULED_STATE_exists" name="A2-oscillatornode_SCHEDULED_STATE_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.SCHEDULED_STATE constant exists - Description: Check if OscillatorNode.SCHEDULED_STATE constant exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.SCHEDULED_STATE constant exists - Description: Check if OscillatorNode.SCHEDULED_STATE constant exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_SCHEDULED_STATE_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-A3-oscillatornode_setWaveTable_exists" name="A3-oscillatornode_setWaveTable_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.setWaveTable function exists - Description: Check if OscillatorNode.setWaveTable function exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.setWaveTable function exists - Description: Check if OscillatorNode.setWaveTable function exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_setWaveTable_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-A4-oscillatornode_start_exists" name="A4-oscillatornode_start_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.start method exists - Description: Check if OscillatorNode.start method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.start method exists - Description: Check if OscillatorNode.start method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_start_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-A5-oscillatornode_stop_base" name="A5-oscillatornode_stop_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.stop method executes well with double type parameter - Description: Check if OscillatorNode.stop method executes well with double type parameter">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.stop method executes well with double type parameter - Description: Check if OscillatorNode.stop method executes well with double type parameter]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-A6-oscillatornode_stop_before_start" name="A6-oscillatornode_stop_before_start" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if an exception will be thrown when OscillatorNode.stop is before OscillatorNode.start - Description: Check if an exception will be thrown when OscillatorNode.stop is before OscillatorNode.start">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception will be thrown when OscillatorNode.stop is before OscillatorNode.start - Description: Check if an exception will be thrown when OscillatorNode.stop is before OscillatorNode.start]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_stop_before_start.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-A7-oscillatornode_UNSCHEDULED_STATE_value" name="A7-oscillatornode_UNSCHEDULED_STATE_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if OscillatorNode.UNSCHEDULED_STATE attribute value is 0 - Description: Check if OscillatorNode.UNSCHEDULED_STATE attribute value is 0">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if OscillatorNode.UNSCHEDULED_STATE attribute value is 0 - Description: Check if OscillatorNode.UNSCHEDULED_STATE attribute value is 0]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/oscillatornode_UNSCHEDULED_STATE_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-A8-pannernode_coneInnerAngle_value" name="A8-pannernode_coneInnerAngle_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the PannerNode.coneInnerAngle is float value - Description: Check if the PannerNode.coneInnerAngle is float value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the PannerNode.coneInnerAngle is float value - Description: Check if the PannerNode.coneInnerAngle is float value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneInnerAngle_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-A9-pannernode_coneOuterAngle_value" name="A9-pannernode_coneOuterAngle_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the PannerNode.coneOuterAngle is float value - Description: Check if the PannerNode.coneOuterAngle is float value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the PannerNode.coneOuterAngle is float value - Description: Check if the PannerNode.coneOuterAngle is float value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterAngle_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AA-pannernode_coneOuterGain_value" name="AA-pannernode_coneOuterGain_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the PannerNode.coneOuterGain is float value - Description: Check if the PannerNode.coneOuterGain is float value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the PannerNode.coneOuterGain is float value - Description: Check if the PannerNode.coneOuterGain is float value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_coneOuterGain_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AB-pannernode_distanceModel_default_value" name="AB-pannernode_distanceModel_default_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the PannerNode.distanceModel default value is 'inverse' - Description: Check if the PannerNode.distanceModel default value is 'inverse'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the PannerNode.distanceModel default value is 'inverse' - Description: Check if the PannerNode.distanceModel default value is 'inverse']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_default_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AC-pannernode_distanceModel_exists" name="AC-pannernode_distanceModel_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if PannerNode.distanceModel attribute exists - Description: Check if PannerNode.distanceModel attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if PannerNode.distanceModel attribute exists - Description: Check if PannerNode.distanceModel attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AD-pannernode_distanceModel_exponential" name="AD-pannernode_distanceModel_exponential" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the PannerNode .distanceModel set value 'exponential' - Description: Check if the PannerNode .distanceModel set value 'exponential'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the PannerNode .distanceModel set value 'exponential' - Description: Check if the PannerNode .distanceModel set value 'exponential']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_exponential.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AE-pannernode_distanceModel_inverse" name="AE-pannernode_distanceModel_inverse" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the PannerNode.distanceModel set value 'inverse' - Description: Check if the PannerNode.distanceModel set value 'inverse'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the PannerNode.distanceModel set value 'inverse' - Description: Check if the PannerNode.distanceModel set value 'inverse']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_distanceModel_inverse.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AF-pannernode_maxDistance_exists" name="AF-pannernode_maxDistance_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if PannerNode.maxDistance attribute exists - Description: Check if PannerNode.maxDistance attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if PannerNode.maxDistance attribute exists - Description: Check if PannerNode.maxDistance attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_maxDistance_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AG-pannernode_panningModel_default_value" name="AG-pannernode_panningModel_default_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the PannerNode.panningModel default value is 1 - Description: Check if the PannerNode.panningModel default value is 1">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the PannerNode.panningModel default value is 1 - Description: Check if the PannerNode.panningModel default value is 1]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_default_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AH-pannernode_panningModel_HRTF" name="AH-pannernode_panningModel_HRTF" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the PannerNode.panningModel attribute set value 'HRTF' - Description: Check if the PannerNode.panningModel attribute set value 'HRTF'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the PannerNode.panningModel attribute set value 'HRTF' - Description: Check if the PannerNode.panningModel attribute set value 'HRTF']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_HRTF.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AI-pannernode_panningModel_value" name="AI-pannernode_panningModel_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the PannerNode.panningModel changed another value to position the audio in 3D space - Description: Check if the PannerNode.panningModel changed another value to position the audio in 3D space">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the PannerNode.panningModel changed another value to position the audio in 3D space - Description: Check if the PannerNode.panningModel changed another value to position the audio in 3D space]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_panningModel_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AJ-pannernode_refDistance_exists" name="AJ-pannernode_refDistance_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if PannerNode.refDistance attribute exists - Description: Check if PannerNode.refDistance attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if PannerNode.refDistance attribute exists - Description: Check if PannerNode.refDistance attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_refDistance_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AK-pannernode_rolloffFactor_exists" name="AK-pannernode_rolloffFactor_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if PannerNode.rolloffFactor attribute exists - Description: Check if PannerNode.rolloffFactor attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if PannerNode.rolloffFactor attribute exists - Description: Check if PannerNode.rolloffFactor attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_rolloffFactor_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AL-pannernode_setOrientation_base" name="AL-pannernode_setOrientation_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the PannerNode.setOrientation can change the direction of the audio source - Description: Check if the PannerNode.setOrientation can change the direction of the audio source">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the PannerNode.setOrientation can change the direction of the audio source - Description: Check if the PannerNode.setOrientation can change the direction of the audio source]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setOrientation_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AM-pannernode_setVelocity_base" name="AM-pannernode_setVelocity_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the PannerNode.setVelocity can set the velocity vector of the audio source - Description: Check if the PannerNode.setVelocity can set the velocity vector of the audio source">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the PannerNode.setVelocity can set the velocity vector of the audio source - Description: Check if the PannerNode.setVelocity can set the velocity vector of the audio source]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setVelocity_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AN-pannernode_setVelocity_exists" name="AN-pannernode_setVelocity_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if PannerNode.setVelocity function exists - Description: Check if PannerNode.setVelocity function exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if PannerNode.setVelocity function exists - Description: Check if PannerNode.setVelocity function exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/pannernode_setVelocity_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AO-scriptprocessornode_bufferSize_type" name="AO-scriptprocessornode_bufferSize_type" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if ScriptProcessorNode.bufferSize attribute is type of number - Description: Check if ScriptProcessorNode.bufferSize attribute is type of number">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ScriptProcessorNode.bufferSize attribute is type of number - Description: Check if ScriptProcessorNode.bufferSize attribute is type of number]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_bufferSize_type.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AP-scriptprocessornode_onaudioprocess_exists" name="AP-scriptprocessornode_onaudioprocess_exists" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if ScriptProcessorNode.onaudioprocess attribute exists - Description: Check if ScriptProcessorNode.onaudioprocess attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if ScriptProcessorNode.onaudioprocess attribute exists - Description: Check if ScriptProcessorNode.onaudioprocess attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/scriptprocessornode_onaudioprocess_exists.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AQ-waveshapernode_curve_value" name="AQ-waveshapernode_curve_value" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if WaveShaperNode.curve attribute value is Float32Array object - Description: Check if WaveShaperNode.curve attribute value is Float32Array object">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if WaveShaperNode.curve attribute value is Float32Array object - Description: Check if WaveShaperNode.curve attribute value is Float32Array object]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/waveshapernode_curve_value.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AR-audioparam_setValueAtTime_base" name="AR-audioparam_setValueAtTime_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.setValueAtTime method executes well with two float parameters - Description: Check if AudioParam.setValueAtTime method executes well with two float parameters">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.setValueAtTime method executes well with two float parameters - Description: Check if AudioParam.setValueAtTime method executes well with two float parameters]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueAtTime_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AS-audioparam_setValueCurveAtTime_base" name="AS-audioparam_setValueCurveAtTime_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.setValueCurveAtTime method executes well with three parameters - Description: Check if AudioParam.setValueCurveAtTime method executes well with three parameters">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.setValueCurveAtTime method executes well with three parameters - Description: Check if AudioParam.setValueCurveAtTime method executes well with three parameters]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_setValueCurveAtTime_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1G-AT-audioparam_value_base" name="AT-audioparam_value_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webaudio-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if AudioParam.value attribute set AudioParam.minValue then AudioParam.value equals AudioParam.minValue - Description: Check if AudioParam.value attribute set AudioParam.minValue then AudioParam.value equals AudioParam.minValue">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if AudioParam.value attribute set AudioParam.minValue then AudioParam.value equals AudioParam.minValue - Description: Check if AudioParam.value attribute set AudioParam.minValue then AudioParam.value equals AudioParam.minValue]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webaudio-w3c-tests/webaudio/audioparam_value_base.html</test_script_entry>
                </description>
            </testcase>
        </set>
    </suite>
</test_definition>