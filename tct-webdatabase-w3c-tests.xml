<?xml version="1.0"?>
<test_definition>
    <suite launcher="xwalk" name="00-common/E0-crosswalk">
        <set name="common/crosswalk/commonapi/tct-webdatabase-w3c-tests">
            <testcase id="00-E0-00-1H-01-Database_changeVersion_exist" name="01-Database_changeVersion_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the Database.changeVersion method exists - Description: Check if the Database.changeVersion method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the Database.changeVersion method exists - Description: Check if the Database.changeVersion method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_changeVersion_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-02-Database_readTransaction_exist" name="02-Database_readTransaction_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the Database.readTransaction method exists - Description: Check if the Database.readTransaction method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the Database.readTransaction method exists - Description: Check if the Database.readTransaction method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_readTransaction_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-03-Database_transaction_exist" name="03-Database_transaction_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the Database.transaction method exists - Description: Check if the Database.transaction method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the Database.transaction method exists - Description: Check if the Database.transaction method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_transaction_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-04-Database_version_exist" name="04-Database_version_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the Database.version attribute exists - Description: Check if the Database.version attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the Database.version attribute exists - Description: Check if the Database.version attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_version_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-05-SQLError_code_exist" name="05-SQLError_code_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLError.code attribute exists - Description: Check if the SQLError.code attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLError.code attribute exists - Description: Check if the SQLError.code attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_code_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-06-SQLError_CONSTRAINT_ERR_exist" name="06-SQLError_CONSTRAINT_ERR_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLError.CONSTRAINT_ERR exists and its type is number and its value is 7 - Description: Check if the SQLError.CONSTRAINT_ERR exists and its type is number and its value is 7">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLError.CONSTRAINT_ERR exists and its type is number and its value is 7 - Description: Check if the SQLError.CONSTRAINT_ERR exists and its type is number and its value is 7]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_CONSTRAINT_ERR_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-07-SQLError_DATABASE_ERR_exist" name="07-SQLError_DATABASE_ERR_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLError.CONSTRAINT_ERR exists and its type is number and its value is 1 - Description: Check if the SQLError.CONSTRAINT_ERR exists and its type is number and its value is 1">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLError.CONSTRAINT_ERR exists and its type is number and its value is 1 - Description: Check if the SQLError.CONSTRAINT_ERR exists and its type is number and its value is 1]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_DATABASE_ERR_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-08-SQLException_code_support_check" name="08-SQLException_code_support_check" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the Exception Code definition is in webruntime - Description: Check if the Exception Code definition is in webruntime">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the Exception Code definition is in webruntime - Description: Check if the Exception Code definition is in webruntime]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLException_code_support_check.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-09-SQLException_CONSTRAINT_ERR_exist" name="09-SQLException_CONSTRAINT_ERR_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLException.CONSTRAINT_ERR constant exists - Description: Check if the SQLException.CONSTRAINT_ERR constant exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLException.CONSTRAINT_ERR constant exists - Description: Check if the SQLException.CONSTRAINT_ERR constant exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLException_CONSTRAINT_ERR_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0A-SQLException_DATABASE_ERR_exist" name="0A-SQLException_DATABASE_ERR_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLException.DATABASE_ERR constant exists - Description: Check if the SQLException.DATABASE_ERR constant exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLException.DATABASE_ERR constant exists - Description: Check if the SQLException.DATABASE_ERR constant exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLException_DATABASE_ERR_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0B-SQLException_QUOTA_ERR_exist" name="0B-SQLException_QUOTA_ERR_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLException.QUOTA_ERR constant exists - Description: Check if the SQLException.QUOTA_ERR constant exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLException.QUOTA_ERR constant exists - Description: Check if the SQLException.QUOTA_ERR constant exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLException_QUOTA_ERR_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0C-SQLException_TOO_LARGE_ERR_exist" name="0C-SQLException_TOO_LARGE_ERR_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLException.TOO_LARGE_ERR constant exists - Description: Check if the SQLException.TOO_LARGE_ERR constant exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLException.TOO_LARGE_ERR constant exists - Description: Check if the SQLException.TOO_LARGE_ERR constant exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLException_TOO_LARGE_ERR_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0D-SQLException_UNKNOWN_ERR_exist" name="0D-SQLException_UNKNOWN_ERR_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLException.UNKNOWN_ERR constant exists - Description: Check if the SQLException.UNKNOWN_ERR constant exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLException.UNKNOWN_ERR constant exists - Description: Check if the SQLException.UNKNOWN_ERR constant exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLException_UNKNOWN_ERR_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0E-SQLException_VERSION_ERR_exist" name="0E-SQLException_VERSION_ERR_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLException.VERSION_ERR constant exists - Description: Check if the SQLException.VERSION_ERR constant exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLException.VERSION_ERR constant exists - Description: Check if the SQLException.VERSION_ERR constant exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLException_VERSION_ERR_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0F-SQLResultSetRowList_item_exist" name="0F-SQLResultSetRowList_item_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLResultSetRowList.item method exists - Description: Check if the SQLResultSetRowList.item method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLResultSetRowList.item method exists - Description: Check if the SQLResultSetRowList.item method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSetRowList_item_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0G-SQLResultSetRowList_length_exist" name="0G-SQLResultSetRowList_length_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLResultSetRowList.length attribute exists - Description: Check if the SQLResultSetRowList.length attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLResultSetRowList.length attribute exists - Description: Check if the SQLResultSetRowList.length attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSetRowList_length_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0H-SQLResultSet_insertId_exist" name="0H-SQLResultSet_insertId_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLResultSet.insertId attribute exists - Description: Check if the SQLResultSet.insertId attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLResultSet.insertId attribute exists - Description: Check if the SQLResultSet.insertId attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_insertId_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0I-SQLResultSet_rowsAffected_exist" name="0I-SQLResultSet_rowsAffected_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLResultSet.rowsAffected attribute exists - Description: Check if the SQLResultSet.rowsAffected attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLResultSet.rowsAffected attribute exists - Description: Check if the SQLResultSet.rowsAffected attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_rowsAffected_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0J-SQLResultSet_rows_exist" name="0J-SQLResultSet_rows_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLResultSet.rows attribute exists - Description: Check if the SQLResultSet.rows attribute exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLResultSet.rows attribute exists - Description: Check if the SQLResultSet.rows attribute exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_rows_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0K-SQLTransaction_executeSql_exist" name="0K-SQLTransaction_executeSql_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLTransaction.executeSql method exists - Description: Check if the SQLTransaction.executeSql method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLTransaction.executeSql method exists - Description: Check if the SQLTransaction.executeSql method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransaction_executeSql_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0L-window_openDatabase_exist" name="0L-window_openDatabase_exist" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the window.openDatabase method exists - Description: Check if the window.openDatabase method exists">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the window.openDatabase method exists - Description: Check if the window.openDatabase method exists]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_exist.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0M-DatabaseCallback_handleEvent_database" name="0M-DatabaseCallback_handleEvent_database" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DatabaseCallback handleEvent() method with database argument that handleEvent will be invoked - Description: Check if DatabaseCallback handleEvent() method with database argument that handleEvent will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DatabaseCallback handleEvent() method with database argument that handleEvent will be invoked - Description: Check if DatabaseCallback handleEvent() method with database argument that handleEvent will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/DatabaseCallback_handleEvent_database.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0N-DatabaseCallback_handleEvent_no_arguments" name="0N-DatabaseCallback_handleEvent_no_arguments" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if DatabaseCallback handleEvent() method no set arguments that handleEvent will be invoked - Description: Check if DatabaseCallback handleEvent() method no set arguments that handleEvent will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if DatabaseCallback handleEvent() method no set arguments that handleEvent will be invoked - Description: Check if DatabaseCallback handleEvent() method no set arguments that handleEvent will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/DatabaseCallback_handleEvent_no_arguments.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0O-DatabaseSync_readTransaction_null_transaction" name="0O-DatabaseSync_readTransaction_null_transaction" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if an exception should be thrown when readTransaction callback parameter is null on sync database - Description: Check if an exception should be thrown when readTransaction callback parameter is null on sync database">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if an exception should be thrown when readTransaction callback parameter is null on sync database - Description: Check if an exception should be thrown when readTransaction callback parameter is null on sync database]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/DatabaseSync_readTransaction_null_transaction.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0P-Database_changeversion_base" name="0P-Database_changeversion_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if Database.changeVersion has all valid arguments that expecting the database'version is to be changed - Description: Check if Database.changeVersion has all valid arguments that expecting the database'version is to be changed">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if Database.changeVersion has all valid arguments that expecting the database'version is to be changed - Description: Check if Database.changeVersion has all valid arguments that expecting the database'version is to be changed]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_changeversion_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0Q-Database_changeVersion_newVersion_2point0" name="0Q-Database_changeVersion_newVersion_2point0" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the parameter 'newVersion' of the method Database.changeVersion is 2.0 that expecting the database's version is to be 2.0 - Description: Check if the parameter 'newVersion' of the method Database.changeVersion is 2.0 that expecting the database's version is to be 2.0">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the parameter 'newVersion' of the method Database.changeVersion is 2.0 that expecting the database's version is to be 2.0 - Description: Check if the parameter 'newVersion' of the method Database.changeVersion is 2.0 that expecting the database's version is to be 2.0]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_changeVersion_newVersion_2point0.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0R-Database_changeVersion_newversion_less_oldversion" name="0R-Database_changeVersion_newversion_less_oldversion" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if Database.changeVersion() can change database's version when the new Version less than old version - Description: Check if Database.changeVersion() can change database's version when the new Version less than old version">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if Database.changeVersion() can change database's version when the new Version less than old version - Description: Check if Database.changeVersion() can change database's version when the new Version less than old version]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_changeVersion_newversion_less_oldversion.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0S-Database_changeVersion_newVersion_null" name="0S-Database_changeVersion_newVersion_null" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the parameter 'newVersion' of the method Database.changeVersion is null that expecting the database's version is to be 'null' - Description: Check if the parameter 'newVersion' of the method Database.changeVersion is null that expecting the database's version is to be 'null'">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the parameter 'newVersion' of the method Database.changeVersion is null that expecting the database's version is to be 'null' - Description: Check if the parameter 'newVersion' of the method Database.changeVersion is null that expecting the database's version is to be 'null']]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_changeVersion_newVersion_null.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0T-Database_changeVersion_no_argument" name="0T-Database_changeVersion_no_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if Database.changeVersion has no argument that expecting an exception is to be thrown - Description: Check if Database.changeVersion has no argument that expecting an exception is to be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if Database.changeVersion has no argument that expecting an exception is to be thrown - Description: Check if Database.changeVersion has no argument that expecting an exception is to be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_changeVersion_no_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0U-Database_changeVersion_no_errorcallback" name="0U-Database_changeVersion_no_errorcallback" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if Database.changeVersion can update database version and update schema without errro callback - Description: Check if Database.changeVersion can update database version and update schema without errro callback">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if Database.changeVersion can update database version and update schema without errro callback - Description: Check if Database.changeVersion can update database version and update schema without errro callback]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_changeVersion_no_errorcallback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0V-Database_changeVersion_no_successCallback" name="0V-Database_changeVersion_no_successCallback" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if changeVersion() method with no successCallback that database version will be string 2.0 - Description: Check if changeVersion() method with no successCallback that database version will be string 2.0">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if changeVersion() method with no successCallback that database version will be string 2.0 - Description: Check if changeVersion() method with no successCallback that database version will be string 2.0]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_changeVersion_no_successCallback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0W-Database_changeVersion_with_schema_update" name="0W-Database_changeVersion_with_schema_update" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if Database.changeVersion can update database version and update schema at same time - Description: Check if Database.changeVersion can update database version and update schema at same time">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if Database.changeVersion can update database version and update schema at same time - Description: Check if Database.changeVersion can update database version and update schema at same time]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_changeVersion_with_schema_update.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0X-Database_changeVersion_wrong_old_version" name="0X-Database_changeVersion_wrong_old_version" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if Database.changeVersion has a wrong oldVersion that expecting a VERSION_ERR exception is to be thrown - Description: Check if Database.changeVersion has a wrong oldVersion that expecting a VERSION_ERR exception is to be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if Database.changeVersion has a wrong oldVersion that expecting a VERSION_ERR exception is to be thrown - Description: Check if Database.changeVersion has a wrong oldVersion that expecting a VERSION_ERR exception is to be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_changeVersion_wrong_old_version.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0Y-Database_readTransaction_base" name="0Y-Database_readTransaction_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if Database.readTransaction() can run readRransaction to execute the read-only database operations - Description: Check if Database.readTransaction() can run readRransaction to execute the read-only database operations">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if Database.readTransaction() can run readRransaction to execute the read-only database operations - Description: Check if Database.readTransaction() can run readRransaction to execute the read-only database operations]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_readTransaction_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-0Z-Database_readTransaction_callback_null" name="0Z-Database_readTransaction_callback_null" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if readTransaction() method set null value of callback that expecting an exception is to be thrown - Description: Check if readTransaction() method set null value of callback that expecting an exception is to be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if readTransaction() method set null value of callback that expecting an exception is to be thrown - Description: Check if readTransaction() method set null value of callback that expecting an exception is to be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_readTransaction_callback_null.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-10-Database_readTransaction_errorCallback" name="10-Database_readTransaction_errorCallback" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if readTransaction() method with no preflight operation or postflight operation that errorCallback will be called - Description: Check if readTransaction() method with no preflight operation or postflight operation that errorCallback will be called">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if readTransaction() method with no preflight operation or postflight operation that errorCallback will be called - Description: Check if readTransaction() method with no preflight operation or postflight operation that errorCallback will be called]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_readTransaction_errorCallback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-11-Database_readTransaction_errorCallback_null" name="11-Database_readTransaction_errorCallback_null" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if readTransaction() method set null value of errorCallback that callback will be invoked - Description: Check if readTransaction() method set null value of errorCallback that callback will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if readTransaction() method set null value of errorCallback that callback will be invoked - Description: Check if readTransaction() method set null value of errorCallback that callback will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_readTransaction_errorCallback_null.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-12-Database_readTransaction_no_argument" name="12-Database_readTransaction_no_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if Database.readTransaction has no argument that expecting an exception is to be thrown - Description: Check if Database.readTransaction has no argument that expecting an exception is to be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if Database.readTransaction has no argument that expecting an exception is to be thrown - Description: Check if Database.readTransaction has no argument that expecting an exception is to be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_readTransaction_no_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-13-Database_readTransaction_successCallback_null" name="13-Database_readTransaction_successCallback_null" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if readTransaction() method set null value of successCallback that callback will be invoked - Description: Check if readTransaction() method set null value of successCallback that callback will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if readTransaction() method set null value of successCallback that callback will be invoked - Description: Check if readTransaction() method set null value of successCallback that callback will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_readTransaction_successCallback_null.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-14-Database_transaction_base" name="14-Database_transaction_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if transaction() method has full valid arguments that expecting the sql is to be executed - Description: Check if transaction() method has full valid arguments that expecting the sql is to be executed">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if transaction() method has full valid arguments that expecting the sql is to be executed - Description: Check if transaction() method has full valid arguments that expecting the sql is to be executed]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_transaction_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-15-Database_transaction_callback_null" name="15-Database_transaction_callback_null" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if transaction() method set null value of callback that expecting a TYPE_MISMATCH_ERR exception is to be thrown - Description: Check if transaction() method set null value of callback that expecting a TYPE_MISMATCH_ERR exception is to be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if transaction() method set null value of callback that expecting a TYPE_MISMATCH_ERR exception is to be thrown - Description: Check if transaction() method set null value of callback that expecting a TYPE_MISMATCH_ERR exception is to be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_transaction_callback_null.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-16-Database_transaction_errorCallback" name="16-Database_transaction_errorCallback" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if transaction() method with no preflight operation or postflight operation that errorCallback will be called - Description: Check if transaction() method with no preflight operation or postflight operation that errorCallback will be called">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if transaction() method with no preflight operation or postflight operation that errorCallback will be called - Description: Check if transaction() method with no preflight operation or postflight operation that errorCallback will be called]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_transaction_errorCallback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-17-Database_transaction_errorCallback_null" name="17-Database_transaction_errorCallback_null" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if transaction() method set null value of errorCallback that callback will be invoked - Description: Check if transaction() method set null value of errorCallback that callback will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if transaction() method set null value of errorCallback that callback will be invoked - Description: Check if transaction() method set null value of errorCallback that callback will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_transaction_errorCallback_null.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-18-Database_transaction_no_argument" name="18-Database_transaction_no_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if Database.transaction has no argument that expecting an exception is to be thrown - Description: Check if Database.transaction has no argument that expecting an exception is to be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if Database.transaction has no argument that expecting an exception is to be thrown - Description: Check if Database.transaction has no argument that expecting an exception is to be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_transaction_no_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-19-Database_transaction_successCallback" name="19-Database_transaction_successCallback" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if transaction() method with right operation that successCallback will be invoked - Description: Check if transaction() method with right operation that successCallback will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if transaction() method with right operation that successCallback will be invoked - Description: Check if transaction() method with right operation that successCallback will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_transaction_successCallback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1A-Database_transaction_successCallback_null" name="1A-Database_transaction_successCallback_null" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if transaction() method set null value of successCallback that callback will be invoked - Description: Check if transaction() method set null value of successCallback that callback will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if transaction() method set null value of successCallback that callback will be invoked - Description: Check if transaction() method set null value of successCallback that callback will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_transaction_successCallback_null.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1B-Database_version_2point0" name="1B-Database_version_2point0" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the database version is 2.0 - Description: Check if the database version is 2.0">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the database version is 2.0 - Description: Check if the database version is 2.0]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_version_2point0.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1C-Database_version_empty_string" name="1C-Database_version_empty_string" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the database's version is empty string - Description: Check if the database's version is empty string">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the database's version is empty string - Description: Check if the database's version is empty string]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_version_empty_string.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1D-Database_version_normal" name="1D-Database_version_normal" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the attribute Database.version has a normal value - Description: Check if the attribute Database.version has a normal value">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the attribute Database.version has a normal value - Description: Check if the attribute Database.version has a normal value]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_version_normal.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1E-Database_version_null" name="1E-Database_version_null" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the database'sversion is string null - Description: Check if the database'sversion is string null">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the database'sversion is string null - Description: Check if the database'sversion is string null]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_version_null.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1F-Database_version_basic" name="1F-Database_version_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of version is string and it is readonly - Description: Check if the type of version is string and it is readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of version is string and it is readonly - Description: Check if the type of version is string and it is readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_version_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1G-SQLError_code_2" name="1G-SQLError_code_2" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if changeVersion() method with error oldversion that SQLError.code will be 2 - Description: Check if changeVersion() method with error oldversion that SQLError.code will be 2">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if changeVersion() method with error oldversion that SQLError.code will be 2 - Description: Check if changeVersion() method with error oldversion that SQLError.code will be 2]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_code_2.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1H-SQLError_code_5" name="1H-SQLError_code_5" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if executeSql() method missing argument that SQLError code will be 5 - Description: Check if executeSql() method missing argument that SQLError code will be 5">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if executeSql() method missing argument that SQLError code will be 5 - Description: Check if executeSql() method missing argument that SQLError code will be 5]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_code_5.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1I-SQLError_code_basic" name="1I-SQLError_code_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of e.code is number and it's readonly - Description: Check if the type of e.code is number and it's readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of e.code is number and it's readonly - Description: Check if the type of e.code is number and it's readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_code_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1J-SQLError_message_argument" name="1J-SQLError_message_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if executeSql() method missing argument that SQLError.message will be number of '?'s in statement string does not match argument count - Description: Check if executeSql() method missing argument that SQLError.message will be number of '?'s in statement string does not match argument count">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if executeSql() method missing argument that SQLError.message will be number of '?'s in statement string does not match argument count - Description: Check if executeSql() method missing argument that SQLError.message will be number of '?'s in statement string does not match argument count]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_message_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1K-SQLError_message_basic" name="1K-SQLError_message_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the e.message exists and its type is string and it's readonly - Description: Check if the e.message exists and its type is string and it's readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the e.message exists and its type is string and it's readonly - Description: Check if the e.message exists and its type is string and it's readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_message_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1L-SQLError_QUOTA_ERR_basic" name="1L-SQLError_QUOTA_ERR_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the e.QUOTA_ERR exists and its type is number and its value is 4 - Description: Check if the e.QUOTA_ERR exists and its type is number and its value is 4">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the e.QUOTA_ERR exists and its type is number and its value is 4 - Description: Check if the e.QUOTA_ERR exists and its type is number and its value is 4]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_QUOTA_ERR_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1M-SQLError_SYNTAX_ERR_basic" name="1M-SQLError_SYNTAX_ERR_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the e.SYNTAX_ERR exists and its type is number and its value is 5 - Description: Check if the e.SYNTAX_ERR exists and its type is number and its value is 5">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the e.SYNTAX_ERR exists and its type is number and its value is 5 - Description: Check if the e.SYNTAX_ERR exists and its type is number and its value is 5]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_SYNTAX_ERR_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1N-SQLError_TIMEOUT_ERR_basic" name="1N-SQLError_TIMEOUT_ERR_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: CCheck if the e.TIMEOUT_ERR exists and its type is number and its value is 7 - Description: CCheck if the e.TIMEOUT_ERR exists and its type is number and its value is 7">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: CCheck if the e.TIMEOUT_ERR exists and its type is number and its value is 7 - Description: CCheck if the e.TIMEOUT_ERR exists and its type is number and its value is 7]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_TIMEOUT_ERR_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1O-SQLError_TOO_LARGE_ERR_basic" name="1O-SQLError_TOO_LARGE_ERR_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the e.TOO_LARGE_ERR exists and its type is number and its value is 3 - Description: Check if the e.TOO_LARGE_ERR exists and its type is number and its value is 3">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the e.TOO_LARGE_ERR exists and its type is number and its value is 3 - Description: Check if the e.TOO_LARGE_ERR exists and its type is number and its value is 3]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_TOO_LARGE_ERR_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1P-SQLError_UNKNOWN_ERR_basic" name="1P-SQLError_UNKNOWN_ERR_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the e.UNKNOWN_ERR exists and its type is number and its value is 0 - Description: Check if the e.UNKNOWN_ERR exists and its type is number and its value is 0">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the e.UNKNOWN_ERR exists and its type is number and its value is 0 - Description: Check if the e.UNKNOWN_ERR exists and its type is number and its value is 0]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_UNKNOWN_ERR_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1Q-SQLError_VERSION_ERR_basic" name="1Q-SQLError_VERSION_ERR_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the e.VERSION_ERR exists and its type is number and its value is 2 - Description: Check if the e.VERSION_ERR exists and its type is number and its value is 2">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the e.VERSION_ERR exists and its type is number and its value is 2 - Description: Check if the e.VERSION_ERR exists and its type is number and its value is 2]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLError_VERSION_ERR_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1R-SQLResultSetRowList_item_3_content" name="1R-SQLResultSetRowList_item_3_content" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLResultSetRowList item index of 3 that content_string will be test4 - Description: Check if SQLResultSetRowList item index of 3 that content_string will be test4">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLResultSetRowList item index of 3 that content_string will be test4 - Description: Check if SQLResultSetRowList item index of 3 that content_string will be test4]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSetRowList_item_3_content.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1S-SQLResultSetRowList_item_3_id" name="1S-SQLResultSetRowList_item_3_id" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLResultSetRowList item index of 3 that id_number will be 4 - Description: Check if SQLResultSetRowList item index of 3 that id_number will be 4">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLResultSetRowList item index of 3 that id_number will be 4 - Description: Check if SQLResultSetRowList item index of 3 that id_number will be 4]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSetRowList_item_3_id.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1T-SQLResultSetRowList_item_no_argument" name="1T-SQLResultSetRowList_item_no_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLResultSetRowList.item has no argument that expecting an exception is to be thrown - Description: Check if SQLResultSetRowList.item has no argument that expecting an exception is to be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLResultSetRowList.item has no argument that expecting an exception is to be thrown - Description: Check if SQLResultSetRowList.item has no argument that expecting an exception is to be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSetRowList_item_no_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1U-SQLResultSetRowList_length_0" name="1U-SQLResultSetRowList_length_0" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLResultSetRowList length is 0 with select table of no any rows - Description: Check if the SQLResultSetRowList length is 0 with select table of no any rows">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLResultSetRowList length is 0 with select table of no any rows - Description: Check if the SQLResultSetRowList length is 0 with select table of no any rows]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSetRowList_length_0.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1V-SQLResultSetRowList_length_1" name="1V-SQLResultSetRowList_length_1" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLResultSetRowList length is 1 with select table have one row - Description: Check if the SQLResultSetRowList length is 1 with select table have one row">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLResultSetRowList length is 1 with select table have one row - Description: Check if the SQLResultSetRowList length is 1 with select table have one row]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSetRowList_length_1.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1W-SQLResultSetRowList_length_10" name="1W-SQLResultSetRowList_length_10" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLResultSetRowList length is 10 with select table have 10 rows - Description: Check if the SQLResultSetRowList length is 10 with select table have 10 rows">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLResultSetRowList length is 10 with select table have 10 rows - Description: Check if the SQLResultSetRowList length is 10 with select table have 10 rows]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSetRowList_length_10.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1X-SQLResultSetRowList_length_basic" name="1X-SQLResultSetRowList_length_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of rows.length is number and it's readonly - Description: Check if the type of rows.length is number and it's readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of rows.length is number and it's readonly - Description: Check if the type of rows.length is number and it's readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSetRowList_length_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1Y-SQLResultSet_insertId_insert_3rows" name="1Y-SQLResultSet_insertId_insert_3rows" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the statement inserted 3 rows, the ID of the last row must be the one returned - Description: Check if the statement inserted 3 rows, the ID of the last row must be the one returned">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the statement inserted 3 rows, the ID of the last row must be the one returned - Description: Check if the statement inserted 3 rows, the ID of the last row must be the one returned]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_insertId_insert_3rows.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-1Z-SQLResultSet_insertId_basic" name="1Z-SQLResultSet_insertId_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of r.insertId is number and it's readonly - Description: Check if the type of r.insertId is number and it's readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of r.insertId is number and it's readonly - Description: Check if the type of r.insertId is number and it's readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_insertId_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-20-SQLResultSet_insertId_update" name="20-SQLResultSet_insertId_update" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when do update operation - Description: Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when do update operation">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when do update operation - Description: Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when do update operation]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_insertId_update.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-21-SQLResultSet_rowsAffected_insert" name="21-SQLResultSet_rowsAffected_insert" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the rowsAffected attribute must return one rows that were changed by the insert statement - Description: Check if the rowsAffected attribute must return one rows that were changed by the insert statement">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the rowsAffected attribute must return one rows that were changed by the insert statement - Description: Check if the rowsAffected attribute must return one rows that were changed by the insert statement]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_rowsAffected_insert.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-22-SQLResultSet_rowsAffected_basic" name="22-SQLResultSet_rowsAffected_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of r.rowsAffected is number and it's readonly - Description: Check if the type of r.rowsAffected is number and it's readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of r.rowsAffected is number and it's readonly - Description: Check if the type of r.rowsAffected is number and it's readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_rowsAffected_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-23-SQLResultSet_rowsAffected_select" name="23-SQLResultSet_rowsAffected_select" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the statement did not affected any rows, then the rowsAffected must return zero - Description: Check if the statement did not affected any rows, then the rowsAffected must return zero">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the statement did not affected any rows, then the rowsAffected must return zero - Description: Check if the statement did not affected any rows, then the rowsAffected must return zero]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_rowsAffected_select.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-24-SQLResultSet_rowsAffected_update" name="24-SQLResultSet_rowsAffected_update" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the rowsAffected attribute should return two rows that were changed by the update statement - Description: Check if the rowsAffected attribute should return two rows that were changed by the update statement">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the rowsAffected attribute should return two rows that were changed by the update statement - Description: Check if the rowsAffected attribute should return two rows that were changed by the update statement]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_rowsAffected_update.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-25-SQLResultSet_rows_item" name="25-SQLResultSet_rows_item" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLResultSet rows item(0) returns an type of object - Description: Check if SQLResultSet rows item(0) returns an type of object">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLResultSet rows item(0) returns an type of object - Description: Check if SQLResultSet rows item(0) returns an type of object]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_rows_item.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-26-SQLResultSet_rows_basic" name="26-SQLResultSet_rows_basic" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the type of r.rows is object and it's readonly - Description: Check if the type of r.rows is object and it's readonly">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the type of r.rows is object and it's readonly - Description: Check if the type of r.rows is object and it's readonly]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_rows_basic.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-27-SQLStatementCallback_handleEvent_no_arguments" name="27-SQLStatementCallback_handleEvent_no_arguments" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLStatementCallback handleEvent with no arguments that handleEvent will be invoked - Description: Check if the SQLStatementCallback handleEvent with no arguments that handleEvent will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLStatementCallback handleEvent with no arguments that handleEvent will be invoked - Description: Check if the SQLStatementCallback handleEvent with no arguments that handleEvent will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLStatementCallback_handleEvent_no_arguments.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-28-SQLStatementCallback_handleEvent_select" name="28-SQLStatementCallback_handleEvent_select" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLStatementCallback handleEvent() method with resultSet argument that resultSet.rows.length is 3 - Description: Check if the SQLStatementCallback handleEvent() method with resultSet argument that resultSet.rows.length is 3">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLStatementCallback handleEvent() method with resultSet argument that resultSet.rows.length is 3 - Description: Check if the SQLStatementCallback handleEvent() method with resultSet argument that resultSet.rows.length is 3]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLStatementCallback_handleEvent_select.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-29-SQLStatementCallback_handleEvent_transaction" name="29-SQLStatementCallback_handleEvent_transaction" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLStatementCallback handleEvent() method with SQLTransaction argument that SQLTransaction returns an type of object - Description: Check if the SQLStatementCallback handleEvent() method with SQLTransaction argument that SQLTransaction returns an type of object">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLStatementCallback handleEvent() method with SQLTransaction argument that SQLTransaction returns an type of object - Description: Check if the SQLStatementCallback handleEvent() method with SQLTransaction argument that SQLTransaction returns an type of object]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLStatementCallback_handleEvent_transaction.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2A-SQLStatementCallback_handleEvent_transaction_resultSet" name="2A-SQLStatementCallback_handleEvent_transaction_resultSet" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLStatementCallback handleEvent() method with SQLTransaction and resultSet arguments that resultSet.insertId is 1 - Description: Check if the SQLStatementCallback handleEvent() method with SQLTransaction and resultSet arguments that resultSet.insertId is 1">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLStatementCallback handleEvent() method with SQLTransaction and resultSet arguments that resultSet.insertId is 1 - Description: Check if the SQLStatementCallback handleEvent() method with SQLTransaction and resultSet arguments that resultSet.insertId is 1]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLStatementCallback_handleEvent_transaction_resultSet.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2B-SQLStatementErrorCallback_handleEvent_no_arguments" name="2B-SQLStatementErrorCallback_handleEvent_no_arguments" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLStatementErrorCallback handleEvent() method with no arguments that handleEvent will be invoked - Description: Check if SQLStatementErrorCallback handleEvent() method with no arguments that handleEvent will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLStatementErrorCallback handleEvent() method with no arguments that handleEvent will be invoked - Description: Check if SQLStatementErrorCallback handleEvent() method with no arguments that handleEvent will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLStatementErrorCallback_handleEvent_no_arguments.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2C-SQLStatementErrorCallback_handleEvent_SQLError_CONSTRAINT_ERR" name="2C-SQLStatementErrorCallback_handleEvent_SQLError_CONSTRAINT_ERR" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if executeSql() method insert existing value into primary key column that SQLStatementErrorCallback will be invoked and SQLError.code will be CONSTRAINT_ERR - Description: Check if executeSql() method insert existing value into primary key column that SQLStatementErrorCallback will be invoked and SQLError.code will be CONSTRAINT_ERR">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if executeSql() method insert existing value into primary key column that SQLStatementErrorCallback will be invoked and SQLError.code will be CONSTRAINT_ERR - Description: Check if executeSql() method insert existing value into primary key column that SQLStatementErrorCallback will be invoked and SQLError.code will be CONSTRAINT_ERR]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLStatementErrorCallback_handleEvent_SQLError_CONSTRAINT_ERR.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2D-SQLStatementErrorCallback_handleEvent_SQLError_SYNTAX_ERR" name="2D-SQLStatementErrorCallback_handleEvent_SQLError_SYNTAX_ERR" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if executeSql() method with syntax error that SQLStatementErrorCallback will be invoked and SQLError.code will be SYNTAX_ERR - Description: Check if executeSql() method with syntax error that SQLStatementErrorCallback will be invoked and SQLError.code will be SYNTAX_ERR">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if executeSql() method with syntax error that SQLStatementErrorCallback will be invoked and SQLError.code will be SYNTAX_ERR - Description: Check if executeSql() method with syntax error that SQLStatementErrorCallback will be invoked and SQLError.code will be SYNTAX_ERR]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLStatementErrorCallback_handleEvent_SQLError_SYNTAX_ERR.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2E-SQLStatementErrorCallback_handleEvent_transaction" name="2E-SQLStatementErrorCallback_handleEvent_transaction" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLStatementErrorCallback handleEvent() method with transaction argument that handleEvent will be invoked - Description: Check if SQLStatementErrorCallback handleEvent() method with transaction argument that handleEvent will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLStatementErrorCallback handleEvent() method with transaction argument that handleEvent will be invoked - Description: Check if SQLStatementErrorCallback handleEvent() method with transaction argument that handleEvent will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLStatementErrorCallback_handleEvent_transaction.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2F-SQLStatementErrorCallback_handleEvent_transaction_SQLError" name="2F-SQLStatementErrorCallback_handleEvent_transaction_SQLError" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLStatementErrorCallback handleEvent() method with transaction and SQLError arguments that handleEvent will be invoked - Description: Check if SQLStatementErrorCallback handleEvent() method with transaction and SQLError arguments that handleEvent will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLStatementErrorCallback handleEvent() method with transaction and SQLError arguments that handleEvent will be invoked - Description: Check if SQLStatementErrorCallback handleEvent() method with transaction and SQLError arguments that handleEvent will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLStatementErrorCallback_handleEvent_transaction_SQLError.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2G-SQLTransactionCallback_handleEvent_no_arguments" name="2G-SQLTransactionCallback_handleEvent_no_arguments" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLTransactionCallback handleEvent with no arguments that handleEvent will be invoked - Description: Check if the SQLTransactionCallback handleEvent with no arguments that handleEvent will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLTransactionCallback handleEvent with no arguments that handleEvent will be invoked - Description: Check if the SQLTransactionCallback handleEvent with no arguments that handleEvent will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransactionCallback_handleEvent_no_arguments.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2H-SQLTransactionCallback_handleEvent_SQLTransaction" name="2H-SQLTransactionCallback_handleEvent_SQLTransaction" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLTransactionCallback handleEvent with SQLTransaction argument that handleEvent will be invoked - Description: Check if the SQLTransactionCallback handleEvent with SQLTransaction argument that handleEvent will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLTransactionCallback handleEvent with SQLTransaction argument that handleEvent will be invoked - Description: Check if the SQLTransactionCallback handleEvent with SQLTransaction argument that handleEvent will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransactionCallback_handleEvent_SQLTransaction.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2I-SQLTransactionErrorCallback_handleEvent_SQLError_SYNTAX_ERR" name="2I-SQLTransactionErrorCallback_handleEvent_SQLError_SYNTAX_ERR" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if executeSql() method missing argument that SQLTransactionErrorCallback will be invoked and SQLError.code will be SYNTAX_ERR - Description: Check if executeSql() method missing argument that SQLTransactionErrorCallback will be invoked and SQLError.code will be SYNTAX_ERR">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if executeSql() method missing argument that SQLTransactionErrorCallback will be invoked and SQLError.code will be SYNTAX_ERR - Description: Check if executeSql() method missing argument that SQLTransactionErrorCallback will be invoked and SQLError.code will be SYNTAX_ERR]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransactionErrorCallback_handleEvent_SQLError_SYNTAX_ERR.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2J-SQLTransactionErrorCallback_handleEvent_SQLError_VERSION_ERR" name="2J-SQLTransactionErrorCallback_handleEvent_SQLError_VERSION_ERR" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if changeVersion() method with error oldversion that SQLTransactionErrorCallback will be invoked and SQLError.code will be VERSION_ERR - Description: Check if changeVersion() method with error oldversion that SQLTransactionErrorCallback will be invoked and SQLError.code will be VERSION_ERR">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if changeVersion() method with error oldversion that SQLTransactionErrorCallback will be invoked and SQLError.code will be VERSION_ERR - Description: Check if changeVersion() method with error oldversion that SQLTransactionErrorCallback will be invoked and SQLError.code will be VERSION_ERR]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransactionErrorCallback_handleEvent_SQLError_VERSION_ERR.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2K-SQLTransaction_executeSql_base" name="2K-SQLTransaction_executeSql_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLTransaction.executeSql has all valid arguments that expecting the select statement is to be executed successfully - Description: Check if SQLTransaction.executeSql has all valid arguments that expecting the select statement is to be executed successfully">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLTransaction.executeSql has all valid arguments that expecting the select statement is to be executed successfully - Description: Check if SQLTransaction.executeSql has all valid arguments that expecting the select statement is to be executed successfully]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransaction_executeSql_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2L-SQLTransaction_executeSql_create" name="2L-SQLTransaction_executeSql_create" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the executeSql() method statement create table that successCallback will be invoked - Description: Check if the executeSql() method statement create table that successCallback will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the executeSql() method statement create table that successCallback will be invoked - Description: Check if the executeSql() method statement create table that successCallback will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransaction_executeSql_create.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2M-SQLTransaction_executeSql_errorcallback_substeps_null" name="2M-SQLTransaction_executeSql_errorcallback_substeps_null" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if sql step will be skipped if one substep with error - Description: Check if sql step will be skipped if one substep with error">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if sql step will be skipped if one substep with error - Description: Check if sql step will be skipped if one substep with error]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransaction_executeSql_errorcallback_substeps_null.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2N-SQLTransaction_executeSql_insert" name="2N-SQLTransaction_executeSql_insert" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the executeSql() method statement insert value into table that successCallback will be invoked - Description: Check if the executeSql() method statement insert value into table that successCallback will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the executeSql() method statement insert value into table that successCallback will be invoked - Description: Check if the executeSql() method statement insert value into table that successCallback will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransaction_executeSql_insert.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2O-SQLTransaction_executeSql_no_argument" name="2O-SQLTransaction_executeSql_no_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLTransaction.executeSql has no argument that expecting an exception is to be thrown - Description: Check if SQLTransaction.executeSql has no argument that expecting an exception is to be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLTransaction.executeSql has no argument that expecting an exception is to be thrown - Description: Check if SQLTransaction.executeSql has no argument that expecting an exception is to be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransaction_executeSql_no_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2P-SQLTransaction_executeSql_null_optional_arguments" name="2P-SQLTransaction_executeSql_null_optional_arguments" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if can invoke SQLTransaction.executeSql with only available statement and other parameters are null - Description: Check if can invoke SQLTransaction.executeSql with only available statement and other parameters are null">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if can invoke SQLTransaction.executeSql with only available statement and other parameters are null - Description: Check if can invoke SQLTransaction.executeSql with only available statement and other parameters are null]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransaction_executeSql_null_optional_arguments.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2Q-SQLTransaction_executeSql_null_statement" name="2Q-SQLTransaction_executeSql_null_statement" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if can invoke SQLTransaction.executeSql invoke executeSql with only null statement - Description: Check if can invoke SQLTransaction.executeSql invoke executeSql with only null statement">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if can invoke SQLTransaction.executeSql invoke executeSql with only null statement - Description: Check if can invoke SQLTransaction.executeSql invoke executeSql with only null statement]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransaction_executeSql_null_statement.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2R-SQLTransaction_executeSql_update" name="2R-SQLTransaction_executeSql_update" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the executeSql() method statement update table that successCallback will be invoked - Description: Check if the executeSql() method statement update table that successCallback will be invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the executeSql() method statement update table that successCallback will be invoked - Description: Check if the executeSql() method statement update table that successCallback will be invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransaction_executeSql_update.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2S-window_openDatabase_base" name="2S-window_openDatabase_base" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if window.openDatabase has all valid arguments that expecting a database object is to be returned - Description: Check if window.openDatabase has all valid arguments that expecting a database object is to be returned">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if window.openDatabase has all valid arguments that expecting a database object is to be returned - Description: Check if window.openDatabase has all valid arguments that expecting a database object is to be returned]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_base.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2T-window_openDatabase_callback" name="2T-window_openDatabase_callback" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if openDatabase() method with callback that database will be created successfully - Description: Check if openDatabase() method with callback that database will be created successfully">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if openDatabase() method with callback that database will be created successfully - Description: Check if openDatabase() method with callback that database will be created successfully]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_callback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2U-window_openDatabase_name_empty_string" name="2U-window_openDatabase_name_empty_string" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the argument 'name' of the method window.openDatabase is empty string that expecting a database object is to be returned - Description: Check if the argument 'name' of the method window.openDatabase is empty string that expecting a database object is to be returned">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the argument 'name' of the method window.openDatabase is empty string that expecting a database object is to be returned - Description: Check if the argument 'name' of the method window.openDatabase is empty string that expecting a database object is to be returned]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_name_empty_string.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2V-window_openDatabase_name_null" name="2V-window_openDatabase_name_null" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the argument 'name' of the method window.openDatabase is null that expecting a database object is to be returned - Description: Check if the argument 'name' of the method window.openDatabase is null that expecting a database object is to be returned">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the argument 'name' of the method window.openDatabase is null that expecting a database object is to be returned - Description: Check if the argument 'name' of the method window.openDatabase is null that expecting a database object is to be returned]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_name_null.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2W-window_openDatabase_no_argument" name="2W-window_openDatabase_no_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if window.openDatabase has no argument that expecting an exception is to be thrown - Description: Check if window.openDatabase has no argument that expecting an exception is to be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if window.openDatabase has no argument that expecting an exception is to be thrown - Description: Check if window.openDatabase has no argument that expecting an exception is to be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_no_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2X-window_openDatabase_no_callback" name="2X-window_openDatabase_no_callback" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if openDatabase() method have no set creationCallback that database will be created successfully - Description: Check if openDatabase() method have no set creationCallback that database will be created successfully">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if openDatabase() method have no set creationCallback that database will be created successfully - Description: Check if openDatabase() method have no set creationCallback that database will be created successfully]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_no_callback.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2Y-window_openDatabase_no_estimatedsize" name="2Y-window_openDatabase_no_estimatedsize" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if openDatabase() method have no set estimatedSize value that expecting an exception will be thrown - Description: Check if openDatabase() method have no set estimatedSize value that expecting an exception will be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if openDatabase() method have no set estimatedSize value that expecting an exception will be thrown - Description: Check if openDatabase() method have no set estimatedSize value that expecting an exception will be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_no_estimatedsize.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-2Z-window_openDatabase_version_2point0" name="2Z-window_openDatabase_version_2point0" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if openDatabase() method set version value 2.0 that database will be created successfully - Description: Check if openDatabase() method set version value 2.0 that database will be created successfully">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if openDatabase() method set version value 2.0 that database will be created successfully - Description: Check if openDatabase() method set version value 2.0 that database will be created successfully]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_version_2point0.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-30-window_openDatabase_version_empty_string" name="30-window_openDatabase_version_empty_string" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the argument 'version' of the method window.openDatabase is empty string that expecting a database object is to be returned - Description: Check if the argument 'version' of the method window.openDatabase is empty string that expecting a database object is to be returned">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the argument 'version' of the method window.openDatabase is empty string that expecting a database object is to be returned - Description: Check if the argument 'version' of the method window.openDatabase is empty string that expecting a database object is to be returned]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_version_empty_string.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-31-window_openDatabase_version_null" name="31-window_openDatabase_version_null" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the argument 'version' of the method window.openDatabase is null that expecting a database object is to be returned - Description: Check if the argument 'version' of the method window.openDatabase is null that expecting a database object is to be returned">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the argument 'version' of the method window.openDatabase is null that expecting a database object is to be returned - Description: Check if the argument 'version' of the method window.openDatabase is null that expecting a database object is to be returned]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_version_null.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-32-WorkerUtils_openDatabaseSync_no_argument" name="32-WorkerUtils_openDatabaseSync_no_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if WorkerUtils.openDatabaseSync has no argument that expecting an exception is to be thrown - Description: Check if WorkerUtils.openDatabaseSync has no argument that expecting an exception is to be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if WorkerUtils.openDatabaseSync has no argument that expecting an exception is to be thrown - Description: Check if WorkerUtils.openDatabaseSync has no argument that expecting an exception is to be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/WorkerUtils_openDatabaseSync_no_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-33-WorkerUtils_openDatabase_exception_INVALID_STATE_ERR" name="33-WorkerUtils_openDatabase_exception_INVALID_STATE_ERR" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if WorkerUtils.openDatabase throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided - Description: Check if WorkerUtils.openDatabase throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if WorkerUtils.openDatabase throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided - Description: Check if WorkerUtils.openDatabase throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/WorkerUtils_openDatabase_exception_INVALID_STATE_ERR.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-34-WorkerUtils_openDatabase_no_argument" name="34-WorkerUtils_openDatabase_no_argument" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if WorkerUtils.openDatabase has no argument that expecting an exception is to be thrown - Description: Check if WorkerUtils.openDatabase has no argument that expecting an exception is to be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if WorkerUtils.openDatabase has no argument that expecting an exception is to be thrown - Description: Check if WorkerUtils.openDatabase has no argument that expecting an exception is to be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/WorkerUtils_openDatabase_no_argument.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-35-Database_changeVersion_oldVersion_error" name="35-Database_changeVersion_oldVersion_error" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if changeVersion() method with error oldVersion that errorCallback will be called - Description: Check if changeVersion() method with error oldVersion that errorCallback will be called">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if changeVersion() method with error oldVersion that errorCallback will be called - Description: Check if changeVersion() method with error oldVersion that errorCallback will be called]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_changeVersion_oldVersion_error.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-36-Database_readTransaction_insert_operation" name="36-Database_readTransaction_insert_operation" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if Database.readTransaction() method throws an SYNTAX_ERR exception when run readRransaction to execute the write database operations - Description: Check if Database.readTransaction() method throws an SYNTAX_ERR exception when run readRransaction to execute the write database operations">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if Database.readTransaction() method throws an SYNTAX_ERR exception when run readRransaction to execute the write database operations - Description: Check if Database.readTransaction() method throws an SYNTAX_ERR exception when run readRransaction to execute the write database operations]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_readTransaction_insert_operation.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-37-Database_readTransaction_update_operation" name="37-Database_readTransaction_update_operation" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if Database.readTransaction() method throws an SYNTAX_ERR exception when run readRransaction to execute the update database operations - Description: Check if Database.readTransaction() method throws an SYNTAX_ERR exception when run readRransaction to execute the update database operations">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if Database.readTransaction() method throws an SYNTAX_ERR exception when run readRransaction to execute the update database operations - Description: Check if Database.readTransaction() method throws an SYNTAX_ERR exception when run readRransaction to execute the update database operations]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/Database_readTransaction_update_operation.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-38-SQLResultSet_insertId_delete" name="38-SQLResultSet_insertId_delete" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when do delete operation - Description: Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when do delete operation">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when do delete operation - Description: Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when do delete operation]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_insertId_delete.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-39-SQLResultSet_insertId_drop_table" name="39-SQLResultSet_insertId_drop_table" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when drop table - Description: Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when drop table">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when drop table - Description: Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when drop table]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_insertId_drop_table.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3A-SQLResultSet_insertId_exception_INVALID_ACCESS_ERR" name="3A-SQLResultSet_insertId_exception_INVALID_ACCESS_ERR" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the statement did not insert a row, then the attribute must instead raise an INVALID_ACCESS_ERR exception - Description: Check if the statement did not insert a row, then the attribute must instead raise an INVALID_ACCESS_ERR exception">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the statement did not insert a row, then the attribute must instead raise an INVALID_ACCESS_ERR exception - Description: Check if the statement did not insert a row, then the attribute must instead raise an INVALID_ACCESS_ERR exception]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_insertId_exception_INVALID_ACCESS_ERR.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3B-SQLResultSet_insert_result" name="3B-SQLResultSet_insert_result" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the value of SQLResultSet's attribute is correct when do insert opertaion - Description: Check if the value of SQLResultSet's attribute is correct when do insert opertaion">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the value of SQLResultSet's attribute is correct when do insert opertaion - Description: Check if the value of SQLResultSet's attribute is correct when do insert opertaion]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_insert_result.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3C-SQLResultSet_select_result" name="3C-SQLResultSet_select_result" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if invoke executeSql to execute select statement that expecting the value of results is correct - Description: Check if invoke executeSql to execute select statement that expecting the value of results is correct">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if invoke executeSql to execute select statement that expecting the value of results is correct - Description: Check if invoke executeSql to execute select statement that expecting the value of results is correct]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_select_result.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3D-SQLResultSet_select_result_in_readTransaction" name="3D-SQLResultSet_select_result_in_readTransaction" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if invoke executeSql to execute select statement in readTransaction that expecting the value of results is correct - Description: Check if invoke executeSql to execute select statement in readTransaction that expecting the value of results is correct">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if invoke executeSql to execute select statement in readTransaction that expecting the value of results is correct - Description: Check if invoke executeSql to execute select statement in readTransaction that expecting the value of results is correct]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_select_result_in_readTransaction.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3E-SQLResultSet_table_create_result" name="3E-SQLResultSet_table_create_result" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if invoke executeSql to execute create table statuement (non-record relevant statement) that expecting the value of results is correct - Description: Check if invoke executeSql to execute create table statuement (non-record relevant statement) that expecting the value of results is correct">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if invoke executeSql to execute create table statuement (non-record relevant statement) that expecting the value of results is correct - Description: Check if invoke executeSql to execute create table statuement (non-record relevant statement) that expecting the value of results is correct]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_table_create_result.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3F-SQLResultSet_update_result" name="3F-SQLResultSet_update_result" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if invoke executeSql to execute UPDATE statement that expecting the value of results is correct - Description: Check if invoke executeSql to execute UPDATE statement that expecting the value of results is correct">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if invoke executeSql to execute UPDATE statement that expecting the value of results is correct - Description: Check if invoke executeSql to execute UPDATE statement that expecting the value of results is correct]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLResultSet_update_result.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3G-SQLTransaction_executeSql_exception_INVALID_STATE_ERR" name="3G-SQLTransaction_executeSql_exception_INVALID_STATE_ERR" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLTransaction.executeSql should be thrown a INVALID_STATE_ERR exception when no executeSql in transaction - Description: Check if SQLTransaction.executeSql should be thrown a INVALID_STATE_ERR exception when no executeSql in transaction">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLTransaction.executeSql should be thrown a INVALID_STATE_ERR exception when no executeSql in transaction - Description: Check if SQLTransaction.executeSql should be thrown a INVALID_STATE_ERR exception when no executeSql in transaction]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransaction_executeSql_exception_INVALID_STATE_ERR.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3H-SQLTransaction_executeSql_skip_substeps" name="3H-SQLTransaction_executeSql_skip_substeps" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if SQLTransaction execute sql step will be skipped if one substep with error - Description: Check if SQLTransaction execute sql step will be skipped if one substep with error">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if SQLTransaction execute sql step will be skipped if one substep with error - Description: Check if SQLTransaction execute sql step will be skipped if one substep with error]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransaction_executeSql_skip_substeps.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3I-SQLTransaction_executeSql_with_question_in_statement" name="3I-SQLTransaction_executeSql_with_question_in_statement" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLTransaction.executeSql() execute sql with question mark (?) as wildcard that expecting a SYNTAX_ERR exception is to be thrown - Description: Check if the SQLTransaction.executeSql() execute sql with question mark (?) as wildcard that expecting a SYNTAX_ERR exception is to be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLTransaction.executeSql() execute sql with question mark (?) as wildcard that expecting a SYNTAX_ERR exception is to be thrown - Description: Check if the SQLTransaction.executeSql() execute sql with question mark (?) as wildcard that expecting a SYNTAX_ERR exception is to be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransaction_executeSql_with_question_in_statement.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3J-SQLTransaction_executeSql_with_unsupported_keyword" name="3J-SQLTransaction_executeSql_with_unsupported_keyword" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the SQLTransaction.executeSql() execute sql with unsupported keyword that expecting a SYNTAX_ERR exception is to be thrown - Description: Check if the SQLTransaction.executeSql() execute sql with unsupported keyword that expecting a SYNTAX_ERR exception is to be thrown">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the SQLTransaction.executeSql() execute sql with unsupported keyword that expecting a SYNTAX_ERR exception is to be thrown - Description: Check if the SQLTransaction.executeSql() execute sql with unsupported keyword that expecting a SYNTAX_ERR exception is to be thrown]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/SQLTransaction_executeSql_with_unsupported_keyword.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3K-window_example_construct_query" name="3K-window_example_construct_query" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if example of constructing the query using only '?' characters, and then pass the variables in as the second argument - Description: Check if example of constructing the query using only '?' characters, and then pass the variables in as the second argument">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if example of constructing the query using only '?' characters, and then pass the variables in as the second argument - Description: Check if example of constructing the query using only '?' characters, and then pass the variables in as the second argument]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_example_construct_query.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3L-window_example_executesql_substitute_variables" name="3L-window_example_executesql_substitute_variables" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if example of substituting variables into statements without risking SQL injection - Description: Check if example of substituting variables into statements without risking SQL injection">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if example of substituting variables into statements without risking SQL injection - Description: Check if example of substituting variables into statements without risking SQL injection]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_example_executesql_substitute_variables.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3M-window_example_manipulate_database" name="3M-window_example_manipulate_database" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if example of a script using webdatabase API - Description: Check if example of a script using webdatabase API">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if example of a script using webdatabase API - Description: Check if example of a script using webdatabase API]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_example_manipulate_database.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3N-window_openDatabase_creationCallback_version" name="3N-window_openDatabase_creationCallback_version" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the database having the empty string as its version when the window.openDatabase callback is invoked - Description: Check if the database having the empty string as its version when the window.openDatabase callback is invoked">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the database having the empty string as its version when the window.openDatabase callback is invoked - Description: Check if the database having the empty string as its version when the window.openDatabase callback is invoked]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_creationCallback_version.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3O-window_openDatabase_exception_INVALID_STATE_ERR" name="3O-window_openDatabase_exception_INVALID_STATE_ERR" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if window.openDatabase throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided - Description: Check if window.openDatabase throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if window.openDatabase throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided - Description: Check if window.openDatabase throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_exception_INVALID_STATE_ERR.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3P-window_openDatabase_name_case_sensitive" name="3P-window_openDatabase_name_case_sensitive" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if database names must be compared in a case-sensitive manner when calls window.openDatabase - Description: Check if database names must be compared in a case-sensitive manner when calls window.openDatabase">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if database names must be compared in a case-sensitive manner when calls window.openDatabase - Description: Check if database names must be compared in a case-sensitive manner when calls window.openDatabase]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_name_case_sensitive.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3Q-window_openDatabase_no_creationCallback_version" name="3Q-window_openDatabase_no_creationCallback_version" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if the database is created with the given database version as its version when the window.openDatabase callback is not provided - Description: Check if the database is created with the given database version as its version when the window.openDatabase callback is not provided">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if the database is created with the given database version as its version when the window.openDatabase callback is not provided - Description: Check if the database is created with the given database version as its version when the window.openDatabase callback is not provided]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/window_openDatabase_no_creationCallback_version.html</test_script_entry>
                </description>
            </testcase>
            <testcase id="00-E0-00-1H-3R-WorkerUtils_openDatabaseSync_exception_INVALID_STATE_ERR" name="3R-WorkerUtils_openDatabaseSync_exception_INVALID_STATE_ERR" priority="P0" execution_type="auto" component="common/crosswalk/commonapi/tct-webdatabase-w3c-tests" status="designed" type="compliance" purpose="Objective: Check if WorkerUtils.openDatabaseSync throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided - Description: Check if WorkerUtils.openDatabaseSync throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided">
                <description>
                    <pre_condition>
                    <![CDATA[Objective: Check if WorkerUtils.openDatabaseSync throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided - Description: Check if WorkerUtils.openDatabaseSync throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided]]></pre_condition>
                    <notes>
                    <![CDATA[]]></notes>
                    <test_script_entry>/opt/tct-webdatabase-w3c-tests/webdatabase/WorkerUtils_openDatabaseSync_exception_INVALID_STATE_ERR.html</test_script_entry>
                </description>
            </testcase>
        </set>
    </suite>
</test_definition>